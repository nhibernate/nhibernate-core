projects:
- filePath: NHibernate/NHibernate.csproj
  targetFramework: net461
  concurrentRun: true
  applyChanges: true
  analyzation:
    methodConversion:
    - conversion: Ignore
      name: PostProcessInsert
      containingTypeName: HqlSqlWalker
    - conversion: Ignore
      name: Intercept
      containingTypeName: IInterceptor
    - conversion: Ignore
      name: Intercept
      containingTypeName: IFieldInterceptor
    - conversion: Ignore
      name: InitializeOrGetAssociation
      containingTypeName: AbstractFieldInterceptor
    - conversion: Ignore
      name: InitializeLazyProperty
      containingTypeName: ILazyPropertyInitializer
    - conversion: Ignore
      name: InitializeLazyPropertiesFromDatastore
      containingTypeName: AbstractEntityPersister
    - conversion: Ignore
      name: InitializeLazyPropertiesFromCache
      containingTypeName: AbstractEntityPersister
    - conversion: Ignore
      name: Invoke
      containingTypeName: BasicLazyInitializer
    - conversion: Ignore
      name: SetReadOnly
      containingTypeName: StatefulPersistenceContext
    - conversion: Ignore
      name: Unproxy
      containingTypeName: StatefulPersistenceContext
    - conversion: Ignore
      name: Contains
      containingTypeName: CollectionType
    - conversion: Ignore
      name: GuessClass
      containingTypeName: NHibernateProxyHelper
    - conversion: Ignore
      name: IsPropertyInitialized
      containingTypeName: NHibernateUtil
    - conversion: Ignore
      name: BestGuessEntityName
      containingTypeName: ISession
    - conversion: Ignore
      name: Contains
      containingTypeName: ISession
    - conversion: Ignore
      name: BestGuessEntityName
      containingTypeName: ISessionImplementor
    - conversion: Ignore
      name: Contains
      containingTypeName: ISessionImplementor
    - conversion: Ignore
      name: GetUnsavedVersionValue
      containingTypeName: UnsavedValueFactory
    - conversion: Ignore
      name: ReadSize
      containingTypeName: AbstractPersistentCollection
    - conversion: Ignore
      name: ReadIndexExistence
      containingTypeName: AbstractPersistentCollection
    - conversion: Ignore
      name: ReadElementExistence
      containingTypeName: AbstractPersistentCollection
    - conversion: Ignore
      name: ReadElementByIndex
      containingTypeName: AbstractPersistentCollection
    - conversion: Ignore
      name: Read
      containingTypeName: AbstractPersistentCollection
    - conversion: Ignore
      name: Write
      containingTypeName: AbstractPersistentCollection
    - conversion: Ignore
      name: GetSize
      containingTypeName: ICollectionPersister
    - conversion: Ignore
      name: IndexExists
      containingTypeName: ICollectionPersister
    - conversion: Ignore
      name: ElementExists
      containingTypeName: ICollectionPersister
    - conversion: Ignore
      name: GetElementByIndex
      containingTypeName: ICollectionPersister
    - conversion: Ignore
      name: Exists
      containingTypeName: ICollectionPersister
    - conversion: Ignore
      name: Exists
      containingTypeName: AbstractCollectionPersister
    - conversion: Ignore
      name: QuoteTableAndColumns
      containingTypeName: SchemaMetadataUpdater
    - conversion: Ignore
      name: GetEnumerator
      containingTypeName: DelayedEnumerator
    - conversion: Ignore
      name: GetEnumerator
      containingTypeName: IFutureEnumerable
    - conversion: ToAsync
      name: ExecuteReader
      containingTypeName: IBatcher
    - conversion: ToAsync
      name: ExecuteNonQuery
      containingTypeName: IBatcher
    - conversion: ToAsync
      rule: EventListener
    - conversion: ToAsync
      rule: Cache
    - conversion: ToAsync
      rule: TransactionCompletion      
    typeConversion:
    - conversion: Ignore
      name: EnumerableImpl
    - conversion: Ignore
      name: SystemTransactionContext
      containingTypeName: AdoNetWithSystemTransactionFactory
    - conversion: Ignore
      name: DependentContext
      containingTypeName: AdoNetWithSystemTransactionFactory
    ignoreSearchForAsyncCounterparts:
    - name: GetFieldValue
    - name: IsDBNull
    - name: WriteLine
    ignoreAsyncCounterparts:
    - rule: Obsolete
    callForwarding: true
    cancellationTokens:
      guards: true
      methodParameter:
      - anyInterfaceRule: PubliclyExposedType
        parameter: Optional
      - parameter: Optional
        rule: PubliclyExposedType
      - parameter: Required
      requiresCancellationToken:
      - rule: EventListener
      - rule: Cache
      - rule: TransactionCompletion
    scanMethodBody: true
    scanForMissingAsyncMembers:
    - all: true
  transformation:
    configureAwaitArgument: false
    localFunctions: true
    asyncLock:
      type: NHibernate.Util.AsyncLock
      methodName: LockAsync
    documentationComments:
      addOrReplaceMethodSummary:
        - name: Commit
          containingTypeName: AdoTransaction
          content: |
              /// Commits the <see cref="ITransaction"/> by flushing asynchronously the <see cref="ISession"/>
              /// then committing synchronously the <see cref="DbTransaction"/>.
  registerPlugin:
  - type: AsyncGenerator.Core.Plugins.TransactionScopeAsyncFlowAdder
    assemblyName: AsyncGenerator.Core
  - type: AsyncGenerator.Core.Plugins.EmptyRegionRemover
    assemblyName: AsyncGenerator.Core
- filePath: NHibernate.DomainModel/NHibernate.DomainModel.csproj
  targetFramework: net461
  concurrentRun: true
  applyChanges: true
  analyzation:
    scanMethodBody: true
    scanForMissingAsyncMembers:
    - all: true
- filePath: NHibernate.Test/NHibernate.Test.csproj
  targetFramework: net461
  concurrentRun: true
  applyChanges: true
  analyzation:
    methodConversion:
    - conversion: Copy
      name: AfterTransactionCompletionProcess_EvictsFromCache
    - conversion: Copy
      hasAttributeName: OneTimeSetUpAttribute
    - conversion: Copy
      hasAttributeName: OneTimeTearDownAttribute
    - conversion: Copy
      hasAttributeName: SetUpAttribute
    - conversion: Copy
      hasAttributeName: TearDownAttribute
    - conversion: Smart
      hasAttributeName: TestAttribute
    - conversion: Smart
      hasAttributeName: TheoryAttribute
    asyncExtensionMethods:
      projectFiles:
      - fileName: LinqExtensionMethods.cs
        projectName: NHibernate
    preserveReturnType:
    - hasAttributeName: TestAttribute
    - hasAttributeName: TheoryAttribute
    alwaysAwait:
    - hasAttributeName: TestAttribute
    - hasAttributeName: TheoryAttribute
    - hasAttributeName: SetUpAttribute
    - hasAttributeName: TearDownAttribute
    typeConversion:
    - conversion: Ignore
      name: ObjectAssert
    - conversion: Ignore
      name: LinqReadonlyTestsContext
    - conversion: Ignore
      name: MultiThreadRunner
    - conversion: Ignore
      name: PeVerifier
    - conversion: Ignore
      hasAttributeName: IgnoreAttribute
    - conversion: NewType
      hasAttributeName: TestFixtureAttribute
    - conversion: NewType
      anyBaseTypeRule: HasTestFixtureAttribute
    - conversion: Ignore
      rule: IsTestCase
    - conversion: Ignore
      anyBaseTypeRule: IsTestCase
    ignoreSearchForMethodReferences:
    - hasAttributeName: TheoryAttribute
    - hasAttributeName: TestAttribute
    ignoreDocuments:
    - filePathEndsWith: Linq/MathTests.cs
    - filePathEndsWith: Linq/ExpressionSessionLeakTest.cs
    - filePathEndsWith: Linq/NorthwindDbCreator.cs
    cancellationTokens:
      withoutCancellationToken:
      - hasAttributeName: TestAttribute
      - hasAttributeName: TheoryAttribute
    scanMethodBody: true
    scanForMissingAsyncMembers:
    - all: true
  registerPlugin:
  - type: AsyncGenerator.Core.Plugins.NUnitAsyncCounterpartsFinder
    assemblyName: AsyncGenerator.Core
  - type: AsyncGenerator.Core.Plugins.TransactionScopeAsyncFlowAdder
    assemblyName: AsyncGenerator.Core
methodRules:
- filters:
  - containingTypeName: IAutoFlushEventListener
  - containingTypeName: IFlushEventListener
  - containingTypeName: IDeleteEventListener
  - containingTypeName: ISaveOrUpdateEventListener
  - containingTypeName: IPostCollectionRecreateEventListener
  - containingTypeName: IPostCollectionRemoveEventListener
  - containingTypeName: IPostCollectionUpdateEventListener
  - containingTypeName: IPostDeleteEventListener
  - containingTypeName: IPostInsertEventListener
  - containingTypeName: IPostUpdateEventListener
  - containingTypeName: IPreCollectionRecreateEventListener
  - containingTypeName: IPreCollectionRemoveEventListener
  - containingTypeName: IPreCollectionUpdateEventListener
  - containingTypeName: IPreDeleteEventListener
  - containingTypeName: IPreInsertEventListener
  - containingTypeName: IPreLoadEventListener
  - containingTypeName: IPreUpdateEventListener
  name: EventListener
- filters:
  - containingType: NHibernate.Cache.ICache
    name: Get
  - containingType: NHibernate.Cache.ICache
    name: Put
  - containingType: NHibernate.Cache.ICache
    name: Remove
  - containingType: NHibernate.Cache.ICache
    name: Clear
  - containingType: NHibernate.Cache.ICache
    name: Lock
  - containingType: NHibernate.Cache.ICache
    name: Unlock
  name: Cache
- filters:
  - containingType: NHibernate.Action.IAfterTransactionCompletionProcess
  - containingType: NHibernate.Action.IBeforeTransactionCompletionProcess
  - containingType: NHibernate.Action.EntityAction
    name: BeforeTransactionCompletionProcessImpl  
  name: TransactionCompletion
- filters:
  - containingNamespace: NHibernate
  - containingType: NHibernate.Tool.hbm2ddl.SchemaUpdate
  - containingType: NHibernate.Tool.hbm2ddl.SchemaValidator
  - containingType: NHibernate.Tool.hbm2ddl.SchemaExport
  name: PubliclyExposedType
- filters:
  - hasAttributeName: ObsoleteAttribute
  name: Obsolete
typeRules:
- filters:
  - containingAssemblyName: NHibernate
  name: NHibernateAssembly
- filters:
  - name: TestCase
  name: IsTestCase
- filters:
  - hasAttributeName: TestFixtureAttribute
  name: HasTestFixtureAttribute
