//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using NHibernate.Linq;
using Remotion.Linq.Parsing.ExpressionVisitors;

namespace NHibernate.Multi
{
	using System.Threading.Tasks;
	using System.Threading;

	public partial class LinqBatchItem<T> : QueryBatchItem<T>, ILinqBatchItem
	{

		protected override async Task<IList<T>> GetResultsNonBatchedAsync(CancellationToken cancellationToken)
		{
			cancellationToken.ThrowIfCancellationRequested();
			if (_postExecuteTransformer == null)
			{
				return await (base.GetResultsNonBatchedAsync(cancellationToken)).ConfigureAwait(false);
			}

			return GetTransformedResults(await (Query.ListAsync(cancellationToken)).ConfigureAwait(false));
		}
	}
}
