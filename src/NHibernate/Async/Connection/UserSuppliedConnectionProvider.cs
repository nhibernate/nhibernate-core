//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Data.Common;

namespace NHibernate.Connection
{
	using System.Threading.Tasks;
	using System.Threading;
	public partial class UserSuppliedConnectionProvider : ConnectionProvider
	{

		/// <summary>
		/// Throws an <see cref="InvalidOperationException"/> if this method is called
		/// because the user is responsible for creating <see cref="DbConnection"/>s.
		/// </summary>
		/// <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
		/// <returns>
		/// No value is returned because an <see cref="InvalidOperationException"/> is thrown.
		/// </returns>
		/// <exception cref="InvalidOperationException">
		/// Thrown when this method is called.  User is responsible for creating
		/// <see cref="DbConnection"/>s.
		/// </exception>
		public override Task<DbConnection> GetConnectionAsync(CancellationToken cancellationToken)
		{
			throw new InvalidOperationException("The user must provide an ADO.NET connection - NHibernate is not creating it.");
		}
	}
}
