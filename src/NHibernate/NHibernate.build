<?xml version="1.0" ?>

<project 
	name="NHibernate" 
	default="build" 
	xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd"
>

  <property name="nuspec.destination.filename" value="NHibernate.nuspec" />
  <property name="root.dir" value="../.." />
	<include buildfile="${root.dir}/build-common/common-project.xml" />

	<target name="init" depends="common.init">
		<property name="assembly.description" value="An object persistence library for relational databases." />
		<property name="assembly.allow-partially-trusted-callers" value="true" />
		<property name="clover.instrument" value="true" />
		<property name="project.output" value="${bin.dir}/unmerged/NHibernate.dll" />

		<assemblyfileset id="project.references" basedir="${bin.dir}">
			<include name="System.dll" />
			<include name="System.Transactions.dll" />
			<include name="System.Configuration.dll" />
			<include name="System.XML.dll" />
			<include name="System.Data.dll" />
			<include name="Iesi.Collections.dll" />
			<include name="Antlr3.Runtime.dll" />
			<include name="Remotion.Linq.dll" />
		</assemblyfileset>

		<resourcefileset id="project.resources" prefix="NHibernate" dynamicprefix="true">
			<include name="*.xsd" />
			<include name="**/*.xml" />
			<exclude name="bin/**/*.xml" />
		</resourcefileset>
		
		<fileset id="project.sources">
			<include name="**/*.cs" />
		</fileset>
	</target>

	<target name="generate-assemblyinfo" depends="init common.generate-assemblyinfo" />

	<target name="ilmerge" depends="generate-assemblyinfo common.compile-dll">
		<uptodate property="NHibernate.dll.uptodate">
			<sourcefiles>
				<include name="${bin.dir}/unmerged/NHibernate.dll"/>
			</sourcefiles>
			<targetfiles>
				<include name="${bin.dir}/NHibernate.dll" />
			</targetfiles>
		</uptodate>
		
		<if test="${not NHibernate.dll.uptodate}">
			<mkdir dir="${bin.dir}/merged" />
      
      <!-- Merge everything that should be internal -->
      <copy file="${bin.dir}/unmerged/NHibernate.dll" tofile="${bin.dir}/NHibernate.dll" />
			<copy file="${bin.dir}/unmerged/NHibernate.pdb" tofile="${bin.dir}/NHibernate.pdb" />
			
			<exec program="../../Tools/ILMerge/ILMerge.exe">
				<arg value="/t:library" />
				<arg value="/internalize" />
				<arg value="/keyfile:../NHibernate.snk" />
				<arg value="/out:${bin.dir}/merged/NHibernate.dll" />
				<arg value="${bin.dir}/NHibernate.dll" />
				<arg value="${bin.dir}/Antlr3.Runtime.dll" />
			</exec>

      <delete file="${bin.dir}/Antlr3.Runtime.dll" />
      
      <!-- Merge everything that should be accessible -->
      <copy file="${bin.dir}/merged/NHibernate.dll" tofile="${bin.dir}/NHibernate.dll" />
      <copy file="${bin.dir}/merged/NHibernate.pdb" tofile="${bin.dir}/NHibernate.pdb" />

      <exec program="../../Tools/ILMerge/ILMerge.exe">
        <arg value="/t:library" />
        <arg value="/keyfile:../NHibernate.snk" />
        <arg value="/out:${bin.dir}/merged/NHibernate.dll" />
        <arg value="${bin.dir}/NHibernate.dll" />
        <arg value="${bin.dir}/Remotion.Linq.dll" />
      </exec>

      <delete file="${bin.dir}/Remotion.Linq.dll" />
      
      <!-- Put merged files in appropriate places -->
      <move file="${bin.dir}/merged/NHibernate.dll" tofile="${bin.dir}/NHibernate.dll" />
			<move file="${bin.dir}/merged/NHibernate.pdb" tofile="${bin.dir}/NHibernate.pdb" />
			<delete dir="${bin.dir}/merged" />
		</if>
	</target>
	
	<target name="build" description="Build NHibernate" depends="ilmerge">
		<copy file="${bin.dir}/NHibernate.dll" tofile="${root.dir}/${lib.framework.dir}/NHibernate.dll"/>
	</target>

  <target name="nuspec" depends="init nuget.set-properties" description="Create nuspec for NHibernate">
    <property name="nuspec.destination.file" value="${nuget.workingdir}/${nuspec.destination.filename}" />
    <copy file="NHibernate.nuspec.template" tofile="${nuspec.destination.file}"/>
    <xmlpoke file="${nuspec.destination.file}"
             xpath="/package/metadata/dependencies/dependency[@id = 'Iesi.Collections']/@version"
             value="${project.version.numeric}" />
    <xmlpoke file="${nuspec.destination.file}"
             xpath="/package/metadata/version"
             value="${project.version.numeric}" />
  </target>

  <target name="nuget" depends="init nuget.set-properties nuspec">
    <!-- Prepare working dir with file needed by NHibernate.nuspec -->
    <copy file="${bin.dir}/NHibernate.dll" todir="${nuget.workingdir}"/>
	<copy file="${bin.dir}/NHibernate.pdb" todir="${nuget.workingdir}"/>
    <copy file="${bin.dir}/NHibernate.xml" todir="${nuget.workingdir}"/>
    <copy file="${root.dir}/releasenotes.txt" tofile="${nuget.workingdir}/NHibernate.releasenotes.txt"/>
    <exec program="CScript.exe" commandline="${root.dir}/Tools/showdown/showdown.wsf ${root.dir}/README.md ${nuget.workingdir}/NHibernate.readme.html"/>
    <copy file="${root.dir}/lgpl.txt" tofile="${nuget.workingdir}/NHibernate.license.txt"/>
    <copy todir="${nuget.workingdir}">
      <fileset basedir="${root.dir}/src/NHibernate">
        <include name="*.xsd" />
      </fileset>
    </copy>
    <copy todir="${nuget.workingdir}/NHibernateXmlConfigurationTemplates">
      <fileset basedir="../NHibernate.Config.Templates">
        <include name="*"/>
      </fileset>
    </copy>

    <exec basedir="${tools.dir}" workingdir="${nuget.workingdir}" program="NuGet.exe">
      <arg value="pack" />
	  <arg value="-symbols" />
      <arg value="${nuspec.destination.filename}" />
    </exec>
  </target>

</project>
