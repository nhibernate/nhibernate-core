using System;
using System.Linq;
using Antlr.Runtime;

namespace NHibernate.Hql.Ast.ANTLR.Tree
{
	/// <summary>
	/// A select expression that was generated by a FROM element.
	/// Author: josh
	/// Ported by: Steve Strong
	/// </summary>
	[CLSCompliant(false)]
	public class SelectExpressionImpl : FromReferenceNode
	{
		public SelectExpressionImpl(IToken token) : base(token)
		{
		}

		public override void ResolveIndex(IASTNode parent)
		{
			throw new InvalidOperationException();
		}

		// Since v5.4
		[Obsolete("Use overload with aliasCreator parameter instead.")]
		public override void SetScalarColumnText(int i)
		{
			Text = FromElement.RenderScalarIdentifierSelect(i);
		}

		/// <inheritdoc />
		public override string[] SetScalarColumnText(int i, Func<int, int, string> aliasCreator)
		{
			var fragment = FromElement.GetScalarIdentifierSelectFragment(i, aliasCreator);
			Text = fragment.ToSqlStringFragment(false);
			return fragment.GetColumnAliases().ToArray();
		}

		public override void Resolve(bool generateJoin, bool implicitJoin, string classAlias, IASTNode parent)
		{
			// Generated select expressions are already resolved, nothing to do.
			return;
		}
	}
}
