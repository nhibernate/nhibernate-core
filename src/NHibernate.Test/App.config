<?xml version="1.0" encoding="utf-8"?>
<configuration>
	
	<configSections>
		<section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>

	<connectionStrings>
		<add name="TestConnectionString" connectionString="Server=localhost\sqlexpress;Database=nhibernate;Integrated Security=SSPI" />
		<add name="DummyConnectionString" connectionString="TestConnectionString-TestConnectionString" />
	</connectionStrings>

	<runtime>
		<!-- Required by ReflectHelperFixture.TypeFoundInNotLoadedAssembly test -->
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1" applies-to="v2.0.50727">
			<qualifyAssembly partialName="System.Web" fullName="System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
		</assemblyBinding>
	</runtime>



	<!--
		NHiberate configuration
		You don't need to change this section for your own use. You can write your own hibernate.cfg.xml to override all 
		session-factory configuration. Templates are available in NHibernate.Config.Templates folder.
	-->
	<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
		<session-factory name="NHibernate.Test">
			
			<property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>

			<property name="connection.driver_class">NHibernate.Driver.Sql2008ClientDriver</property> <!-- Shouldn't be necessary, but is required by some tests -->
			<property name="connection.connection_string">Server=localhost\sqlexpress;Database=nhibernate;Integrated Security=SSPI</property>
			<property name="connection.provider">NHibernate.Test.DebugConnectionProvider, NHibernate.Test</property>
			<property name="connection.isolation">ReadCommitted</property> <!-- See System.Data.IsolationLevel for valid values -->

			<property name="cache.provider_class">NHibernate.Cache.HashtableCacheProvider, NHibernate</property>
			<property name="cache.use_query_cache">true</property>

			<property name="query.startup_check">false</property>
			<property name="query.substitutions">true 1, false 0, yes 'Y', no 'N'</property>

			<property name="adonet.batch_size">10</property>
			<property name="adonet.wrap_result_sets">false</property>

			<property name="hbm2ddl.keywords">none</property>
			<property name="format_sql">true</property>
			<property name="show_sql">false</property>
			<property name="command_timeout">444</property>

	</session-factory>
	</hibernate-configuration>

	<log4net debug="false">

		<!-- Appenders -->
		<appender name="trace" type="log4net.Appender.TraceAppender, log4net">
			<layout type="log4net.Layout.PatternLayout, log4net">
				<param name="ConversionPattern" value="%d{ABSOLUTE} %-5p %c{1}:%L - %m%n" />
			</layout>
		</appender>
		<appender name="console" type="log4net.Appender.ConsoleAppender, log4net">
			<layout type="log4net.Layout.PatternLayout, log4net">
				<param name="ConversionPattern" value="%d{ABSOLUTE} %-5p %c{1}:%L - %m%n" />
			</layout>
		</appender>
		<appender name="rollingFile" type="log4net.Appender.RollingFileAppender, log4net" >
			<param name="File" value="log.txt" />
			<param name="AppendToFile" value="false" />
			<param name="RollingStyle" value="Date" />
			<param name="DatePattern" value="yyyy.MM.dd" />
			<param name="StaticLogFileName" value="true" />
			<layout type="log4net.Layout.PatternLayout, log4net">
				<param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n" />
			</layout>
		</appender>

		<root>
			<priority value="WARN" />
			<appender-ref ref="console" />
		</root>

		<!-- Loggers -->
		<logger name="NHibernate.Hql.Ast.ANTLR">
			<priority value="OFF" />
		</logger>
		<logger name="NHibernate.SQL">
			<level value="OFF" />
		</logger>
		<logger name="NHibernate.AdoNet.AbstractBatcher">
			<level value="OFF" />
		</logger>
		<logger name="NHibernate.Tool.hbm2ddl.SchemaExport">
			<level value="ERROR" />
		</logger>

	</log4net>

<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1"/></startup>
</configuration>
