//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Data.Common;
using System.Data.SqlClient;
using NHibernate.Engine.Transaction;

namespace NHibernate.Test.MultiTenancy
{
	using System.Threading.Tasks;
	using System.Threading;
	public partial class TenantIsolatatedWork : IIsolatedWork
	{

		public Task DoWorkAsync(DbConnection connection, DbTransaction transaction, CancellationToken cancellationToken)
		{
			var builder = new SqlConnectionStringBuilder(connection.ConnectionString);
			if (builder.ApplicationName != _tenantName)
				return Task.FromException<object>(new HibernateException("Invalid tenant connection"));
			return Task.CompletedTask;
		}
	}
}
