//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections;
using NUnit.Framework;

namespace NHibernate.Test.LazyComponentTest
{
	using System.Threading.Tasks;
	[TestFixture]
	public class LazyComponentTestFixtureAsync : TestCase
	{
		protected override string[] Mappings
		{
			get { return new[] {"LazyComponentTest.Person.hbm.xml"}; }
		}

		protected override string MappingsAssembly
		{
			get { return "NHibernate.Test"; }
		}

		protected override void OnSetUp()
		{
			using (var s = OpenSession())
			using (var t = s.BeginTransaction())
			{
				var person = new Person
				{
					Name = "Gabor",
					Address = new Address
					{
						Country = "HUN",
						City = "Budapest"
					}
				};
				s.Persist(person);
				t.Commit();
			}
		}

		protected override void OnTearDown()
		{
			using (var s = OpenSession())
			using (var t = s.BeginTransaction())
			{
				s.CreateQuery("delete from Person").ExecuteUpdate();
				t.Commit();
			}
		}

		[Test]
		public async Task LazyLoadTestAsync()
		{
			using (var s = OpenSession())
			using (var t = s.BeginTransaction())
			{
				var p = await (s.CreateQuery("from Person p where name='Gabor'").UniqueResultAsync<Person>());
				// make sure component has not been initialized yet
				Assert.That(NHibernateUtil.IsPropertyInitialized(p, "Address"), Is.False);

				await (t.CommitAsync());
			}
		}

		[Test]
		public async Task LazyDeleteTestAsync()
		{
			using (var s = OpenSession())
			using (var t = s.BeginTransaction())
			{
				var p = await (s.CreateQuery("from Person p where name='Gabor'").UniqueResultAsync<Person>());
				// make sure component has not been initialized yet
				Assert.That(NHibernateUtil.IsPropertyInitialized(p, "Address"), Is.False);
				await (s.DeleteAsync(p));
				await (t.CommitAsync());
			}
		}

		[Test]
		public async Task LazyUpdateTestAsync()
		{
			using (var s = OpenSession())
			using (var t = s.BeginTransaction())
			{
				var p = await (s.CreateQuery("from Person p where name='Gabor'").UniqueResultAsync<Person>());
				// make sure component has not been initialized yet
				Assert.That(!NHibernateUtil.IsPropertyInitialized(p, "Address"));

				p.Address.City = "Baja";
				await (s.UpdateAsync(p));

				await (t.CommitAsync());
			}
			using (var s = OpenSession())
			using (var t = s.BeginTransaction())
			{
				var p = await (s.CreateQuery("from Person p where name='Gabor'").UniqueResultAsync<Person>());
				Assert.That(p.Address.City, Is.EqualTo("Baja"));

				await (t.CommitAsync());
			}
		}
	}
}
