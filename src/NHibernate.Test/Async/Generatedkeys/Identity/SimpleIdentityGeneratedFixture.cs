//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Test.Generatedkeys.Identity
{
	using System.Threading.Tasks;
	[TestFixture]
	public class SimpleIdentityGeneratedFixtureAsync : TestCase
	{
		// This test is to check the support of identity generator
		// NH should choose one of the identity-style generation where the Dialect are supporting one of them
		// as identity, sequence-identity (identity.sequence), generated (identity.sequence)
		protected override string[] Mappings
		{
			get { return new[] { "Generatedkeys.Identity.MyEntityIdentity.hbm.xml" }; }
		}

		protected override string MappingsAssembly
		{
			get { return "NHibernate.Test"; }
		}

		[Test]
		public async Task SequenceIdentityGeneratorAsync()
		{
			using (var session = OpenSession())
			using (var tran = session.BeginTransaction())
			{
				var e = new MyEntityIdentity { Name = "entity-1" };
				await (session.SaveAsync(e));

				// this insert should happen immediately!
				Assert.AreEqual(1, e.Id, "id not generated through forced insertion");

				await (session.DeleteAsync(e));
				await (tran.CommitAsync());
				session.Close();
			}
		}
	}
}
