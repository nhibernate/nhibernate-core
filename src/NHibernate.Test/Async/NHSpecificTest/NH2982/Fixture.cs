//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NUnit.Framework;
using NHibernate.Criterion;

namespace NHibernate.Test.NHSpecificTest.NH2982
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		protected override void OnSetUp()
		{
			base.OnSetUp();

			using (ISession session = OpenSession())
			using (ITransaction transaction = session.BeginTransaction())
			{
				var e1 = new Entity { Id = 1, Name = "A" };
				session.Save(e1);
				transaction.Commit();
			}
		}

		protected override void OnTearDown()
		{
			using (ISession session = OpenSession())
			using (ITransaction transaction = session.BeginTransaction())
			{
				session.Delete("from System.Object");
				session.Flush();
				transaction.Commit();
			}

			base.OnTearDown();
		}

		[Test]
		public async Task SimpleExpressionWithProxyAsync()
		{
			using (ISession session = OpenSession())
			using (session.BeginTransaction())
			{
				var a = await (session.LoadAsync<Entity>(1));
				var restriction = Restrictions.Eq("A", a);
				Assert.AreEqual("A = Entity#1", restriction.ToString());
			}
		}
	}
}
