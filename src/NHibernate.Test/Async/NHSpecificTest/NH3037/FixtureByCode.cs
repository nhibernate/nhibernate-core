//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Diagnostics;
using System.Linq;
using NHibernate.Cfg.MappingSchema;
using NHibernate.Linq;
using NHibernate.Mapping.ByCode;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH3037
{
	using System.Threading.Tasks;
	[TestFixture, Explicit("This is a performance test and may take a while.")]
	public class ByCodeFixtureAsync : TestCaseMappingByCode
	{
		protected override HbmMapping GetMappings()
		{
			var mapper = new ModelMapper();
			mapper.Class<Entity>(rc =>
			{
				rc.Id(x => x.Id, m => m.Generator(Generators.Assigned));
				rc.Property(x => x.Name);
			});

			return mapper.CompileMappingForAllExplicitlyAddedEntities();
		}

		[TestCase(10)]
		[TestCase(100)]
		[TestCase(1000)]
		[TestCase(10000)]
		[TestCase(20000)]
		[TestCase(30000)]
		[TestCase(40000)]
		public async Task SortInsertionActionsAsync(int iterations)
		{
			using (ISession session = OpenSession())
			using (ITransaction transaction = session.BeginTransaction())
			{
				for (int i = 1; i <= iterations; i++)
				{
					await (session.SaveAsync(new Entity() { Id = i, Name = i.ToString() }));
				}

				var impl = ((NHibernate.Impl.SessionImpl)session);

				var stopwatch = Stopwatch.StartNew();

				impl.ActionQueue.SortActions();

				stopwatch.Stop();

				System.Console.WriteLine(stopwatch.Elapsed);
			}
		}
	}
}