//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH898
{
	using System.Threading.Tasks;
	[TestFixture]
	public class NH898FixtureAsync : BugTestCase
	{
		protected override string[] Mappings => new[]
		{
			"ClassA.hbm.xml",
			"ClassBParent.hbm.xml",
			"ClassB.hbm.xml",
			"ClassC.hbm.xml",
		};

		protected override bool AppliesTo(Dialect.Dialect dialect)
		{
			return TestDialect.SupportsEmptyInsertsOrHasNonIdentityNativeGenerator;
		}

		[Test]
		public async Task BugAsync()
		{
			using (ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				ClassA a = new ClassA();
				await (s.SaveAsync(a));
				await (t.CommitAsync());
			}

			using (ISession session = OpenSession())
			using (ITransaction t = session.BeginTransaction())
			{
				IList l = await (session.CreateQuery("from ClassA a left join fetch a.B b").ListAsync());
				Console.Write(l.ToString());
				await (t.CommitAsync());
			}

			using(ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				await (s.DeleteAsync("from ClassA"));
				await (s.FlushAsync());
				await (t.CommitAsync());
			}
		}
	}
}
