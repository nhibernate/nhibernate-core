//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH776
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		[Test]
		public async Task ProxiedOneToOneTestAsync()
		{
			//Instantiate and setup associations (all needed to generate the error);
			A a = new A(1, "aaa");

			try
			{
				using (ISession session = Sfi.OpenSession())
				{
					await (session.SaveAsync(a));

					await (session.FlushAsync());
				}

				using (ISession session = Sfi.OpenSession())
				{
					A loadedA = (A) await (session.LoadAsync(typeof(A), 1));
					Assert.IsNull(loadedA.NotProxied);
					Assert.IsNull(loadedA.Proxied,
					              "one-to-one to proxied types not handling missing associated classes correctly (as null)");
				}
			}
			finally
			{
				using (ISession session = OpenSession())
				{
					await (session.DeleteAsync(a));
					await (session.FlushAsync());
				}
			}
		}
	}
}