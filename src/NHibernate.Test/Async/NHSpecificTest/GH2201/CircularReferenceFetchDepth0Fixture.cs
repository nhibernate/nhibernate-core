//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NHibernate.Cfg;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.GH2201
{
	using System.Threading.Tasks;
	[TestFixture]
	public class CircularReferenceFetchDepth0FixtureAsync : BaseFetchFixture
	{
		private int _id2;

		public CircularReferenceFetchDepth0FixtureAsync() : base(0)
		{
		}

		protected override void Configure(Configuration configuration)
		{
			configuration.SetProperty("max_fetch_depth", "0");
			base.Configure(configuration);
		}

		protected override void OnSetUp()
		{
			base.OnSetUp();
			_id2 = _id;
			//Generate another test entity
			base.OnSetUp();
		}

		[Test]
		public async Task QueryOverAsync()
		{
			using (var session = OpenSession())
			{
				Entity e1 = null;
				Entity e2 = null;
				var result = await (session.QueryOver<Entity>(() => e1)
					.JoinEntityAlias(() => e2, () => e2.EntityNumber == e1.EntityNumber && e2.EntityId != _id)
					.Where(e => e.EntityId == _id).SingleOrDefaultAsync());

				VerifyChildrenNotInitialized(result);
				VerifyChildrenNotInitialized(await (session.LoadAsync<Entity>(_id2)));
			}
		}

		[Test]
		public async Task GetAsync()
		{
			using (var session = OpenSession())
			{
				var result = await (session.GetAsync<Entity>(_id));
				VerifyChildrenNotInitialized(result);
			}
		}
	}
}
