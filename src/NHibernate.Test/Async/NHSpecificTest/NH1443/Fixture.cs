//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Text;
using NHibernate.Cfg;
using NHibernate.Tool.hbm2ddl;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH1443
{
	using System.Threading.Tasks;
	using System.Threading;
	[TestFixture]
	public class FixtureAsync
	{
		private static Task BugAsync(Configuration cfg, CancellationToken cancellationToken = default(CancellationToken))
		{
			try
			{
				var su = new SchemaExport(cfg);
				var sb = new StringBuilder(500);
				su.Execute(x => sb.AppendLine(x), false, false);
				string script = sb.ToString();


				if (Dialect.Dialect.GetDialect(cfg.Properties).SupportsIfExistsBeforeTableName)
					Assert.That(script, Does.Match("drop table if exists nhibernate.dbo.Aclass"));
				else
					Assert.That(script, Does.Match("drop table nhibernate.dbo.Aclass"));

				Assert.That(script, Does.Match("create table nhibernate.dbo.Aclass"));
				return Task.CompletedTask;
			}
			catch (System.Exception ex)
			{
				return Task.FromException<object>(ex);
			}
			
		}

		[Test]
		public Task WithDefaultValuesInConfigurationAsync()
		{
			try
			{
				Configuration cfg = TestConfigurationHelper.GetDefaultConfiguration();
				cfg.AddResource("NHibernate.Test.NHSpecificTest.NH1443.AclassWithNothing.hbm.xml", GetType().Assembly);
				cfg.SetProperty(Environment.DefaultCatalog, "nhibernate");
				cfg.SetProperty(Environment.DefaultSchema, "dbo");
				return BugAsync(cfg);
			}
			catch (System.Exception ex)
			{
				return Task.FromException<object>(ex);
			}
		}

		[Test]
		public Task WithDefaultValuesInMappingAsync()
		{
			try
			{
				Configuration cfg = TestConfigurationHelper.GetDefaultConfiguration();
				cfg.AddResource("NHibernate.Test.NHSpecificTest.NH1443.AclassWithDefault.hbm.xml", GetType().Assembly);
				return BugAsync(cfg);
			}
			catch (System.Exception ex)
			{
				return Task.FromException<object>(ex);
			}
		}

		[Test]
		public Task WithSpecificValuesInMappingAsync()
		{
			try
			{
				Configuration cfg = TestConfigurationHelper.GetDefaultConfiguration();
				cfg.AddResource("NHibernate.Test.NHSpecificTest.NH1443.AclassWithSpecific.hbm.xml", GetType().Assembly);
				return BugAsync(cfg);
			}
			catch (System.Exception ex)
			{
				return Task.FromException<object>(ex);
			}
		}

		[Test]
		public Task WithDefaultValuesInConfigurationPriorityToMappingAsync()
		{
			try
			{
				Configuration cfg = TestConfigurationHelper.GetDefaultConfiguration();
				cfg.AddResource("NHibernate.Test.NHSpecificTest.NH1443.AclassWithDefault.hbm.xml", GetType().Assembly);
				cfg.SetProperty(Environment.DefaultCatalog, "somethingDifferent");
				cfg.SetProperty(Environment.DefaultSchema, "somethingDifferent");
				return BugAsync(cfg);
			}
			catch (System.Exception ex)
			{
				return Task.FromException<object>(ex);
			}
		}
	}
}
