//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.Docs.Associations.BiM21
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : TestCase
	{
		protected override string MappingsAssembly
		{
			get { return "NHibernate.Test"; }
		}

		protected override string[] Mappings
		{
			get { return new string[] {"NHSpecificTest.Docs.Associations.BiM21.Mappings.hbm.xml"}; }
		}

		protected override bool AppliesTo(Dialect.Dialect dialect)
		{
			return TestDialect.SupportsEmptyInsertsOrHasNonIdentityNativeGenerator;
		}

		[Test]
		public async Task TestCorrectUseAsync()
		{
			ISession session = OpenSession();

			Person fred = new Person();
			Person wilma = new Person();

			Address flinstoneWay = new Address();

			fred.Address = flinstoneWay;
			wilma.Address = flinstoneWay;

			await (session.SaveAsync(flinstoneWay));
			await (session.SaveAsync(fred));
			await (session.SaveAsync(wilma));

			session.Close();

			// clean up
			session = OpenSession();

			await (session.DeleteAsync("from Person"));
			await (session.DeleteAsync("from Address"));
			await (session.FlushAsync());
			session.Close();
		}

		[Test]
		public void TestErrorUsageAsync()
		{
			using (ISession session = OpenSession())
			{
				Person fred = new Person();
				Person wilma = new Person();

				Address flinstoneWay = new Address();

				fred.Address = flinstoneWay;
				wilma.Address = flinstoneWay;

				Assert.ThrowsAsync<PropertyValueException>(() => session.SaveAsync(fred));
			}
		}
	}
}
