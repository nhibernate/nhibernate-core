//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NHibernate.Cfg;
using NHibernate.Criterion;
using NHibernate.Dialect.Function;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH1313
{
	using System.Threading.Tasks;
	// http://nhibernate.jira.com/browse/NH-1313
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		protected override void Configure(Configuration configuration)
		{
			Dialect.Dialect d = Dialect;
			ISQLFunction toReRegister = d.Functions["current_timestamp"];
			configuration.AddSqlFunction("MyCurrentTime", toReRegister);
		}

		[Test]
		public async Task BugAsync()
		{
			A a = new A("NH1313");

			using (ISession s = OpenSession())
			using (ITransaction tx = s.BeginTransaction())
			{
				await (s.SaveAsync(a));
				await (tx.CommitAsync());
			}
			using (ISession s = OpenSession())
			using (ITransaction tx = s.BeginTransaction())
			{
				DateTime result =
					await (s.CreateCriteria(typeof (A)).SetProjection(new SqlFunctionProjection("MyCurrentTime", NHibernateUtil.DateTime)).
						UniqueResultAsync<DateTime>());
				// we are simply checking that the function is parsed and executed
				await (s.DeleteAsync(a));
				await (tx.CommitAsync());
			}
		}

	}
}