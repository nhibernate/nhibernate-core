//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH2960
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		protected override void OnSetUp()
		{
			using (ISession session = OpenSession())
			using (ITransaction transaction = session.BeginTransaction())
			{
				var e1 = new Entity {Name = "F100"};
				session.Save("FooCode", e1);

				var e2 = new Entity {Name = "B100"};
				session.Save("BarCode", e2);

				session.Flush();
				transaction.Commit();
			}
		}

		protected override void OnTearDown()
		{
			using (ISession session = OpenSession())
			using (ITransaction transaction = session.BeginTransaction())
			{
				session.Delete("from System.Object");

				session.Flush();
				transaction.Commit();
			}
		}

		[Test]
		public async Task QueryWithExplicitEntityNameOnlyReturnsEntitiesOfSameTypeWithMatchingEntityNameAsync()
		{
			using (ISession session = OpenSession())
			using (session.BeginTransaction())
			{
				var result = await (session
					.CreateQuery("from BarCode")
					.ListAsync());
				Assert.AreEqual(1, result.Count);
			}
		}

		[Test]
		public async Task CriteriaQueryWithExplicitEntityNameOnlyReturnsEntitiesOfSameTypeWithMatchingEntityNameAsync()
		{
			using (ISession session = OpenSession())
			using (session.BeginTransaction())
			{
				var result = await (session
					.CreateCriteria("BarCode")
					.ListAsync());
				Assert.AreEqual(1, result.Count);
			}
		}

		[Test]
		public async Task QueryWithImplicitEntityNameReturnsAllEntitiesOfSameTypeAsync()
		{
			using (ISession session = OpenSession())
			using (session.BeginTransaction())
			{
				var result = await (session
					.CreateQuery("from " + typeof(Entity).FullName)
					.ListAsync());
				Assert.AreEqual(2, result.Count);
			}
		}

		[Test]
		public async Task CriteriaQueryWithImplicitEntityNameReturnsAllEntitiesOfSameTypeAsync()
		{
			using (ISession session = OpenSession())
			using (session.BeginTransaction())
			{
				var result = await (session
					.CreateCriteria(typeof(Entity))
					.ListAsync());
				Assert.AreEqual(2, result.Count);
			}
		}
	}
}