//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH1069
{
	using System.Threading.Tasks;
	[TestFixture]
	public class ImproveLazyExceptionFixtureAsync: BugTestCase
	{
		[Test]
		public async Task LazyEntityAsync()
		{
			object savedId = 1;
			using (ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				await (s.SaveAsync(new LazyE(), 1));
				await (t.CommitAsync());
			}

			LazyE le;
			using (ISession s = OpenSession())
			{
				le = await (s.LoadAsync<LazyE>(savedId));
			}
			string n;
			var ex = Assert.Throws<LazyInitializationException>(() => n= le.Name);
			Assert.That(ex.EntityName, Is.EqualTo(typeof (LazyE).FullName));
			Assert.That(ex.EntityId, Is.EqualTo(1));
			Assert.That(ex.Message, Does.Contain(typeof(LazyE).FullName));
			Assert.That(ex.Message, Does.Contain("#1"));
			Console.WriteLine(ex.Message);

			using (ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				await (s.CreateQuery("delete from LazyE").ExecuteUpdateAsync());
				await (t.CommitAsync());
			}
		}

		[Test]
		public async Task LazyCollectionAsync()
		{
			object savedId=1;
			using (ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				await (s.SaveAsync(new LazyE(), savedId));
				await (t.CommitAsync());
			}

			LazyE le;
			using (ISession s = OpenSession())
			{
				le = await (s.GetAsync<LazyE>(savedId));
			}
			var ex = Assert.Throws<LazyInitializationException>(() => le.LazyC.GetEnumerator());
			Assert.That(ex.EntityName, Is.EqualTo(typeof(LazyE).FullName));
			Assert.That(ex.EntityId, Is.EqualTo(1));
			Assert.That(ex.Message, Does.Contain(typeof(LazyE).FullName));
			Assert.That(ex.Message, Does.Contain("#1"));
			Assert.That(ex.Message, Does.Contain(typeof(LazyE).FullName + ".LazyC"));

			using (ISession s = OpenSession())
			using (ITransaction t = s.BeginTransaction())
			{
				await (s.CreateQuery("delete from LazyE").ExecuteUpdateAsync());
				await (t.CommitAsync());
			}
		}
	}
}
