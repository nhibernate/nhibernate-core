//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH3590
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		private Entity _entity;

		protected override void OnSetUp()
		{
			_entity = new Entity();
			using (var s = OpenSession())
			{
				using (var tx = s.BeginTransaction())
				{
					s.Save(_entity);
					tx.Commit();
				}
			}
		}

		[Test]
		public async Task ShouldUpdateAsync()
		{
			_entity.Dates.Add(DateTime.Now);
			using (var s = OpenSession())
			{
				using (var tx = s.BeginTransaction())
				{
					await (s.UpdateAsync(_entity));
					await (tx.CommitAsync());
				}
			}

			using (var s = OpenSession())
			{
				using (s.BeginTransaction())
				{
					Assert.That((await (s.GetAsync<Entity>(_entity.Id))).Dates.Count, Is.EqualTo(1));
				}
			}
		}

		[Test]
		public async Task ShouldMergeAsync()
		{
			_entity.Dates.Add(DateTime.Now);
			using (var s = OpenSession())
			{
				using (var tx = s.BeginTransaction())
				{
					await (s.MergeAsync(_entity));
					await (tx.CommitAsync());
				}
			}

			using (var s = OpenSession())
			{
				using (s.BeginTransaction())
				{
					Assert.That((await (s.GetAsync<Entity>(_entity.Id))).Dates.Count, Is.EqualTo(1));
				}
			}
		}

		protected override void OnTearDown()
		{
			using (var s = OpenSession())
			{
				using (var tx = s.BeginTransaction())
				{
					s.Delete(s.Get<Entity>(_entity.Id));
					tx.Commit();
				}
			}
		}
	}
}