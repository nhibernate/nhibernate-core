//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH2192
{
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		protected override void OnSetUp()
		{
			base.OnSetUp();

			using (var s = OpenSession())
			using (var tx = s.BeginTransaction())
			{
				s.Save(new ContentItem() { Name = "Test" });
				s.Save(new ContentItem() { Name = "Test" });
				s.Save(new ContentItem() { Name = "Test2" });
				tx.Commit();
			}
		}

		protected override void OnTearDown()
		{
			using (var s = OpenSession())
			using (var tx = s.BeginTransaction())
			{
				s.Delete("from ContentItem");
				tx.Commit();
			}

			base.OnTearDown();
		}

		private async Task<int> FetchRowResultsAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			using (var s = Sfi.OpenSession())
			{
				var count =
					(await (s.CreateQuery("select ci from ContentItem ci where ci.Name = :v1")
						.SetParameter("v1", "Test")
						.ListAsync<ContentItem>(cancellationToken)))
						.Count;

				return count;
			}
		}
	}
}
