//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.GH1645
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		private Guid _superParentId;
		private Guid _parentId;

		protected override void OnSetUp()
		{
			using (var session = OpenSession())
			using (var transaction = session.BeginTransaction())
			{
				var p = new Parent();
				session.Save(p);
				_parentId = p.Id;

				_superParentId = (Guid) session.Save(new SuperParent { Parent = p });

				transaction.Commit();
			}
		}

		protected override void OnTearDown()
		{
			using (var session = OpenSession())
			using (var transaction = session.BeginTransaction())
			{
				// The HQL delete does all the job inside the database without loading the entities, but it does
				// not handle delete order for avoiding violating constraints if any. Use
				// session.Delete("from System.Object");
				// instead if in need of having NHbernate ordering the deletes, but this will cause
				// loading the entities in the session.
				session.CreateQuery("delete from System.Object").ExecuteUpdate();

				transaction.Commit();
			}
		}

		[Test]
		public async Task SOEOnLoadAsync()
		{
			using (var session = OpenSession())
			using (session.BeginTransaction())
			{
				var superParent = await (session.LoadAsync<SuperParent>(_superParentId));
				Assert.That(() => NHibernateUtil.InitializeAsync(superParent), Throws.Nothing);
				Assert.That(() => NHibernateUtil.InitializeAsync(superParent.Parent), Throws.Nothing);
			}
		}
	}
}
