//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH1611OneToOneIdentity
{
	using System.Threading.Tasks;
	[TestFixture]
	public class NH1611OneToOneIdentityFixtureAsync : BugTestCase
	{
		protected override void OnTearDown()
		{
			base.OnTearDown();
			using(ISession session = OpenSession())
			{
				using(ITransaction tx = session.BeginTransaction())
				{
					session.Delete("from Adjunct");
					session.Delete("from Primary");
					tx.Commit();
				}
			}
		}

		protected override void OnSetUp()
		{
			using(ISession s = OpenSession())
			{
				using(ITransaction tx = s.BeginTransaction())
				{
					Primary primary = new Primary();
					primary.ID = 5;
					primary.Description = "blarg";
					Adjunct adjunct = new Adjunct();
					adjunct.ID = 5;
					adjunct.AdjunctDescription = "nuts";
					primary.Adjunct = adjunct;
					s.Save(primary);
					s.Save(adjunct);
					tx.Commit();
				}
			}
		}


		[Test]
		public async Task CanQueryOneToOneWithCompositeIdAsync()
		{
			using(ISession s = OpenSession())
			{
				using(ITransaction tx = s.BeginTransaction())
				{
					ICriteria criteria = s.CreateCriteria(typeof (Primary));
					IList<Primary> list = await (criteria.ListAsync<Primary>());
					Assert.AreEqual("blarg", list[0].Description);
					Assert.AreEqual("nuts", list[0].Adjunct.AdjunctDescription);

				}
			}
		}
	
	}
}