//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NHibernate.Dialect;
using NHibernate.SqlTypes;
using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH1619
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		protected override bool AppliesTo(Dialect.Dialect dialect)
		{
			return dialect is PostgreSQLDialect;
		}

		[Test]
		public async Task SavingAndRetrievingAsync()
		{
			var entity = new Dude
			             	{
			             		BooleanValue = true
			             	};

			using (ISession s = OpenSession())
			using (ITransaction tx = s.BeginTransaction())
			{
				await (s.SaveAsync(entity));
				await (tx.CommitAsync());

				Assert.AreEqual(true, (await (s.CreateQuery("from Dude").UniqueResultAsync<Dude>())).BooleanValue);
			}

			using (ISession s = OpenSession())
			using (ITransaction tx = s.BeginTransaction())
			{
				await (s.DeleteAsync(entity));
				await (tx.CommitAsync());
			}
		}
	}
}