//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Test.NHSpecificTest.NH3898
{
	using System.Threading.Tasks;
	[TestFixture]
	public class FixtureAsync : BugTestCase
	{
		protected override void Configure(Cfg.Configuration configuration)
		{
			configuration.SetProperty(Cfg.Environment.UseQueryCache, "false");
			configuration.SetProperty(Cfg.Environment.UseSecondLevelCache, "false");
		}

		protected override void OnTearDown()
		{
			using (var s = OpenSession())
			using (var tx = s.BeginTransaction())
			{
				s.CreateQuery("delete from Employee").ExecuteUpdate();

				tx.Commit();
			}
		}

		[Test]
		public async Task GeneratedInsertUpdateTrueAsync()
		{
			object id;
			using (var session = OpenSession())
			using (var tx = session.BeginTransaction())
			{
				var employee = new Employee
				{
					Name = "Employee 1",
					PromotionCount = 9999999
				};
				id = await (session.SaveAsync(employee));
				await (tx.CommitAsync());
			}

			using (var session = OpenSession())
			using (var tx = session.BeginTransaction())
			{
				var employee = await (session.GetAsync<Employee>(id));
				Assert.That(employee.PromotionCount, Is.EqualTo(0));
				employee.Name = "Employee 1 changed";
				employee.PromotionCount++;
				await (tx.CommitAsync());
			}

			using (var session = OpenSession())
			using (session.BeginTransaction())
			{
				var employee = await (session.GetAsync<Employee>(id));
				Assert.That(employee.Name, Is.EqualTo("Employee 1 changed"));
				Assert.That(employee.PromotionCount, Is.EqualTo(1));
			}
		}
	}
}
