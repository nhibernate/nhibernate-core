//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Linq;
using NHibernate.Dialect;
using NUnit.Framework;
using NHibernate.Linq;

namespace NHibernate.Test.Linq.ByMethod
{
	using System.Threading.Tasks;
	[TestFixture]
	public class GetValueOrDefaultTestsAsync : LinqTestCase
	{
		protected override bool AppliesTo(Dialect.Dialect dialect)
		{
			// It seems that SQLite has a nasty bug with coalesce

			// Following query does not work
			//    SELECT order0_.*
			//    FROM   Orders order0_ 
			//    WHERE  coalesce(order0_.Freight, 0) > @p0;

			// And this one works
			//    SELECT order0_.*
			//    FROM   Orders order0_ 
			//    WHERE  cast(coalesce(order0_.Freight, 0) as NUMERIC) > @p0;

			if (dialect is SQLiteDialect)
				return false;
			return base.AppliesTo(dialect);
		}

		[Test]
		public async Task CoalesceInWhereAsync()
		{
			var orders = await (db.Orders
						   .Where(x => (x.Freight ?? 100) > 0)
						   .ToListAsync());

			Assert.AreEqual(830, orders.Count);
		}

		[Test]
		public async Task GetValueOrDefaultInWhereAsync()
		{
			var orders = await (db.Orders
						   .Where(x => x.Freight.GetValueOrDefault(100) > 0)
						   .ToListAsync());

			Assert.AreEqual(830, orders.Count);
		}

		[Test]
		public async Task GetValueOrDefaultWithSingleArgumentInWhereAsync()
		{
			var orders = await (db.Orders
						   .Where(x => x.Freight.GetValueOrDefault() > 0)
						   .ToListAsync());

			Assert.AreEqual(830, orders.Count);
		}
	}
}
