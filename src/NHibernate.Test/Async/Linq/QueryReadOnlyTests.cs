//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Linq;
using NHibernate.Linq;
using NUnit.Framework;

namespace NHibernate.Test.Linq
{
	using System.Threading.Tasks;
	[TestFixture]
	public class QueryReadOnlyTestsAsync : LinqTestCase
	{
		[Test]
		public async Task CanSetReadOnlyOnLinqQueriesAsync()
		{
			var result = await ((from e in db.Customers
			              where e.CompanyName == "Bon app'"
			              select e).WithOptions(o => o.SetReadOnly(true)).ToListAsync());

			Assert.That(result.All(x => session.IsReadOnly(x)), Is.True);
		}

		[Test]
		public async Task CanSetReadOnlyOnLinqPagingQueryAsync()
		{
			var result = await ((from e in db.Customers
			              select e).Skip(1).Take(1).WithOptions(o => o.SetReadOnly(true)).ToListAsync());

			Assert.That(result.All(x => session.IsReadOnly(x)), Is.True);
		}

		[Test]
		public async Task CanSetReadOnlyBeforeSkipOnLinqOrderedPageQueryAsync()
		{
			var result = await ((from e in db.Customers
			              orderby e.CompanyName
			              select e).WithOptions(o => o.SetReadOnly(true)).Skip(5).Take(5).ToListAsync());

			Assert.That(result.All(x => session.IsReadOnly(x)), Is.True);
		}
	}
}
