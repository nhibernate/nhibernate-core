<?xml version="1.0"?>
<!-- 

  This mapping demonstrates 
  
     (1) composite keys and one-to-many associations on 
         composite keys
      
     (2) use of insert="false" update="false" on an
         association mapping, when the foreign key is
         also part of the primary key
         
     (3) use of a derived property which performs a
         subselect against associated tables
         
     (4) use of <synchronize/> to ensure that auto-flush
         works correctly for an entity with a property
         derived from other tables
         
     
-->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
				   namespace="NHibernate.Test.CompositeId"
				   assembly="NHibernate.Test"
				   default-access="field.camelcase">

    <class name="Order" table="CustomerOrder">
    	<synchronize table="LineItem"/>
    	<synchronize table="Product"/>
    	
    	<composite-id name="Id" class="Order+ID">
    		<key-property name="CustomerId" length="10"/>
    		<key-property name="OrderNumber"/>
    	</composite-id>
    	
    	<property name="OrderDate" not-null="true"/>
    	
    	<property name="Total" 
    		formula="( select sum(li.quantity*p.cost) from LineItem li, Product p where li.productId = p.productId and li.customerId = customerId and li.orderNumber = orderNumber )"/>
    	
    	<many-to-one name="Customer"
    		column="customerId"
    		insert="false"
			update="false" 
			not-null="true"/>

      <many-to-one name="Shipper" fetch="select">
        <column name="ShipperId" not-null="false"/>
        <column name="WarehouseId" />
      </many-to-one>
			
    	<bag name="LineItems"
    		fetch="join" 
    		lazy="false"
    		inverse="true"
    		cascade="save-update">
    		<key>
    			<column name="customerId"/>
    			<column name="orderNumber"/>
    		</key>
    		<one-to-many class="LineItem"/>
    	</bag>
    	
    </class>
 	
</hibernate-mapping>
