<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Data.Services</name>
    </assembly>
    <members>
        <member name="T:System.Data.Services.Parsing.ExpressionLexerUtils">
            <summary>
            Utilities needed by <see cref="T:System.Data.Services.Parsing.ExpressionLexer"/> which are relatively simple and standalone.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexerUtils.SingleSuffixLower">
            <summary>Suffix for single literals.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexerUtils.SingleSuffixUpper">
            <summary>Suffix for single literals.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexerUtils.IsNumeric(System.Data.Services.Parsing.ExpressionTokenKind)">
            <summary>Whether the specified token identifier is a numeric literal.</summary>
            <param name="id">Token to check.</param>
            <returns>true if it's a numeric literal; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexerUtils.IsInfinityOrNaNDouble(System.String)">
            <summary>
            Checks if the <paramref name="tokenText"/> is INF or NaN.
            Internal for testing only.
            </summary>
            <param name="tokenText">Input token.</param>
            <returns>true if match found, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexerUtils.IsInfinityLiteralDouble(System.String)">
            <summary>
            Checks whether <paramref name="text"/> equals to 'INF'
            Internal for testing only
            </summary>
            <param name="text">Text to look in.</param>
            <returns>true if the substring is equal using an ordinal comparison; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexerUtils.IsInfinityOrNanSingle(System.String)">
            <summary>
            Checks if the <paramref name="tokenText"/> is INFf/INFF or NaNf/NaNF.
            Internal for testing only.
            </summary>
            <param name="tokenText">Input token.</param>
            <returns>true if match found, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexerUtils.IsInfinityLiteralSingle(System.String)">
            <summary>
            Checks whether <paramref name="text"/> EQUALS to 'INFf' or 'INFF'.
            Internal for testing only.
            </summary>
            <param name="text">Text to look in.</param>
            <returns>true if the substring is equal using an ordinal comparison; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Data.OData.Json.JsonSharedUtils">
            <summary>
            Shared JSON util code for ODataLib and Server.
            </summary>
        </member>
        <member name="M:Microsoft.Data.OData.Json.JsonSharedUtils.IsDoubleValueSerializedAsString(System.Double)">
            <summary>
            Determines if the given double is serialized as a string in JSON.
            </summary>
            <param name="value">The value to check.</param>
            <returns>true if the value should be written as a string, false if should be written as a JSON number.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Json.JsonSharedUtils.ValueTypeMatchesJsonType(Microsoft.Data.OData.ODataPrimitiveValue,Microsoft.Data.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Determines if the given primitive value is of a basic type where we can rely on just the JSON representation to convey type information.
            If so, we don't have to write the type name.
            </summary>
            <param name="primitiveValue">The primitive value in question.</param>
            <param name="valueTypeReference">The type of the primitive value.</param>
            <returns>true if the given primitive value is of a basic JSON type, false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.ODataValueUtils">
            <summary>
            Class with utility methods to deal with values in ODataLib.
            </summary>
        </member>
        <member name="M:System.Data.Services.ODataValueUtils.ToODataValue(System.Object)">
            <summary>
            Converts an object to an ODataValue. If the given object is already an ODataValue (such as an ODataCompleValue, ODataCollectionValue, etc.), the original object will be returned.
            </summary>
            <param name="objectToConvert">The object to convert to an ODataValue</param>
            <returns>The given object as an ODataValue.</returns>
        </member>
        <member name="M:System.Data.Services.ODataValueUtils.FromODataValue(Microsoft.Data.OData.ODataValue)">
            <summary>
            Converts an ODataValue to the old style of representing values, where null values are null and primitive values are just the direct primitive (no longer wrapped by ODataPrimitiveValue).
            All other value types, such as ODataComplexValue and ODataCollectionValue are returned unchanged.
            </summary>
            <param name="odataValue">The value to convert.</param>
            <returns>The value behind the given ODataValue.</returns>
        </member>
        <member name="T:System.Data.Services.SimpleLazy`1">
            <summary>
            A simple implementation of LazyOfT since the framework version is not available in all platforms we compile this code in...
            </summary>
            <typeparam name="T">Type to lazy create.</typeparam>
        </member>
        <member name="F:System.Data.Services.SimpleLazy`1.mutex">
            <summary>
            For thread safty in creating the value.
            </summary>
        </member>
        <member name="F:System.Data.Services.SimpleLazy`1.factory">
            <summary>
            The factory method to create the lazy instance.
            </summary>
        </member>
        <member name="F:System.Data.Services.SimpleLazy`1.value">
            <summary>
            Holds the lazy instance to create.
            </summary>
        </member>
        <member name="F:System.Data.Services.SimpleLazy`1.valueCreated">
            <summary>
            true if the factory method has been called, false otherwise.
            </summary>
        </member>
        <member name="M:System.Data.Services.SimpleLazy`1.#ctor(System.Func{`0})">
            <summary>
            Creates an instance of ODataLazyOfT.
            </summary>
            <param name="factory">The factory method to create the lazy instance.</param>
        </member>
        <member name="M:System.Data.Services.SimpleLazy`1.#ctor(System.Func{`0},System.Boolean)">
            <summary>
            Creates an instance of ODataLazyOfT.
            </summary>
            <param name="factory">The factory method to create the lazy instance.</param>
            <param name="isThreadSafe">true if the value will be created in a thread safety, false assume single thread access to Value.</param>
        </member>
        <member name="M:System.Data.Services.SimpleLazy`1.CreateValue">
            <summary>
            Creates the value.
            </summary>
        </member>
        <member name="P:System.Data.Services.SimpleLazy`1.Value">
            <summary>
            Creates the value if it hasn't already been created and returns the created value.
            </summary>
        </member>
        <member name="T:System.Data.Services.ALinqExpressionVisitor">
            <summary>
            base vistor class for walking an expression tree bottom up.
            </summary>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Main visit method for ALinqExpressionVisitor
            </summary>
            <param name="exp">The expression to visit</param>
            <returns>The visited expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            MemberBinding visit method
            </summary>
            <param name="binding">The MemberBinding expression to visit</param>
            <returns>The visited MemberBinding expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitElementInitializer(System.Linq.Expressions.ElementInit)">
            <summary>
            ElementInit visit method
            </summary>
            <param name="initializer">The ElementInit expression to visit</param>
            <returns>The visited ElementInit expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            UnaryExpression visit method
            </summary>
            <param name="u">The UnaryExpression expression to visit</param>
            <returns>The visited UnaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            BinaryExpression visit method
            </summary>
            <param name="b">The BinaryExpression expression to visit</param>
            <returns>The visited BinaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitTypeIs(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            TypeBinaryExpression visit method
            </summary>
            <param name="b">The TypeBinaryExpression expression to visit</param>
            <returns>The visited TypeBinaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            ConstantExpression visit method
            </summary>
            <param name="c">The ConstantExpression expression to visit</param>
            <returns>The visited ConstantExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            ConditionalExpression visit method
            </summary>
            <param name="c">The ConditionalExpression expression to visit</param>
            <returns>The visited ConditionalExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            ParameterExpression visit method
            </summary>
            <param name="p">The ParameterExpression expression to visit</param>
            <returns>The visited ParameterExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            MemberExpression visit method
            </summary>
            <param name="m">The MemberExpression expression to visit</param>
            <returns>The visited MemberExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            MethodCallExpression visit method
            </summary>
            <param name="m">The MethodCallExpression expression to visit</param>
            <returns>The visited MethodCallExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>
            Expression list visit method
            </summary>
            <param name="original">The expression list to visit</param>
            <returns>The visited expression list</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            MemberAssignment visit method
            </summary>
            <param name="assignment">The MemberAssignment to visit</param>
            <returns>The visited MemberAssignmentt</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            MemberMemberBinding visit method
            </summary>
            <param name="binding">The MemberMemberBinding to visit</param>
            <returns>The visited MemberMemberBinding</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            MemberListBinding visit method
            </summary>
            <param name="binding">The MemberListBinding to visit</param>
            <returns>The visited MemberListBinding</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Binding List visit method
            </summary>
            <param name="original">The Binding list to visit</param>
            <returns>The visited Binding list</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            ElementInit expression list visit method
            </summary>
            <param name="original">The ElementInit expression list  to visit</param>
            <returns>The visited ElementInit expression list </returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            LambdaExpression visit method
            </summary>
            <param name="lambda">The LambdaExpression to visit</param>
            <returns>The visited LambdaExpression</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            NewExpression visit method
            </summary>
            <param name="nex">The NewExpression to visit</param>
            <returns>The visited NewExpression</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            MemberInitExpression visit method
            </summary>
            <param name="init">The MemberInitExpression to visit</param>
            <returns>The visited MemberInitExpression</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            ListInitExpression visit method
            </summary>
            <param name="init">The ListInitExpression to visit</param>
            <returns>The visited ListInitExpression</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            NewArrayExpression visit method
            </summary>
            <param name="na">The NewArrayExpression to visit</param>
            <returns>The visited NewArrayExpression</returns>
        </member>
        <member name="M:System.Data.Services.ALinqExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            InvocationExpression visit method
            </summary>
            <param name="iv">The InvocationExpression to visit</param>
            <returns>The visited InvocationExpression</returns>
        </member>
        <member name="T:System.Data.Services.ParameterReplacerVisitor">
            <summary>Provides an expression visitor that can replace a <see cref="T:System.Linq.Expressions.ParameterExpression"/>.</summary>
        </member>
        <member name="F:System.Data.Services.ParameterReplacerVisitor.newExpression">
            <summary>Expression to replace with.</summary>
        </member>
        <member name="F:System.Data.Services.ParameterReplacerVisitor.oldParameter">
            <summary>Parameter to replace.</summary>
        </member>
        <member name="M:System.Data.Services.ParameterReplacerVisitor.#ctor(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ParameterReplacerVisitor"/> instance.</summary>
            <param name="oldParameter">Parameter to replace.</param>
            <param name="newExpression">Expression to replace with.</param>
        </member>
        <member name="M:System.Data.Services.ParameterReplacerVisitor.Replace(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Replaces the occurences of <paramref name="oldParameter"/> for <paramref name="newExpression"/> in
            <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression to perform replacement on.</param>
            <param name="oldParameter">Parameter to replace.</param>
            <param name="newExpression">Expression to replace with.</param>
            <returns>A new expression with the replacement performed.</returns>
        </member>
        <member name="M:System.Data.Services.ParameterReplacerVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>ParameterExpression visit method.</summary>
            <param name="p">The ParameterExpression expression to visit</param>
            <returns>The visited ParameterExpression expression </returns>
        </member>
        <member name="T:System.Data.Services.ReferenceEqualityComparer">
            <summary>Equality comparer implementation that uses reference equality.</summary>
        </member>
        <member name="M:System.Data.Services.ReferenceEqualityComparer.#ctor">
            <summary>Initializes a new <see cref="T:System.Data.Services.ReferenceEqualityComparer"/> instance.</summary>
        </member>
        <member name="M:System.Data.Services.ReferenceEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>Determines whether two objects are the same.</summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>true if both are the same; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ReferenceEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>Serves as hashing function for collections.</summary>
            <param name="obj">Object to hash.</param>
            <returns>
            Hash code for the object; shouldn't change through the lifetime 
            of <paramref name="obj"/>.
            </returns>
        </member>
        <member name="T:System.Data.Services.ReferenceEqualityComparer`1">
            <summary>
            Use this class to compare objects by reference in collections such as 
            dictionary or hashsets.
            </summary>
            <typeparam name="T">Type of objects to compare.</typeparam>
            <remarks>
            Typically accesses statically as eg 
            ReferenceEqualityComparer&lt;Expression&gt;.Instance.
            </remarks>
        </member>
        <member name="F:System.Data.Services.ReferenceEqualityComparer`1.instance">
            <summary>Single instance per 'T' for comparison.</summary>
        </member>
        <member name="M:System.Data.Services.ReferenceEqualityComparer`1.#ctor">
            <summary>Initializes a new <see cref="T:System.Data.Services.ReferenceEqualityComparer"/> instance.</summary>
        </member>
        <member name="M:System.Data.Services.ReferenceEqualityComparer`1.Equals(`0,`0)">
            <summary>Determines whether two objects are the same.</summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>true if both are the same; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ReferenceEqualityComparer`1.GetHashCode(`0)">
            <summary>Serves as hashing function for collections.</summary>
            <param name="obj">Object to hash.</param>
            <returns>
            Hash code for the object; shouldn't change through the lifetime 
            of <paramref name="obj"/>.
            </returns>
        </member>
        <member name="P:System.Data.Services.ReferenceEqualityComparer`1.Instance">
            <summary>Returns a singleton instance for this comparer type.</summary>
        </member>
        <member name="T:System.Data.Services.UriUtil">
            <summary>
            static utility functions for uris
            </summary>
        </member>
        <member name="M:System.Data.Services.UriUtil.UriToString(System.Uri)">
            <summary>
            Turn Uri instance into string representation
            This is needed because Uri.ToString unescapes the string
            </summary>
            <param name="uri">The uri instance</param>
            <returns>The string representation of the uri</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.ReadSegmentValue(System.String)">
            <summary>
            Read the identifier from the uri segment value
            </summary>
            <param name="segment">One of the segments as returned by Uri.Segments method.</param>
            <returns>The segment identifier after stripping the last '/' character and unescaping the identifier.</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.IsBaseOf(System.Uri,System.Uri)">
            <summary>is the serviceRoot the base of the request uri</summary>
            <param name="baseUriWithSlash">baseUriWithSlash</param>
            <param name="requestUri">requestUri</param>
            <returns>true if the serviceRoot is the base of the request uri</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.UriInvariantInsensitiveIsBaseOf(System.Uri,System.Uri)">
            <summary>
            Determines whether the <paramref name="current"/> Uri instance is a 
            base of the specified Uri instance. 
            </summary>
            <param name="current">Candidate base URI.</param>
            <param name="uri">The specified Uri instance to test.</param>
            <returns>true if the current Uri instance is a base of uri; otherwise, false.</returns>
        </member>
        <member name="M:System.Data.Services.UriUtil.CreateBaseComparableUri(System.Uri)">
            <summary>Creates a URI suitable for host-agnostic comparison purposes.</summary>
            <param name="uri">URI to compare.</param>
            <returns>URI suitable for comparison.</returns>
        </member>
        <member name="T:System.Data.Services.CommonUtil">
            <summary>
            Common defintions and functions for the server and client lib
            </summary>
            <summary>
            Common defintions and functions for ALL product assemblies
            </summary>
        </member>
        <member name="F:System.Data.Services.CommonUtil.unsupportedTypes">
            <summary>
            List of types unsupported by the client
            </summary>
        </member>
        <member name="M:System.Data.Services.CommonUtil.IsUnsupportedType(System.Type)">
            <summary>
            Test whether a type is unsupported by the client lib
            </summary>
            <param name="type">The type to test</param>
            <returns>Returns true if the type is not supported</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.GetCollectionItemTypeName(System.String,System.Boolean)">
            <summary>
            Returns collection item type name or null if the provided type name is not a collection.
            </summary>
            <param name="typeName">Collection type name read from payload.</param>
            <param name="isNested">Whether it is a nested (recursive) call.</param>
            <returns>Collection element type name or null if not a collection.</returns>
            <remarks>
            The following rules are used for collection type names:
            - it has to start with "Collection(" and end with ")" - trailing and leading whitespaces make the type not to be recognized as collection. 
            - there is to be no characters (including whitespaces) between "Collection" and "(" - otherwise it won't be recognized as collection
            - collection item type name has to be a non-empty string - i.e. "Collection()" won't be recognized as collection
            - nested collection - e.g. "Collection(Collection(Edm.Int32))" - are not supported - we will throw
            Note the following are examples of valid type names which are not collection:
            - "Collection()"
            - " Collection(Edm.Int32)"
            - "Collection (Edm.Int32)"
            - "Collection("
            If the type name is not recognized as a collection it will be eventually passed to type resolver if it is not a known primitive type.
            </remarks>
        </member>
        <member name="M:System.Data.Services.CommonUtil.ReadEmptyElement(System.Xml.XmlReader)">
            <summary>
            checks whether the given xml reader element is empty or not.
            This method reads over the start tag and if this returns false,
            one needs to throw an appropriate exception
            </summary>
            <param name="reader">reader instance.</param>
            <returns>true if the current element is empty. Otherwise false.</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.ConvertToODataVersion(System.Data.Services.Common.DataServiceProtocolVersion)">
            <summary>
            Convert the DataServiceProtocolVersion to ODataVersion.
            </summary>
            <param name="maxProtocolVersion">DataServiceProtocolVersion value to convert.</param>
            <returns>an ODataVersion value for the given DataServiceProtocolVersion value.</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.ConvertToODataVersion(System.Version)">
            <summary>
            Converts the given version instance to ODataVersion enum.
            </summary>
            <param name="version">Version instance containing the response payload.</param>
            <returns>ODataVersion enum value for the given version.</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.GetModelTypeName(System.Type)">
            <summary>
            Gets the type name (without namespace) of the specified <paramref name="type"/>,
            appropriate as an externally-visible type name.
            </summary>
            <param name="type">Type to get name for.</param>
            <returns>The type name for <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.GetModelTypeNamespace(System.Type)">
            <summary>
            Gets the type namespace of the specified <paramref name="type"/>,
            appropriate as an externally-visible type name.
            </summary>
            <param name="type">Type to get namespace for.</param>
            <returns>The namespace for <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.TryReadVersion(System.String,System.Collections.Generic.KeyValuePair{System.Version,System.String}@)">
            <summary>Tries to read a WCF Data Service version string.</summary>
            <param name="text">Text to read.</param>
            <param name="result">Parsed version and trailing text.</param>
            <returns>true if the version was read successfully; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.CommonUtil.SetDefaultMessageQuotas(Microsoft.Data.OData.ODataMessageQuotas)">
            <summary>
            Set the message quota limits for WCF Data services server.
            </summary>
            <param name="messageQuotas">Instance of ODataMessageQuotas.</param>
        </member>
        <member name="F:System.Data.Services.CommonUtil.OutOfMemoryType">
            <summary>Type of OutOfMemoryException.</summary>
        </member>
        <member name="F:System.Data.Services.CommonUtil.StackOverflowType">
            <summary>Type of StackOverflowException.</summary>
        </member>
        <member name="F:System.Data.Services.CommonUtil.ThreadAbortType">
            <summary>Type of ThreadAbortException.</summary>
        </member>
        <member name="M:System.Data.Services.CommonUtil.IsCatchableExceptionType(System.Exception)">
            <summary>
            Determines whether the specified exception can be caught and 
            handled, or whether it should be allowed to continue unwinding.
            </summary>
            <param name="e"><see cref="T:System.Exception"/> to test.</param>
            <returns>
            true if the specified exception can be caught and handled; 
            false otherwise.
            </returns>
        </member>
        <member name="T:Microsoft.Data.OData.Atom.AtomConstants">
            <summary>
            Constant values related to the ATOM format.
            </summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlNamespacesNamespace">
            <summary>'http://www.w3.org/2000/xmlns/' - namespace for namespace declarations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlNamespace">
            <summary>Attribute use to add xml: namespaces specific attributes.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlnsNamespacePrefix">
            <summary> Schema Namespace prefix For xmlns.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlNamespacePrefix">
            <summary> Schema Namespace prefix For xml.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlBaseAttributeName">
            <summary>XML attribute value to indicate the base URI for a document or element.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlLangAttributeName">
            <summary>Name of the xml:lang attribute.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlSpaceAttributeName">
            <summary>Name of the xml:space attribute.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.XmlPreserveSpaceAttributeValue">
            <summary>'preserve' value for the xml:space attribute.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataMetadataNamespace">
            <summary>XML namespace for data service annotations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataMetadataNamespacePrefix">
            <summary>XML namespace prefix for data service annotations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNamespace">
            <summary>XML namespace for data services.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNamespacePrefix">
            <summary>Prefix for data services namespace.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataETagAttributeName">
            <summary>OData attribute which indicates the etag value for the declaring entry element.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNullAttributeName">
            <summary>OData attribute which indicates the null value for the element.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataCountElementName">
            <summary>OData element name for the 'count' element</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataSchemeNamespace">
            <summary>OData scheme namespace for data services category scheme in atom:category elements.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataStreamPropertyMediaResourceSegmentName">
            <summary>OData stream property 'mediaresource' Uri segment name used in named stream link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataStreamPropertyEditMediaSegmentName">
            <summary>OData stream property 'edit-media' Uri segment name used in named stream link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataStreamPropertyMediaResourceRelatedLinkRelationPrefix">
            <summary>OData stream property prefix for named stream 'mediaresource' related link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataStreamPropertyEditMediaRelatedLinkRelationPrefix">
            <summary>OData stream property prefix for named stream 'edit-media' related link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNavigationPropertiesRelatedSegmentName">
            <summary>OData navigation properties 'related' Uri segment name used in navigation link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNavigationPropertiesRelatedLinkRelationPrefix">
            <summary>OData navigation properties prefix for navigation link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNavigationPropertiesAssociationRelatedSegmentName">
            <summary>OData navigation properties 'relatedlinks' Uri segment name used in association link relations.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNavigationPropertiesAssociationLinkRelationPrefix">
            <summary>OData association link prefix for relation attribute.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataInlineElementName">
            <summary>'Inline' - wrapping element for inlined entry/feed content.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataErrorElementName">
            <summary>Name of the error element for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataErrorCodeElementName">
            <summary>Name of the error code element for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataErrorMessageElementName">
            <summary>Name of the error message element for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataInnerErrorElementName">
            <summary>Name of the inner error message element for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataInnerErrorMessageElementName">
            <summary>Name of the message element in inner errors for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataInnerErrorTypeElementName">
            <summary>Name of the type element in inner errors for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataInnerErrorStackTraceElementName">
            <summary>Name of the stack trace element in inner errors for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataInnerErrorInnerErrorElementName">
            <summary>Name of the inner error element nested in inner errors for Xml error responses.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataCollectionItemElementName">
            <summary>Element name for the items in a collection.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataActionElementName">
            <summary>Element name for m:action.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataFunctionElementName">
            <summary>Element name for m:function.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataOperationMetadataAttribute">
            <summary>Attribute name for m:action|m:function/@metadata.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataOperationTitleAttribute">
            <summary>Attribute name for m:action|m:function/@title.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataOperationTargetAttribute">
            <summary>Attribute name for m:action|m:function/@target.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataLinksElementName">
            <summary>XML element name for the wrapper 'links' element around a sequence of Uris in response to a $links request.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataUriElementName">
            <summary>XML element name for a Uri response to a $links request.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataNextLinkElementName">
            <summary>XML element name for a next link in a response to a $links request.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationElementName">
            <summary>XML element name for an annotation in an ATOM payload.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationTargetAttribute">
            <summary>Attribute name for m:annotation/@target.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationTermAttribute">
            <summary>Attribute name for m:annotation/@term.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationStringAttribute">
            <summary>Attribute name for m:annotation/@string.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationBoolAttribute">
            <summary>Attribute name for m:annotation/@bool.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationDecimalAttribute">
            <summary>Attribute name for m:annotation/@decimal.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationIntAttribute">
            <summary>Attribute name for m:annotation/@int.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.ODataAnnotationFloatAttribute">
            <summary>Attribute name for m:annotation/@float.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomNamespace">
            <summary>Schema namespace for Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomNamespacePrefix">
            <summary>Prefix for the Atom namespace - empty since it is the default namespace.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.NonEmptyAtomNamespacePrefix">
            <summary>Prefix for the Atom namespace used in cases where we need a non-empty prefix.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomEntryElementName">
            <summary>XML element name to mark entry element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomFeedElementName">
            <summary>XML element name to mark feed element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomContentElementName">
            <summary>XML element name to mark content element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomTypeAttributeName">
            <summary>XML element name to mark type attribute in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPropertiesElementName">
            <summary>Element containing property values when 'content' is used for media link entries</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomIdElementName">
            <summary>XML element name to mark id element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomTitleElementName">
            <summary>XML element name to mark title element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomSubtitleElementName">
            <summary>XML element name to mark the subtitle element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomSummaryElementName">
            <summary>XML element name to mark the summary element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishedElementName">
            <summary>XML element name to mark the 'published' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomSourceElementName">
            <summary>XML element name to mark the 'source' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomRightsElementName">
            <summary>XML element name to mark the 'rights' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLogoElementName">
            <summary>XML element name to mark the 'logo' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomAuthorElementName">
            <summary>XML element name to mark the 'author' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomAuthorNameElementName">
            <summary>XML element name to mark the 'author name' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomContributorElementName">
            <summary>XML element name to mark the 'contributor' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomGeneratorElementName">
            <summary>XML element name to mark the 'generator' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomGeneratorUriAttributeName">
            <summary>XML attribute name of the 'uri' attribute of a 'generator' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomGeneratorVersionAttributeName">
            <summary>XML attribute name of the 'version' attribute of a 'generator' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomIconElementName">
            <summary>XML element name to mark the 'icon' element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPersonNameElementName">
            <summary>XML element name to mark the 'name' element in an Atom person construct.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPersonUriElementName">
            <summary>XML element name to mark the 'uri' element in an Atom person construct.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPersonEmailElementName">
            <summary>XML element name to mark the 'email' element in an Atom person construct.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomUpdatedElementName">
            <summary>'updated' - XML element name for ATOM 'updated' element for entries.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomCategoryElementName">
            <summary>'category' - XML element name for ATOM 'category' element for entries.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomCategoryTermAttributeName">
            <summary>'term' - XML attribute name for ATOM 'term' attribute for categories.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomCategorySchemeAttributeName">
            <summary>'scheme' - XML attribute name for ATOM 'scheme' attribute for categories.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomCategoryLabelAttributeName">
            <summary>'scheme' - XML attribute name for ATOM 'label' attribute for categories.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomEditRelationAttributeValue">
            <summary> Atom link relation attribute value for edit links.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomSelfRelationAttributeValue">
            <summary> Atom link relation attribute value for self links.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkElementName">
            <summary>XML element name to mark link element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkRelationAttributeName">
            <summary>XML attribute name of the link relation attribute in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkTypeAttributeName">
            <summary>XML attribute name of the type attribute of a link in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkHrefAttributeName">
            <summary>XML attribute name of the href attribute of a link in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkHrefLangAttributeName">
            <summary>XML attribute name of the hreflang attribute of a link in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkTitleAttributeName">
            <summary>XML attribute name of the title attribute of a link in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomLinkLengthAttributeName">
            <summary>XML attribute name of the length attribute of a link in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomHRefAttributeName">
            <summary>XML element name to mark href attribute element in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.MediaLinkEntryContentSourceAttributeName">
            <summary>Atom source attribute name for the content of media link entries.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomEditMediaRelationAttributeValue">
            <summary>Atom link relation attribute value for edit-media links.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomNextRelationAttributeValue">
            <summary>XML attribute value of the link relation attribute for next page links in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomDeltaRelationAttributeValue">
            <summary>XML attribute value of the link relation attribute for delta links in Atom.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomAlternateRelationAttributeValue">
            <summary>Link relation: alternate - refers to a substitute for this context.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomRelatedRelationAttributeValue">
            <summary>Link relation: related - identifies a related resource.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomEnclosureRelationAttributeValue">
            <summary>Link relation: enclosure - identifies a related resource that is potentially large and might require special handling.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomViaRelationAttributeValue">
            <summary>Link relation: via - identifies a resource that is the source of the information in the link's context.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomDescribedByRelationAttributeValue">
            <summary>Link relation: describedby - refers to a resource providing information about the link's context.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomServiceRelationAttributeValue">
            <summary>Link relation: service - indicates a URI that can be used to retrieve a service document.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomTextConstructTextKind">
            <summary>Atom metadata text construct kind: plain text</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomTextConstructHtmlKind">
            <summary>Atom metadata text construct kind: html</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomTextConstructXHtmlKind">
            <summary>Atom metadata text construct kind: xhtml</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomWorkspaceDefaultTitle">
            <summary>Default title for service document workspaces.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomTrueLiteral">
            <summary>'true' literal</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomFalseLiteral">
            <summary>'false' literal</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.IanaLinkRelationsNamespace">
            <summary>IANA link relations namespace.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingNamespace">
            <summary>The Atom Publishing Protocol (APP) namespace: 'http://www.w3.org/2007/app'.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingServiceElementName">
            <summary>The name of the top-level 'service' element when writing service documents in Xml format.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingWorkspaceElementName">
            <summary>The name of the 'workspace' element when writing service documents in Xml format.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingCollectionElementName">
            <summary>The name of the 'collection' element when writing service documents in Xml format.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingCategoriesElementName">
            <summary>The name of the 'categories' element encountered while reading a service document in XML format.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingAcceptElementName">
            <summary>The name of the 'accept' element encountered while reading a service document in XML format.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingFixedAttributeName">
            <summary>The name of the 'fixed' attribute of an inline categories element in APP.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingFixedYesValue">
            <summary>The value 'yes' of the 'fixed' attribute of an inline categories element in APP.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.AtomPublishingFixedNoValue">
            <summary>The value 'no' of the 'fixed' attribute of an inline categories element in APP.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.GeoRssNamespace">
            <summary>XML namespace for GeoRss format</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.GeoRssPrefix">
            <summary>XML namespace prefix for GeoRss format</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.GmlNamespace">
            <summary>XML namespace for GML format</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Atom.AtomConstants.GmlPrefix">
            <summary>XML namespace prefix for GML format</summary>
        </member>
        <member name="T:Microsoft.Data.OData.DebugUtils">
            <summary>
            Class with utility methods to help with debug only code.
            </summary>
        </member>
        <member name="M:Microsoft.Data.OData.DebugUtils.CheckNoExternalCallers">
            <summary>
            Checks that the method which called this helper method
            was not called by any code outside of the Microsoft.Data.OData.dll.
            </summary>
            <remarks>
            The method is only called when in DEBUG builds, since it's quite expensive and we expect
            all our external callers to run DEBUG builds at least sometimes.
            The method is also called when compiling for FxCop analysis, as we run our official FxCop
            pass on RET build and we need to check that all internal methods call this one to check for accessibility
            even though only in debug builds.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.OData.DebugUtils.CheckNoExternalCallers(System.Boolean)">
            <summary>
            Checks that the method which called this helper method
            was not called by any code outside of the Microsoft.Data.OData.dll.
            </summary>
            <param name="checkPublicMethods">Set to true if this check is called from a public method which should also be checked for non-external callers.
            In that case, make sure that the calling method will not get inlined!</param>
            <remarks>
            The method is only called when in DEBUG builds, since it's quite expensive and we expect
            all our external callers to run DEBUG builds at least sometimes.
            The method is also called when compiling for FxCop analysis, as we run our official FxCop
            pass on RET build and we need to check that all internal methods call this one to check for accessibility
            even though only in debug builds.
            </remarks>
        </member>
        <member name="T:Microsoft.Data.OData.ErrorUtils">
            <summary>
            Utility methods serializing the xml error payload
            </summary>
        </member>
        <member name="F:Microsoft.Data.OData.ErrorUtils.ODataErrorMessageDefaultLanguage">
            <summary>Default language for error messages if not specified.</summary>
            <remarks>
            This constant is included here since this file is compiled into WCF DS Server as well
            so we can't compile in the ODataConstants.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.OData.ErrorUtils.GetErrorDetails(Microsoft.Data.OData.ODataError,System.String@,System.String@,System.String@)">
            <summary>
            Extracts error details from an <see cref="T:Microsoft.Data.OData.ODataError"/>.
            </summary>
            <param name="error">The ODataError instance to extract the error details from.</param>
            <param name="code">A data service-defined string which serves as a substatus to the HTTP response code.</param>
            <param name="message">A human readable message describing the error.</param>
            <param name="messageLanguage">The language identifier representing the language the error message is in.</param>
        </member>
        <member name="M:Microsoft.Data.OData.ErrorUtils.WriteXmlError(System.Xml.XmlWriter,Microsoft.Data.OData.ODataError,System.Boolean,System.Int32)">
            <summary>
            Write an error message.
            </summary>
            <param name="writer">The Xml writer to write to.</param>
            <param name="error">The error instance to write.</param>
            <param name="includeDebugInformation">A flag indicating whether error details should be written (in debug mode only) or not.</param>
            <param name="maxInnerErrorDepth">The maximumum number of nested inner errors to allow.</param>
        </member>
        <member name="M:Microsoft.Data.OData.ErrorUtils.WriteXmlError(System.Xml.XmlWriter,System.String,System.String,System.String,Microsoft.Data.OData.ODataInnerError,System.Int32)">
            <summary>
            Write an error message.
            </summary>
            <param name="writer">The Xml writer to write to.</param>
            <param name="code">The code of the error.</param>
            <param name="message">The message of the error.</param>
            <param name="messageLanguage">The language of the message.</param>
            <param name="innerError">Inner error details that will be included in debug mode (if present).</param>
            <param name="maxInnerErrorDepth">The maximumum number of nested inner errors to allow.</param>
        </member>
        <member name="M:Microsoft.Data.OData.ErrorUtils.WriteXmlInnerError(System.Xml.XmlWriter,Microsoft.Data.OData.ODataInnerError,System.String,System.Int32,System.Int32)">
            <summary>
            Writes the inner exception information in debug mode.
            </summary>
            <param name="writer">The Xml writer to write to.</param>
            <param name="innerError">The inner error to write.</param>
            <param name="innerErrorElementName">The local name of the element representing the inner error.</param>
            <param name="recursionDepth">The number of times this method has been called recursively.</param>
            <param name="maxInnerErrorDepth">The maximumum number of nested inner errors to allow.</param>
        </member>
        <member name="T:Microsoft.Data.OData.Metadata.EdmLibraryExtensions">
            <summary>
            Class with code that will eventually live in EdmLib.
            </summary>
            <remarks>This class should go away completely when the EdmLib integration is fully done.</remarks>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.CollectionTypeQualifier">
            <summary>The qualifier to turn a type name into a Collection type name.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.CollectionTypeFormat">
            <summary>Format string to describe a Collection of a given type.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.PrimitiveTypeReferenceMap">
            <summary>
            Map of CLR primitive type to EDM primitive type reference. Doesn't include spatial types since they need assignability and not equality.
            </summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.BooleanTypeReference">
            <summary>Type reference for Edm.Boolean.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ByteTypeReference">
            <summary>Type reference for Edm.Byte.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.DateTimeTypeReference">
            <summary>Type reference for Edm.DateTime.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.DecimalTypeReference">
            <summary>Type reference for Edm.Decimal.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.DoubleTypeReference">
            <summary>Type reference for Edm.Double.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.Int16TypeReference">
            <summary>Type reference for Edm.Int16.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.Int32TypeReference">
            <summary>Type reference for Edm.Int32.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.Int64TypeReference">
            <summary>Type reference for Edm.Int64.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.SByteTypeReference">
            <summary>Type reference for Edm.SByte.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.StringTypeReference">
            <summary>Type reference for Edm.String.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.SingleTypeReference">
            <summary>Type reference for Edm.Float.</summary>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.#cctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ODataFullName(Microsoft.Data.Edm.IEdmTypeReference)">
            <summary>
            Gets the full name of the definition referred to by the type reference.
            </summary>
            <param name="typeReference">The type reference to get the full name for.</param>
            <returns>The full name of this <paramref name="typeReference"/>.</returns>
            <remarks>
            Note that this method is different from the EdmLib FullName extension method in that it also returns
            names for collection types. For EdmLib, collection types are functions and thus don't have a full name.
            The name/string they use in CSDL is just shorthand for them.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ODataFullName(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the full name of the type.
            </summary>
            <param name="type">The type to get the full name for.</param>
            <returns>The full name of the <paramref name="type"/>.</returns>
            <remarks>
            Note that this method is different from the EdmLib FullName extension method in that it also returns
            names for collection types. For EdmLib, collection types are functions and thus don't have a full name.
            The name/string they use in CSDL is just shorthand for them.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.Clone(Microsoft.Data.Edm.IEdmTypeReference,System.Boolean)">
            <summary>
            Clones the specified type reference.
            </summary>
            <param name="typeReference">The type reference to clone.</param>
            <param name="nullable">true to make the cloned type reference nullable; false to make it non-nullable.</param>
            <returns>The cloned <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/> instance.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.FullName(Microsoft.Data.Edm.IEdmEntityContainerElement)">
            <summary>
            Returns the fully qualified name of an entity container element.
            </summary>
            <param name="containerElement">The container element to get the full name for.</param>
            <returns>The full name of the owning entity container, slash, name of the container element.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.GetPrimitiveTypeReference(System.Type)">
            <summary>
            Returns the primitive type reference for the given Clr type.
            </summary>
            <param name="clrType">The Clr type to resolve.</param>
            <returns>The primitive type reference for the given Clr type.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ToTypeReference(Microsoft.Data.Edm.IEdmType,System.Boolean)">
            <summary>
            Turns a <see cref="T:Microsoft.Data.Edm.IEdmType"/> into the corresponding <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/>.
            </summary>
            <param name="type">The type to convert.</param>
            <param name="nullable">true if the returned type reference should be nullable; otherwise false.</param>
            <returns>A type reference for the <paramref name="type"/>.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.GetCollectionTypeName(System.String)">
            <summary>
            Creates the EDM type name for a collection of the specified item type name. E.g. Collection(Edm.String)
            </summary>
            <param name="itemTypeName">Type name of the items in the collection.</param>
            <returns>Type name for a collection of the specified item type name.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ResolveEntitySet(Microsoft.Data.Edm.IEdmModel,System.String)">
            <summary>
            Finds the entity set with the specified container and name.
            </summary>
            <param name="model">The model to find the entity set in.</param>
            <param name="containerQualifiedEntitySetName">The container qualified name of the entity set.</param>
            <returns>The <see cref="T:Microsoft.Data.Edm.IEdmEntitySet"/> with the specified name or null if no such entity set exists.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ResolveFunctionImports(Microsoft.Data.Edm.IEdmModel,System.String)">
            <summary>
            Finds the function import group with the specified container and name. If the name contains the function parameters, this
            method will return the function import with matching parameters.
            </summary>
            <param name="model">The model to find the function import in.</param>
            <param name="containerQualifiedFunctionImportName">The container qualified name of the function import.</param>
            <returns>The <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport"/> group with the specified name or null if no such function import exists.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ResolveFunctionImports(Microsoft.Data.Edm.IEdmModel,System.String,System.Boolean)">
            <summary>
            Finds the function import group with the specified container and name. If the name contains the function parameters, this
            method will return the function import with matching parameters.
            </summary>
            <param name="model">The model to find the function import in.</param>
            <param name="containerQualifiedFunctionImportName">The container qualified name of the function import. May contain parameter type names, e.g. Function1(P1Type,P2Type) only if <paramref name="allowParameterTypeNames"/> is true.</param>
            <param name="allowParameterTypeNames">Whether parameter type names are allowed to appear in the function import name to resolve.</param>
            <returns>The <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport"/> group with the specified name or null if no such function import exists.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ResolveFunctionImports(Microsoft.Data.Edm.IEdmEntityContainer,System.String)">
            <summary>
            Resolves a function import or function import group.
            </summary>
            <param name="container">The entity container.</param>
            <param name="functionImportName">The function import name to resolve. May contain parameter type names, e.g. Function1(P1Type,P2Type)</param>
            <returns>The resolved function import or function import group.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ResolveFunctionImports(Microsoft.Data.Edm.IEdmEntityContainer,System.String,System.Boolean)">
            <summary>
            Resolves a function import or function import group.
            </summary>
            <param name="container">The entity container.</param>
            <param name="functionImportName">The function import name to resolve. May contain parameter type names, e.g. Function1(P1Type,P2Type) only if <paramref name="allowParameterTypeNames"/> is true.</param>
            <param name="allowParameterTypeNames">Whether parameter type names are allowed to appear in the function import name to resolve.</param>
            <returns>The resolved function import or function import group.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.FindFunctionImportsByBindingParameterTypeHierarchy(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntityType,System.String)">
            <summary>
            Finds all function imports with the given name which are bindable to an instance of the giving binding type or a more derived type.
            </summary>
            <param name="model">The model to find the function import in.</param>
            <param name="bindingType">The binding entity type.</param>
            <param name="functionImportName">The name of the function imports to find. May be qualified with an entity container name.</param>
            <returns>The function imports that match the search criteria.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.FindFunctionImportsBySpecificBindingParameterType(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Finds all function imports with the given name which are bindable to an instance of the giving binding type or a more derived type.
            </summary>
            <param name="model">The model to find the function import in.</param>
            <param name="bindingType">The binding entity type.</param>
            <param name="functionImportName">The name of the function imports to find. May be qualified with an entity container name.</param>
            <returns>The function imports that match the search criteria.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.GetPrimitiveClrType(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Returns the primitive CLR type for the specified primitive type reference.
            </summary>
            <param name="primitiveType">The primitive type to resolve.</param>
            <param name="isNullable">Whether the returned type should be a nullable variant or not.</param>
            <returns>The CLR type for the primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ToTypeReference(Microsoft.Data.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Gets a reference to a primitive kind definition of the appropriate kind.
            </summary>
            <param name="primitiveType">Primitive type to create a reference for.</param>
            <param name="nullable">Flag specifying if the referenced type should be nullable per default.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.TryGetSingleOrDefaultEntityContainer(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntityContainer@)">
            <summary>
            Gets the single entity container or the default one if there are multiple containers.
            </summary>
            <param name="model">Model to find entity containers in.</param>
            <param name="foundContainer">Single container that was found.</param>
            <returns>Entity Container found in the model</returns>
        </member>
        <member name="M:Microsoft.Data.OData.Metadata.EdmLibraryExtensions.ResolveContainerQualifiedElementName(Microsoft.Data.Edm.IEdmModel,System.String,System.Func{Microsoft.Data.Edm.IEdmEntityContainer,System.String,System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.IEdmEntityContainerElement}})">
            <summary>
            Finds the container elements with the specified container and name.
            </summary>
            <param name="model">The model to find the element in.</param>
            <param name="containerQualifiedElementName">The container qualified name of the elements.</param>
            <param name="resolver">The resolver method to resolve the elements.</param>
            <returns>The enumeration of <see cref="T:Microsoft.Data.Edm.IEdmEntityContainerElement"/> with the specified name or null if no such element exists.</returns>
        </member>
        <member name="T:Microsoft.Data.OData.InternalErrorCodesCommon">
            <summary>
            An enumeration that lists the internal errors that are shared between the OData library and the query library.
            </summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_ToTypeReference">
            <summary>Unreachable codepath in EdmLibraryExtensions.ToTypeReference (unsupported type kind).</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_ToClrType">
            <summary>Unreachable codepath in EdmLibraryExtensions.ToClrType (unsupported type kind).</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_PrimitiveTypeReference">
            <summary>Unreachable codepath in EdmLibraryExtensions.PrimitiveTypeReference (unsupported primitive type kind).</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_IsAssignableFrom_Primitive">
            <summary>Unreachable codepath in EdmLibraryExtensions.IsAssignableFrom(IEdmPrimitiveType, IEdmPrimitiveType).</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_IsAssignableFrom_Type">
            <summary>Unreachable codepath in EdmLibraryExtensions.IsAssignableFrom(IEdmType, IEdmType).</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_BaseType">
            <summary>Unreachable codepath in EdmLibraryExtensions.BaseType.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_Clone_TypeKind">
            <summary>Unreachable codepath in EdmLibraryExtensions.Clone for unexpected type kind.</summary>
        </member>
        <member name="F:Microsoft.Data.OData.InternalErrorCodesCommon.EdmLibraryExtensions_Clone_PrimitiveTypeKind">
            <summary>Unreachable codepath in EdmLibraryExtensions.Clone for unexpected primitive type kind.</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceStaticConfiguration">
            <summary>
            Static configuration that is initialized one time per service type and then cached.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceStaticConfiguration.readAuthorizationMethods">
            <summary>
            A lookup of resource sets to the corresponding QueryInterceptors.
            For IDSP there is no guarantee that the provider will always return the same metadata instance.  We should
            use the name instead of the instance as key since the configuration is cached across requests.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceStaticConfiguration.writeAuthorizationMethods">
            <summary>
            A lookup of resource sets to the corresponding ChangeInterceptors.
            For IDSP there is no guarantee that the provider will always return the same metadata instance.  We should
            use the name instead of the instance as key since the configuration is cached across requests.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceStaticConfiguration.provider">
            <summary>The provider for the web service.</summary>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.#ctor(System.Type,System.Data.Services.Providers.IDataServiceMetadataProvider)">
            <summary>
            Constructors the static configuration object which can be cached for the whole AppDomain lifecycle.
            </summary>
            <param name="dataServiceType">Service type.</param>
            <param name="provider">Metadata provider instance.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.GetReadAuthorizationMethods(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the list of QueryInterceptors for the given resource set
            </summary>
            <param name="resourceSet">resource set instance</param>
            <returns>List of QueryInterceptors for the resource set, null if there is none defined for the resource set.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.GetWriteAuthorizationMethods(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the list of ChangeInterceptors for the given resource set
            </summary>
            <param name="resourceSet">resource set instance</param>
            <returns>List of ChangeInterceptors for the resource set, null if there is none defined for the resource set.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.CheckQueryInterceptorSignature(System.Type,System.Reflection.MethodInfo,System.Data.Services.Providers.ResourceSet)">
            <summary>Checks that the specified <paramref name="method"/> has a correct signature.</summary>
            <param name="dataServiceType">Service type.</param>
            <param name="method">Method to check.</param>
            <param name="container">Container associated with the interceptor.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.CheckParameterIsNotOut(System.Reflection.MethodInfo,System.Reflection.ParameterInfo)">
            <summary>Verifies that the specified <paramref name="parameter"/> is not an [out] parameter.</summary>
            <param name="method">Method with parameter to check.</param>
            <param name="parameter">Parameter to check.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.RegisterCallbacks(System.Type)">
            <summary>
            Register authorization callbacks specified on the given
            <paramref name="dataServiceType"/>.
            </summary>
            <param name="dataServiceType">Type of web data service to check.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceStaticConfiguration.LoadConfigurationSettings">
            <summary>
            Loads settings defined in the configuration file.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceStaticConfiguration.DataServicesFeaturesSection">
            <summary>
            Cached copy of DataServicesFeaturesSection.
            </summary>
        </member>
        <member name="T:System.Data.Services.ODataPathToSegmentInfoConverter">
            <summary>
            Semantic parser for the path of the request URI.
            </summary>
        </member>
        <member name="F:System.Data.Services.ODataPathToSegmentInfoConverter.providerWrapper">
            <summary>
            The provider wrapper to use for looking up types/sets, etc.
            </summary>
        </member>
        <member name="F:System.Data.Services.ODataPathToSegmentInfoConverter.crossReferenceCallback">
            <summary>
            A callback to get cross-referenced segments (ie '$0') when inside a batch request changeset.
            </summary>
        </member>
        <member name="F:System.Data.Services.ODataPathToSegmentInfoConverter.maxProtocolVersion">
            <summary>
            The max protocol version of the service.
            </summary>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.#ctor(System.Version,System.Data.Services.Providers.DataServiceProviderWrapper,System.Func{System.String,System.Data.Services.SegmentInfo})">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.ODataPathToSegmentInfoConverter"/>.
            </summary>
            <param name="maxProtocolVersion">The max protocol version of the service.</param>
            <param name="providerWrapper">The provider wrapper to use for looking up types/sets, etc.</param>
            <param name="crossReferenceCallback">A callback to get cross-referenced segments (ie '$0') when inside a batch request changeset.</param>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.Create(System.Data.Services.IDataService)">
            <summary>
            Creates a new <see cref="T:System.Data.Services.ODataPathToSegmentInfoConverter"/> for the given data service.
            </summary>
            <param name="service">The data service.</param>
            <returns>A new path parsers.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.ConvertPath(Microsoft.Data.OData.Query.SemanticAst.ODataPath)">
            <summary>Creates an <see cref="T:System.Data.Services.SegmentInfo"/> list for the given <paramref name="path"/>.</summary>
            <param name="path">Segments to process.</param>
            <returns>Segment information describing the given <paramref name="path"/>.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateSegmentForServiceOperation(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Creates a segment for a service operation
            </summary>
            <param name="serviceOperation">The service operation for the segment.</param>
            <returns>A fully populated PathSegment representing the service operation</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.ThrowIfMustBeLeafSegment(System.Data.Services.SegmentInfo)">
            <summary>
            Throws if the given segment must be a leaf, as a later segment is being created.
            </summary>
            <param name="previous">The previous segment which may need to be a leaf.</param>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CheckSegmentIsComposable(System.Data.Services.SegmentInfo)">
            <summary>
            Checks that the previous segment can be composed upon.
            </summary>
            <param name="previous">previous segment info.</param>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.IsSegmentComposable(System.Data.Services.SegmentInfo)">
            <summary>
            Determines if the previous segment can be composed upon.
            </summary>
            <param name="previous">previous segment info.</param>
            <returns>
              <c>true</c> if the segment can be composed upon; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateCountSegment(System.Data.Services.SegmentInfo)">
            <summary>
            Handle $count segment
            </summary>
            <param name="previous">previous segment info.</param>
            <returns>The count segment info</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateLinksSegment(System.Data.Services.SegmentInfo)">
            <summary>
            Handle $links segment
            </summary>
            <param name="previous">previous segment info.</param>
            <returns>The links segment info</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateValueSegment(System.Data.Services.SegmentInfo)">
            <summary>
            Create a $value segment
            </summary>
            <param name="previous">previous segment info.</param>
            <returns>new segement info for $value.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateOpenPropertySegment(System.Data.Services.SegmentInfo,System.String)">
            <summary>
            Creates a new segment for an open property.
            </summary>
            <param name="previous">previous segment info.</param>
            <param name="identifier">name of the segment.</param>
            <returns>new open property segment.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateNamedStreamSegment(System.Data.Services.SegmentInfo,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Creates a named stream segment
            </summary>
            <param name="previous">previous segment info.</param>
            <param name="streamProperty">stream property to create the segment for.</param>
            <returns>new named stream segment.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.TargetKindFromType(System.Data.Services.Providers.ResourceType)">
            <summary>Determines a matching target kind from the specified type.</summary>
            <param name="type">ResourceType of element to get kind for.</param>
            <returns>An appropriate <see cref="T:System.Data.Services.RequestTargetKind"/> for the specified <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CheckSingleResult(System.Boolean,System.String)">
            <summary>
            Checks for single result, otherwise throws.
            </summary>
            <param name="isSingleResult">indicates whether the current result is single result or not.</param>
            <param name="identifier">current segment identifier.</param>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.TryGetPropertyFromSegment(Microsoft.Data.OData.Query.SemanticAst.ODataPathSegment,System.Data.Services.Providers.ResourceProperty@)">
            <summary>
            Tries to get the resource property for the given segment, if it is one of the segment types that refers to a property, a navigation, or a navigation after $links.
            </summary>
            <param name="segment">The segment.</param>
            <param name="projectedProperty">The property, if the segment represented a property or navigation.</param>
            <returns>Whether the segment represented a property or navigation.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateFirstSegment(Microsoft.Data.OData.Query.SemanticAst.ODataPathSegment)">
            <summary>Creates the first <see cref="T:System.Data.Services.SegmentInfo"/> for a request.</summary>
            <param name="segment">The text of the segment.</param>
            <returns>A description of the information on the segment.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateSegmentForServiceAction(System.Data.Services.SegmentInfo,System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Creates a segment for the given service action.
            </summary>
            <param name="previousSegment">The previous segment before the operation to be invoked.</param>
            <param name="serviceAction">The service action to create the segment for.</param>
            <returns>A fully populated PathSegment representing the service action</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreateNextSegment(System.Data.Services.SegmentInfo,Microsoft.Data.OData.Query.SemanticAst.ODataPathSegment)">
            <summary>
            Creates the next segment.
            </summary>
            <param name="previous">The previous segment.</param>
            <param name="segment">The the next segment.</param>
            <returns>The newly created next segment.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.TryCreateTypeNameSegment(System.Data.Services.SegmentInfo,Microsoft.Data.OData.Query.SemanticAst.ODataPathSegment,System.Data.Services.SegmentInfo@)">
            <summary>
            Tries to create a type name segment if the given identifier refers to a known type.
            </summary>
            <param name="previous">previous segment info.</param>
            <param name="segment">The segment being interpreted.</param>
            <param name="typeNameSegment">The type name segment, if one was created.</param>
            <returns>Whether or not a type segment was created for the identifier.</returns>
        </member>
        <member name="M:System.Data.Services.ODataPathToSegmentInfoConverter.CreatePropertySegment(System.Data.Services.SegmentInfo,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Creates a property segment
            </summary>
            <param name="previous">previous segment info.</param>
            <param name="property">property to create the segment for.</param>
            <returns>new segment for the given property.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.SkipTokenExpressionBuilder">
            <summary>
            Component for building LINQ expressions for skip-tokens.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.SkipTokenExpressionBuilder.nodeToExpressionTranslator">
            <summary>
            The node to expression translator to use.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.SkipTokenExpressionBuilder.#ctor(System.Data.Services.Parsing.NodeToExpressionTranslator)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Parsing.SkipTokenExpressionBuilder"/>.
            </summary>
            <param name="nodeToExpressionTranslator">The node to expression translator to use</param>
        </member>
        <member name="M:System.Data.Services.Parsing.SkipTokenExpressionBuilder.ParseSkipTokenLiteral(System.String)">
            <summary>Parse one of the literals of skip token.</summary>
            <param name="literal">Input literal.</param>
            <returns>Object resulting from conversion of literal.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.SkipTokenExpressionBuilder.BuildSkipTokenFilter(System.Data.Services.Providers.OrderingInfo,System.Collections.Generic.IList{System.Object},System.Type)">
            <summary>Makes the expression that is used as a filter corresponding to skip token.</summary>
            <param name="topLevelOrderingInfo">Ordering expression.</param>
            <param name="skipToken">The provided skip token.</param>
            <param name="parameterType">The parameter type of the lambda.</param>
            <returns>LambdaExpression corresponding to the skip token filter.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.SkipTokenExpressionBuilder.GenerateNullAwareComparison(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,Microsoft.Data.OData.Query.BinaryOperatorKind)">
            <summary>
            Generates a comparison expression which can handle NULL values for any type.
            NULL is always treated as the smallest possible value.
            So for example for strings NULL is smaller than any non-NULL string.
            For now only GreaterThan and LessThan operators are supported by this method.
            </summary>
            <param name="left">Left hand side expression</param>
            <param name="right">Right hand side expression</param>
            <param name="operatorKind">gt or lt operator token</param>
            <returns>Resulting comparison expression (has a Boolean value)</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.SkipTokenExpressionBuilder.GenerateComparisonExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,Microsoft.Data.OData.Query.BinaryOperatorKind)">
            <summary>
            Generates a comparison expression.
            </summary>
            <param name="left">The left side of the comparison.</param>
            <param name="right">The right side of the comparison.</param>
            <param name="op">The comparison operator.</param>
            <returns>A comparison expression.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.TokenToQueryNodeTranslator">
            <summary>
            Utility class for creating instances <see cref="T:Microsoft.Data.OData.Query.SemanticAst.QueryNode"/>. 
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.TokenToQueryNodeTranslator.TryCreateLiteral(System.Data.Services.Parsing.ExpressionToken,Microsoft.Data.OData.Query.SemanticAst.ConstantNode@)">
            <summary>
            Tries to create a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.ConstantNode"/> for the given token if it represents a literal.
            </summary>
            <param name="token">The token.</param>
            <param name="node">The node, if one was created.</param>
            <returns>Whether or not the token represented a literal.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.TokenToQueryNodeTranslator.ParseTypedLiteral(System.Type,System.String,System.Data.Services.Parsing.ExpressionToken)">
            <summary>
            Parses the given token into a constant node of the given target type.
            </summary>
            <param name="targetType">The tarket type.</param>
            <param name="targetTypeName">The target type name.</param>
            <param name="token">The token to parse.</param>
            <returns>The parsed constant node.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.NodeToExpressionTranslator">
            <summary>
            Component for translating a tree of nodes representing an OData query into a LINQ expression.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.functions">
            <summary>Dictionary of system functions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.StringCompareMethodInfo">
            <summary>Method info for string comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.BoolCompareMethodInfo">
            <summary>Method info for Bool comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.BoolCompareMethodInfoNullable">
            <summary>Method info for Bool? comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.GuidCompareMethodInfo">
            <summary>Method info for Guid comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.GuidCompareMethodInfoNullable">
            <summary>Method info for Guid? comparison</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.functionExpressionBinder">
            <summary>The function expression binder for checking/promoting operands.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.dataServiceBehavior">
            <summary>The current data service behavior.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.serviceInstance">
            <summary>The service instance.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.nullPropagationRequired">
            <summary>Whether null propagation is required.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.implicitParameterExpression">
            <summary>Expression to use for the implicit '$it' parameter in function calls.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.verifyProtocolVersion">
            <summary>Callback to verify that the service's max protocol version is greather than or equal to the version required for a specific feature.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.NodeToExpressionTranslator.verifyRequestVersion">
            <summary>Callback to verify that the request's version is greather than or equal to the version required for a specific feature.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.#ctor(System.Data.Services.Parsing.FunctionExpressionBinder,System.Data.Services.DataServiceBehavior,System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.Action{System.Data.Services.Common.DataServiceProtocolVersion},System.Action{System.Data.Services.Common.DataServiceProtocolVersion})">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Parsing.NodeToExpressionTranslator"/>.
            </summary>
            <param name="functionExpressionBinder">The function expression binder for checking/promoting operands.</param>
            <param name="dataServiceBehavior">The data service behavior from the service's configuration.</param>
            <param name="serviceInstance">The data service instance.</param>
            <param name="nullPropagationRequired">Whether null propagation is required.</param>
            <param name="implicitParameterExpression">Expression to use for the implicit '$it' parameter in function calls.</param>
            <param name="verifyProtocolVersion">Callback to verify that the service's max protocol version is greather than or equal to the version required for a specific feature.</param>
            <param name="verifyRequestVersion">Callback to verify that the request's version is greather than or equal to the version required for a specific feature.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.AllNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.AllNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.AnyNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.AnyNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.CollectionNavigationNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.ConstantNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.ConvertNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.ConvertNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.EntityRangeVariableReferenceNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.EntityRangeVariableReferenceNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.NonentityRangeVariableReferenceNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.NonentityRangeVariableReferenceNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.SingleNavigationNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SingleNavigationNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SingleEntityFunctionCallNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SingleEntityFunctionCallNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SingleValueFunctionCallNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SingleValueFunctionCallNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.SingleValueOpenPropertyAccessNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SingleValueOpenPropertyAccessNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Visit(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.CreateForTests(System.Data.Services.Parsing.FunctionExpressionBinder,System.Data.Services.DataServiceBehavior,System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.Action{System.Data.Services.Common.DataServiceProtocolVersion},System.Action{System.Data.Services.Common.DataServiceProtocolVersion})">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Parsing.NodeToExpressionTranslator"/>.
            </summary>
            <param name="functionExpressionBinder">The function expression binder for checking/promoting operands.</param>
            <param name="dataServiceBehavior">The data service behavior from the service's configuration.</param>
            <param name="serviceInstance">The data service instance.</param>
            <param name="nullPropagationRequired">Whether null propagation is required.</param>
            <param name="implicitParameterExpression">Expression to use for the implicit '$it' parameter in function calls.</param>
            <param name="verifyProtocolVersion">Callback to verify that the service's max protocol version is greather than or equal to the version required for a specific feature.</param>
            <param name="verifyRequestVersion">Callback to verify that the request's version is greather than or equal to the version required for a specific feature.</param>
            <returns>The new translator.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.Create(System.Data.Services.IDataService,System.Data.Services.RequestDescription,System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Parsing.NodeToExpressionTranslator"/>.
            </summary>
            <param name="service">The data service.</param>
            <param name="requestDescription">The current request description.</param>
            <param name="implicitParameterExpression">Expression to use for the implicit '$it' parameter in function calls.</param>
            <returns>The new translator.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateFilterClause(Microsoft.Data.OData.Query.SemanticAst.FilterClause)">
            <summary>Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.FilterClause"/> into a <see cref="T:System.Linq.Expressions.LambdaExpression"/>.</summary>
            <param name="filterClause">The filter clause to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateOrderBy(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
            <summary>Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause"/> into a set of <see cref="T:System.Data.Services.Providers.OrderingExpression"/>.</summary>
            <param name="orderByClause">The order-by clause to translate.</param>
            <returns>The translated expressions.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode)">
            <summary>
            Main dispatching visit method for translating query-nodes into expressions.
            </summary>
            <param name="node">The node to visit/translate.</param>
            <returns>The LINQ expression resulting from visiting the node.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateComparison(Microsoft.Data.OData.Query.BinaryOperatorKind,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Given left and right hand side expressions, generates a comparison expression based
            on the given comparison token
            </summary>
            <param name="operatorKind">The operator kind of the comparison.</param>
            <param name="left">The left side of the comparison.</param>
            <param name="right">The right side of the comparison.</param>
            <returns>Resulting comparison expression</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.GetPublicSpatialBaseType(System.Object)">
            <summary>
            Gets the public base type for a given <paramref name="spatialValue"/> spatial value
            </summary>
            <param name="spatialValue">The spatial instance value for which we want to find the public type.</param>
            <returns>The public spatial base type for the instance value.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.IsLogical(Microsoft.Data.OData.Query.BinaryOperatorKind)">
            <summary>
            Returns whether the operator kind represents a logical operator.
            </summary>
            <param name="binaryOperatorKind">The operator kind.</param>
            <returns>True for logical operators (And/Or); false for everything else.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.IncompatibleOperandsError(Microsoft.Data.OData.Query.BinaryOperatorKind,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an exception indicated that two operands are incompatible.</summary>
            <param name="operatorKind">Kind of operation for operands.</param>
            <param name="left">Expression for left-hand operand.</param>
            <param name="right">Expression for right-hand operand.</param>
            <returns>A new <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateTypeCast(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Linq.Expressions.Expression)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <param name="source">The already-translated source of the type cast.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslatePropertyAccess(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Helper for translating an access to a metadata-defined property or navigation.
            </summary>
            <param name="sourceNode">The source of the property access.</param>
            <param name="edmProperty">The structural or navigation property being accessed.</param>
            <param name="entitySet">The entity set of the result, required for navigations.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateFunctionCall(System.String,System.Collections.Generic.IEnumerable{Microsoft.Data.OData.Query.SemanticAst.QueryNode})">
            <summary>
            Translates a function call into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="argumentNodes">The argument nodes.</param>
            <returns>
            The translated expression.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.TranslateLambda(Microsoft.Data.OData.Query.SemanticAst.LambdaNode)">
            <summary>
            Translates a <see cref="T:Microsoft.Data.OData.Query.SemanticAst.LambdaNode"/> into a corresponding <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The node to translate.</param>
            <returns>The translated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.NodeToExpressionTranslator.ConvertNullCollectionToEmpty(System.Linq.Expressions.Expression)">
            <summary>Convert null collection to empty collection for Any/All/OfType methods.</summary>
            <param name="expressionToCheck">An IEnumerable expression.</param>
            <returns>An expression that checks <paramref name="expressionToCheck"/> for null.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.FunctionExpressionBinder">
            <summary>
            Component for binding functions into LINQ expressions.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.NumericTypeNotNumeric">
            <summary>A type that is not numeric.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.NumericTypeNotIntegral">
            <summary>A type that is a char, single, double or decimal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.NumericTypeSignedIntegral">
            <summary>A type that is a signed integral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.NumericTypeUnsignedIntegral">
            <summary>A type that is an unsigned integral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.tryResolveResourceType">
            <summary>Callback to resolve a resource type by name.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.literals">
            <summary>A mapping from constant expressions back to their original string value in case they need to be converted.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.#ctor(System.Func{System.String,System.Data.Services.Providers.ResourceType})">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Parsing.FunctionExpressionBinder"/>.
            </summary>
            <param name="tryResolveResourceType">Callback to resolve a resource type by name.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.FindBestFunction(System.Data.Services.Parsing.FunctionDescription[],System.Linq.Expressions.Expression[]@)">
            <summary>Finds the best fitting function for the specified arguments.</summary>
            <param name="functions">Functions to consider.</param>
            <param name="arguments">Arguments; if a best function is found, promoted arguments.</param>
            <returns>The best fitting function; null if none found or ambiguous.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.CheckAndPromoteOperand(System.Type,Microsoft.Data.OData.Query.UnaryOperatorKind,System.Linq.Expressions.Expression@)">
            <summary>Checks that the operand (possibly promoted) is valid for the specified operation.</summary>
            <param name="signatures">Type with signatures to match.</param>
            <param name="operatorKind">Kind of operation for error reporting.</param>
            <param name="expr">Expression for operand.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.CheckAndPromoteOperands(System.Type,Microsoft.Data.OData.Query.BinaryOperatorKind,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@)">
            <summary>Checks that the operands (possibly promoted) are valid for the specified operation.</summary>
            <param name="signatures">Type with signatures to match.</param>
            <param name="operatorKind">Kind of operation for error reporting.</param>
            <param name="left">Expression for left operand.</param>
            <param name="right">Expression for right operand.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.TrackOriginalTextOfLiteral(System.Linq.Expressions.ConstantExpression,System.String)">
            <summary>
            Tracks the literals original text for use in converting it's type during method call binding.
            </summary>
            <param name="expr">The literal's constant expression.</param>
            <param name="text">The original text of the literal.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.IsSignedIntegralType(System.Type)">
            <summary>Checks whether the specified type is a signed integral type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is a signed integral type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.IsUnsignedIntegralType(System.Type)">
            <summary>Checks whether the specified type is an unsigned integral type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is an unsigned integral type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.GetNumericTypeKind(System.Type)">
            <summary>Gets a flag for the numeric kind of type.</summary>
            <param name="type">Type to get numeric kind for.</param>
            <returns>
            One of NumericTypeNotNumeric; NumericTypeNotIntegral if it's char,
            single, double or decimal; NumericTypeSignedIntegral, or NumericTypeUnsignedIntegral.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.SelfAndBaseTypes(System.Type)">
            <summary>Returns an object that can enumerate the specified type and its supertypes.</summary>
            <param name="type">Type to based enumeration on.</param>
            <returns>An object that can enumerate the specified type and its supertypes.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.SelfAndBaseClasses(System.Type)">
            <summary>Returns an object that can enumerate the specified type and its supertypes.</summary>
            <param name="type">Type to based enumeration on.</param>
            <returns>An object that can enumerate the specified type and its supertypes.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.AddInterface(System.Collections.Generic.List{System.Type},System.Type)">
            <summary>Adds an interface type to a list of types, including inherited interfaces.</summary>
            <param name="types">Types list ot add to.</param>
            <param name="type">Interface type to add.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.FindBestApplicableMethods(System.Data.Services.Parsing.FunctionExpressionBinder.MethodData[],System.Linq.Expressions.Expression[])">
            <summary>Finds the best applicable methods from the specified array that match the arguments.</summary>
            <param name="applicable">Candidate methods.</param>
            <param name="args">Argument expressions.</param>
            <returns>Best applicable methods.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.ParseNumber(System.String,System.Type)">
            <summary>Parses the specified text into a number.</summary>
            <param name="text">Text to parse.</param>
            <param name="type">Type to parse into.</param>
            <returns>The parsed number.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.IsCompatibleWith(System.Type,System.Type)">
            <summary>Checks whether the source type is compatible with the value type.</summary>
            <param name="source">Source type.</param>
            <param name="target">Target type.</param>
            <returns>true if source can be used in place of target; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.IsBetterThan(System.Linq.Expressions.Expression[],System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Checks whether one type list is a better fit than other for the 
            specified expressions.
            </summary>
            <param name="args">Expressions for arguments.</param>
            <param name="firstCandidate">First type list to check.</param>
            <param name="secondCandidate">Second type list to check.</param>
            <returns>
            true if <paramref name="firstCandidate"/> has better parameter matching than <paramref name="secondCandidate"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.IsBetterThan(System.Linq.Expressions.Expression[],System.Data.Services.Parsing.FunctionExpressionBinder.MethodData,System.Data.Services.Parsing.FunctionExpressionBinder.MethodData)">
            <summary>
            Checks whether one method is a better fit than other for the 
            specified expressions.
            </summary>
            <param name="args">Expressions for arguments.</param>
            <param name="m1">First method to check.</param>
            <param name="m2">Second method to check.</param>
            <returns>
            true if <paramref name="m1"/> has better parameter matching than <paramref name="m2"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.CompareConversions(System.Type,System.Type,System.Type)">
            <summary>Checks which conversion is better.</summary>
            <param name="source">Source type.</param>
            <param name="targetA">First candidate type to convert to.</param>
            <param name="targetB">Second candidate type to convert to.</param>
            <returns>
            Return 1 if s -> t1 is a better conversion than s -> t2
            Return -1 if s -> t2 is a better conversion than s -> t1
            Return 0 if neither conversion is better
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.FindMethod(System.Type,System.String,System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>Finds the named method in the specifid type.</summary>
            <param name="type">Type to look in.</param>
            <param name="methodName">Name of method to look for.</param>
            <param name="args">Arguments to method.</param>
            <param name="method">Best method found.</param>
            <returns>Number of matching methods.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.FindApplicableMethods(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase},System.Linq.Expressions.Expression[])">
            <summary>Finds all applicable methods from the specified enumeration that match the arguments.</summary>
            <param name="methods">Enumerable object of candidate methods.</param>
            <param name="args">Argument expressions.</param>
            <returns>Methods that apply to the specified arguments.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.FindBestMethod(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase},System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>Finds the best methods for the specified arguments given a candidate method enumeration.</summary>
            <param name="methods">Enumerable object for candidate methods.</param>
            <param name="args">Argument expressions to match.</param>
            <param name="method">Best matched method.</param>
            <returns>The number of "best match" methods.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.IsApplicable(System.Data.Services.Parsing.FunctionExpressionBinder.MethodData,System.Linq.Expressions.Expression[])">
            <summary>Checks whether the specified method is applicable given the argument expressions.</summary>
            <param name="method">Method to check.</param>
            <param name="args">Argument expressions.</param>
            <returns>true if the method is applicable; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.PromoteExpression(System.Linq.Expressions.Expression,System.Type,System.Boolean)">
            <summary>Promotes the specified expression to the given type if necessary.</summary>
            <param name="expr">Expression to promote.</param>
            <param name="type">Type to change expression to.</param>
            <param name="exact">Whether an exact type is required; false implies a compatible type is OK.</param>
            <returns>Expression with the promoted type.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData">
            <summary>Use this class to encapsulate method information.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.methodBase">
            <summary>Described method.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.parameters">
            <summary>Parameters for method.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.args">
            <summary>Argument expressions.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.#ctor(System.Reflection.MethodBase,System.Reflection.ParameterInfo[])">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData"/> instance.</summary>
            <param name="method">Described method</param>
            <param name="parameters">Parameters for method.</param>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.Args">
            <summary>Argument expressions.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.MethodBase">
            <summary>Described method.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.Parameters">
            <summary>Parameters for method.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionExpressionBinder.MethodData.ParameterTypes">
            <summary>Enumeration of parameter types.</summary>
        </member>
        <member name="T:System.Data.Services.LinqExtensions">
            <summary>
            LINQ extension methods that are not provided by .NET itself.
            </summary>
        </member>
        <member name="M:System.Data.Services.LinqExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a new hash-set from the given enumerable.
            </summary>
            <typeparam name="TElement">The type of the elements.</typeparam>
            <param name="elements">The elements to put in the hash-set.</param>
            <param name="comparer">The comparer for the hash-set to use.</param>
            <returns>A new hash-set with the given elements and comparer.</returns>
        </member>
        <member name="M:System.Data.Services.LinqExtensions.Duplicates``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Filters the given elements to only return the elements that appear more than once. Will return them in the order of their second appearance. 
            If items appear 3 or more times in the original set, they will appear multiple times in the result.
            </summary>
            <typeparam name="TElement">The type of the elemenens.</typeparam>
            <param name="elements">The elements filter for duplicates.</param>
            <param name="comparer">The comparer to use for determining whether an element is a duplicate of an earlier item.</param>
            <returns>The set of elements that appear in the original set more than once. May contain duplicates itself.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionGenerator">
            <summary>
            Component for building up LINQ expressions as part of URI parsing.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionGenerator.AreByteArraysEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionGenerator.AreByteArraysNotEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates an Equal expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a NotEqual expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateGreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a GreaterThan comparison expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateGreaterThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a GreaterThanOrEqual comparsion expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateLessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a LessThan comparsion expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateLessThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
            <summary>Generates a LessThanOrEqual comparsion expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <param name="comparisonMethodInfo">MethodInfo for comparison method used for string, bool, guid types</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateAdd(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates an addition expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateSubtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a subtract expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateMultiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a multiplication expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateNegate(System.Linq.Expressions.Expression)">
            <summary>Generates a negative of expression.</summary>
            <param name="expr">Input expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateNot(System.Linq.Expressions.Expression)">
            <summary>Generates a not of expression.</summary>
            <param name="expr">Input expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateDivide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a divide expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateModulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a modulo expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateLogicalAnd(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a logical And expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateLogicalOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Generates a Logical Or expression.</summary>
            <param name="left">Left expression.</param>
            <param name="right">Right expression.</param>
            <returns>The generated expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateTypeAs(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceType)">
            <summary>
            Generate TypeAs expression over the given instance expression.
            </summary>
            <param name="instance">base expression.</param>
            <param name="resourceType">resource type to which the as checks needs to be performed on.</param>
            <returns>TypeAs expression over the given instance expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionGenerator.GenerateOfType(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceType)">
            <summary>
            Filters the elements of <paramref name="source"/> based on <paramref name="targetResourceType"/> 
            </summary>
            <param name="source">source</param>
            <param name="targetResourceType">targetResourceType</param>
            <returns>An expression for IEnumerable(Of T) that contains elements from the source sequence of type <paramref name="targetResourceType"/>.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.RequestExpressionParser">
            <summary>Use this class to parse an expression in the Astoria URI format.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestExpressionParser.provider">
            <summary>Provider of data and metadata.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestExpressionParser.expressionText">
            <summary>The expression text to parse.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestExpressionParser.model">
            <summary>The service's metadata-provider-based edm-model.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestExpressionParser.targetResourceType">
            <summary>The target resource type or null.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.RequestExpressionParser.targetResourceSet">
            <summary>The target resource set or null.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestExpressionParser.#ctor(System.Data.Services.IDataService,System.Data.Services.RequestDescription,System.String)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.RequestExpressionParser"/>.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="requestDescription">RequestDescription instance containing information about the current request being parsed.</param>
            <param name="expression">Expression to parse.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestExpressionParser.ParseFilter">
            <summary>Parses the text expression for $filter.</summary>
            <returns>The parsed filter clause.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestExpressionParser.ParseOrderBy">
            <summary>Parses the text expression for ordering.</summary>
            <returns>An orderby clause.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceProviderArgs">
            <summary>
            Argument class whose instance is passed for constructing a ReflectionDataServiceProvider
            or EntityFrameworkDataServiceProvider instance.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderArgs.#ctor(System.Object,System.Object,System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:System.Data.Services.Providers.DataServiceProviderArgs"/>.
            </summary>
            <param name="dataServiceInstance">Required instance of data service object.</param>
            <param name="dataSourceInstance">Required instance of data source object.</param>
            <param name="knownTypes">Optional collection of known types.</param>
            <param name="useMetadataKeyOrder">Whether metadata key order is to be used instead of default service defined key order.</param>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderArgs.DataServiceInstance">
            <summary>
            Instance of the data service.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderArgs.DataSourceInstance">
            <summary>
            Instance of the data source.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderArgs.KnownTypes">
            <summary>
            Collection of known types.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderArgs.UseMetadataKeyOrder">
            <summary>
            Whether metadata defined ordering is to be used instead of service defined ordering.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderArgs.SkipServiceOperationMetadata">
            <summary>
            Whether to load service operations on the service. Set to <c>false</c> by default.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceProviderBehavior">
            <summary>
            Default implementation of IDataServiceProviderBehavior interface.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceProviderBehavior">
            <summary>
            Used by the service writer to define the behavior of the providers.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceProviderBehavior.ProviderBehavior">
            <summary>
            Instance of provider behavior that defines the assumptions service should make
            about the provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderBehavior.customProviderBehavior">
            <summary>
            Cached custom provider behavior instance.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderBehavior.#ctor(System.Data.Services.Providers.ProviderBehavior)">
            <summary>
            Constructs the default DataServiceProviderBehavior using the given behavior information.
            </summary>
            <param name="providerBehavior">Provider behavior information.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderBehavior.HasReflectionOrEntityFrameworkProviderQueryBehavior(System.Data.Services.Providers.IDataServiceProviderBehavior)">
            <summary>
            Checks whether provider behaves like EntityFramework or Reflection service providers.
            </summary>
            <param name="providerBehavior">Provider behavior.</param>
            <returns>true if EntityFramework or Reflection provider behavior, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderBehavior.HasEntityFrameworkProviderQueryBehavior(System.Data.Services.Providers.IDataServiceProviderBehavior)">
            <summary>
            Checks whether provider behaves like EntityFramework provider.
            </summary>
            <param name="providerBehavior">Provider behavior.</param>
            <returns>true if EntityFramework provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderBehavior.HasReflectionProviderQueryBehavior(System.Data.Services.Providers.IDataServiceProviderBehavior)">
            <summary>
            Checks whether provider behaves like Reflection provider.
            </summary>
            <param name="providerBehavior">Provider behavior.</param>
            <returns>true if Reflection provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderBehavior.GetBehavior(System.Data.Services.Providers.IDataServiceProviderBehavior)">
            <summary>
            Gets the ProviderBehavior instance obtained from IDataServiceProviderBehavior interface.
            </summary>
            <param name="providerBehavior">IDataServiceProviderBehavior interface implementation.</param>
            <returns>ProviderBehavior instance.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderBehavior.ProviderBehavior">
            <summary>
            ProviderBehavior information.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderBehavior.CustomDataServiceProviderBehavior">
            <summary>
            Default behavior object for custom providers.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmComplexType"/> implementation that supports delay-loading of properties.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties.lockObject">
            <summary>The lock object for the delayed property loading.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties.propertyLoadAction">
            <summary>An action that is used to create the properties for this type.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties.#ctor(System.String,System.String,Microsoft.Data.Edm.IEdmComplexType,System.Boolean,System.Action{System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties})">
            <summary>
            Initializes a new instance of the EdmComplexTypeWithDelayLoadedProperties class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="name">Name of the entity.</param>
            <param name="baseType">The base type of this entity type.</param>
            <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
            <param name="propertyLoadAction">An action that is used to create the properties for this type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties.EnsurePropertyLoaded">
            <summary>
            Ensures that the properties have been loaded and can be used.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties.DeclaredProperties">
            <summary>
            Gets the properties declared immediately within this type.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> implementation that supports delay-loading of properties.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties.lockObject">
            <summary>The lock object for the delayed property loading.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties.propertyLoadAction">
            <summary>An action that is used to create the properties for this type.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties.#ctor(System.String,System.String,Microsoft.Data.Edm.IEdmEntityType,System.Boolean,System.Boolean,System.Action{System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties})">
            <summary>
            Initializes a new instance of the EdmEntityTypeWithDelayLoadedProperties class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="name">Name of the entity.</param>
            <param name="baseType">The base type of this entity type.</param>
            <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
            <param name="isOpen">Denotes if the type is open.</param>
            <param name="propertyLoadAction">An action that is used to create the properties for this type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties.EnsurePropertyLoaded">
            <summary>
            Ensures that the properties have been loaded and can be used.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties.DeclaredKey">
            <summary>
            Gets or sets the structural properties of the entity type that make up the entity key.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties.DeclaredProperties">
            <summary>
            Gets the properties declared immediately within this type.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.EntityFrameworkDataServiceProvider">
            <summary>
            Entity Framework based provider.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceMetadataProvider">
            <summary>
            Provides a metadata and query source abstraction for a 
            web data service's store.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)">
            <summary>Tries to get a resource set based on the specified name.</summary>
            <returns>true when resource set with the given <paramref name="name" /> is found; otherwise false.</returns>
            <param name="name">Name of the <see cref="T:System.Data.Services.Providers.ResourceSet" /> to resolve.</param>
            <param name="resourceSet">Returns the resource set or a null value if a resource set with the given <paramref name="name" /> is not found.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> instance when given the source association end.</summary>
            <returns>A <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> instance.</returns>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)">
            <summary>Tries to get a resource type based on the specified name.</summary>
            <returns>true when resource type with the given <paramref name="name" /> is found; otherwise false.</returns>
            <param name="name">Name of the type to resolve.</param>
            <param name="resourceType">Returns the resource type or a null value if a resource type with the given <paramref name="name" /> is not found.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>Attempts to return all types that derive from the specified resource type.</summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of derived <see cref="T:System.Data.Services.Providers.ResourceType" /> objects.</returns>
            <param name="resourceType">The base <see cref="T:System.Data.Services.Providers.ResourceType" />.</param>
            <remarks>The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>Determines whether a resource type has derived types.</summary>
            <returns>true when <paramref name="resourceType" /> represents an entity that has derived types; otherwise false.</returns>
            <param name="resourceType">A <see cref="T:System.Data.Services.Providers.ResourceType" /> object to evaluate.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)">
            <summary>Tries to get a service operation based on the specified name.</summary>
            <returns>true when service operation with the given <paramref name="name" /> is found; otherwise false.</returns>
            <param name="name">Name of the service operation to resolve.</param>
            <param name="serviceOperation">Returns the service operation or a null value if a service operation with the given <paramref name="name" /> is not found.</param>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerNamespace">
            <summary>Namespace name for the data source.</summary>
            <returns>String that contains the namespace name.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerName">
            <summary>Container name for the data source.</summary>
            <returns>String that contains the name of the container.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ResourceSets">
            <summary>Gets all available containers.</summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ResourceSet" /> objects.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.Types">
            <summary>Returns all the types in this data source.</summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ResourceType" /> objects.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ServiceOperations">
            <summary>Returns all the service operations in this data source.</summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ServiceOperation" /> objects.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceQueryProvider">
            <summary>
            Provides a metadata and query source abstraction for a 
            web data service's store.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>Gets the <see cref="T:System.Linq.IQueryable`1" /> that represents the container. </summary>
            <returns>An <see cref="T:System.Linq.IQueryable`1" /> that represents the resource set, or a null value if there is no resource set for the specified <paramref name="resourceSet" />.</returns>
            <param name="resourceSet">The resource set.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetResourceType(System.Object)">
            <summary>Gets the resource type for the instance that is specified by the parameter.</summary>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the supplied object. </returns>
            <param name="target">Instance to extract a resource type from.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets the value of the open property.</summary>
            <returns>Value for the property.</returns>
            <param name="target">Instance of the type that declares the open property.</param>
            <param name="resourceProperty">Value for the open property.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetOpenPropertyValue(System.Object,System.String)">
            <summary>Gets the value of the open property.</summary>
            <returns>The value of the open property.</returns>
            <param name="target">Instance of the type that declares the open property.</param>
            <param name="propertyName">Name of the open property.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetOpenPropertyValues(System.Object)">
            <summary>Gets the name and values of all the properties that are defined in the given instance of an open type.</summary>
            <returns>A collection of name and values of all the open properties.</returns>
            <param name="target">Instance of the type that declares the open property.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>Invokes the given service operation and returns the results.</summary>
            <returns>The result of the service operation, or a null value for a service operation that returns void.</returns>
            <param name="serviceOperation">Service operation to invoke.</param>
            <param name="parameters">Values of parameters to pass to the service operation.</param>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceQueryProvider.CurrentDataSource">
            <summary>The data source object from which data is provided.</summary>
            <returns>The data source.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceQueryProvider.IsNullPropagationRequired">
            <summary>Gets a value that indicates whether null propagation is required in expression trees.</summary>
            <returns>A <see cref="T:System.Boolean" /> value that indicates whether null propagation is required.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceUpdateProvider2">
            <summary>
            This interface declares the methods required to support ServiceActions.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceUpdateProvider">
            <summary>
            This interface declares the methods required for passing
            etag values to the provider.
            </summary>
        </member>
        <member name="T:System.Data.Services.IUpdatable">
            <summary>
            This interface declares the methods required for supporting
            update of resources
            </summary>
        </member>
        <member name="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)">
            <summary>Creates the resource of the specified type and that belongs to the specified container.</summary>
            <returns>The object representing a resource of specified type and belonging to the specified container.</returns>
            <param name="containerName">The name of the entity set to which the resource belongs.</param>
            <param name="fullTypeName">The full namespace-qualified type name of the resource.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)">
            <summary>Gets the resource of the specified type identified by a query and type name. </summary>
            <returns>An opaque object representing a resource of the specified type, referenced by the specified query.</returns>
            <param name="query">Language integrated query (LINQ) pointing to a particular resource.</param>
            <param name="fullTypeName">The fully qualified type name of resource.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.ResetResource(System.Object)">
            <summary>Resets the resource identified by the parameter <paramref name="resource " />to its default value.</summary>
            <returns>The resource with its value reset to the default value.</returns>
            <param name="resource">The resource to be updated.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)">
            <summary>Sets the value of the property with the specified name on the target resource to the specified property value.</summary>
            <param name="targetResource">The target object that defines the property.</param>
            <param name="propertyName">The name of the property whose value needs to be updated.</param>
            <param name="propertyValue">The property value for update.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)">
            <summary>Gets the value of the specified property on the target object.</summary>
            <returns>The value of the object.</returns>
            <param name="targetResource">An opaque object that represents a resource.</param>
            <param name="propertyName">The name of the property whose value needs to be retrieved.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)">
            <summary>Sets the value of the specified reference property on the target object.</summary>
            <param name="targetResource">The target object that defines the property.</param>
            <param name="propertyName">The name of the property whose value needs to be updated.</param>
            <param name="propertyValue">The property value to be updated.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>Adds the specified value to the collection.</summary>
            <param name="targetResource">Target object that defines the property.</param>
            <param name="propertyName">The name of the collection property to which the resource should be added..</param>
            <param name="resourceToBeAdded">The opaque object representing the resource to be added.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>Removes the specified value from the collection.</summary>
            <param name="targetResource">The target object that defines the property.</param>
            <param name="propertyName">The name of the property whose value needs to be updated.</param>
            <param name="resourceToBeRemoved">The property value that needs to be removed.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)">
            <summary>Deletes the specified resource.</summary>
            <param name="targetResource">The resource to be deleted.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.SaveChanges">
            <summary>Saves all the changes that have been made by using the <see cref="T:System.Data.Services.IUpdatable" /> APIs.</summary>
        </member>
        <member name="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)">
            <summary>Returns the instance of the resource represented by the specified resource object.</summary>
            <returns>Returns the instance of the resource represented by the specified resource object.</returns>
            <param name="resource">The object representing the resource whose instance needs to be retrieved.</param>
        </member>
        <member name="M:System.Data.Services.IUpdatable.ClearChanges">
            <summary>Cancels a change to the data.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceUpdateProvider.SetConcurrencyValues(System.Object,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Supplies the eTag value for the given entity resource.</summary>
            <param name="resourceCookie">Cookie that represents the resource.</param>
            <param name="checkForEquality">A <see cref="T:System.Boolean" /> that is true when property values must be compared for equality; false when property values must be compared for inequality.</param>
            <param name="concurrencyValues">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> list of the eTag property names and corresponding values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceUpdateProvider2.ScheduleInvokable(System.Data.Services.Providers.IDataServiceInvokable)">
            <summary>Queues up the invokable to be invoked during IUpdatable.SaveChanges().</summary>
            <param name="invokable">The invokable instance whose Invoke() method will be called during IUpdatable.SaveChanges().</param>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceInternalProvider">
            <summary>
            Internal interface whose implementation loads known types, validates the model and sets 
            all the metadata objects to read-only. Also used for obtaining entity container annotations.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceInternalProvider.FinalizeMetadataModel(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Called by the service to let the provider perform data model validation.
            </summary>
            <param name="knownTypes">Collection of known types.</param>
            <param name="useMetadataCacheOrder">Whether to use metadata cache ordering instead of default ordering.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceInternalProvider.GetEntityContainerAnnotations(System.String)">
            <summary>
            Return the list of custom annotation for the entity container with the given name.
            </summary>
            <param name="entityContainerName">Name of the EntityContainer.</param>
            <returns>Return the list of custom annotation for the entity container with the given name.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceEntityFrameworkProvider">
            <summary>
            Interface used for the discovery of properties that will be part of the ETag for entities belonging
            to the given resource set and resource type, also used for obtaining metadata EDM version.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceEntityFrameworkProvider.GetETagProperties(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Given a resource container and resource type, gets the list of ResourceProperties that
            are part of the ETag.
            </summary>
            <param name="containerName">Resource set name.</param>
            <param name="resourceType">Resource type of entities in the resource container.</param>
            <returns>Collection of properties that are part of the ETag.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceEntityFrameworkProvider.EdmSchemaVersion">
            <summary>
            Gets the metadata schema version.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.innerProvider">
            <summary>
            ObjectContextServiceProvider which provides implementation of metadata, query and update interfaces.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.#ctor(System.Data.Services.Providers.DataServiceProviderArgs)">
            <summary>
            Initializes a new System.Data.Services.Providers.EntityFrameworkDataServiceProvider instance.
            </summary>
            <param name="args"><see cref="T:System.Data.Services.Providers.DataServiceProviderArgs"/> needed during provider construction.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.Providers.EntityFrameworkDataServiceProvider instance.
            </summary>
            <param name="dataServiceInstance">Required data service instance.</param>
            <param name="dataSourceInstance">Required data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <param name="resourceSet">Returns the resolved resource set, null if no resource set for the given name was found.</param>
            <returns>True if resource set with the given name was found, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the ResourceAssociationSet instance when given the source association end.
            </summary>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
            <returns>ResourceAssociationSet instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <param name="resourceType">Returns the resolved resource type, null if no resource type for the given name was found.</param>
            <returns>True if we found the resource type for the given name, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="resourceType"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <param name="serviceOperation">Returns the resolved service operation, null if no service operation was found for the given name.</param>
            <returns>True if we found the service operation for the given name, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the resource set.
            </summary>
            <param name="resourceSet">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the set; null if there is 
            no set for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="target"/>.</summary>
            <param name="target">Target instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="target"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetOpenPropertyValue(System.Object,System.String)">
            <summary>
            Get the value of the open property.
            </summary>
            <param name="target">instance of the type declaring the open property.</param>
            <param name="propertyName">name of the open property.</param>
            <returns>value for the open property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>
            Invoke the given service operation and returns the results.
            </summary>
            <param name="serviceOperation">service operation to invoke.</param>
            <param name="parameters">value of parameters to pass to the service operation.</param>
            <returns>returns the result of the service operation. If the service operation returns void, then this should return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ScheduleInvokable(System.Data.Services.Providers.IDataServiceInvokable)">
            <summary>
            Queues up the <paramref name="invokable"/> to be invoked during IUpdatable.SaveChanges().
            </summary>
            <param name="invokable">The invokable instance whose Invoke() method will be called during IUpdatable.SaveChanges().</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.SetConcurrencyValues(System.Object,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Passes the etag value for the given resource.
            </summary>
            <param name="resourceCookie">cookie representing the resource.</param>
            <param name="checkForEquality">true if we need to compare the property values for equality. If false, then we need to compare values for non-equality.</param>
            <param name="concurrencyValues">list of the etag property names and its corresponding values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.CreateResource(System.String,System.String)">
            <summary>
            Creates the resource of the given type and belonging to the given container
            </summary>
            <param name="containerName">container name to which the resource needs to be added</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and belonging to the given container</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetResource(System.Linq.IQueryable,System.String)">
            <summary>
            Gets the resource of the given type that the query points to
            </summary>
            <param name="query">query pointing to a particular resource</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and as referenced by the query</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ResetResource(System.Object)">
            <summary>
            Resets the value of the given resource to its default value
            </summary>
            <param name="resource">resource whose value needs to be reset</param>
            <returns>same resource with its value reset</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <returns>the value of the property for the given target resource</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.SetReference(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given reference property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>
            Adds the given value to the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeAdded">value of the property which needs to be added</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>
            Removes the given value from the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeRemoved">value of the property which needs to be removed</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.DeleteResource(System.Object)">
            <summary>
            Delete the given resource
            </summary>
            <param name="targetResource">resource that needs to be deleted</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.SaveChanges">
            <summary>
            Saves all the pending changes made till now
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ResolveResource(System.Object)">
            <summary>
            Returns the actual instance of the resource represented by the given resource object
            </summary>
            <param name="resource">object representing the resource whose instance needs to be fetched</param>
            <returns>The actual instance of the resource represented by the given resource object</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ClearChanges">
            <summary>
            Revert all the pending changes.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.FinalizeMetadataModel(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Called by the service to let the provider perform data model validation.
            </summary>
            <param name="knownTypes">Collection of known types.</param>
            <param name="useMetadataCacheOrder">Whether to use metadata cache ordering instead of default ordering.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetEntityContainerAnnotations(System.String)">
            <summary>
            Return the list of custom annotation for the entity container with the given name.
            </summary>
            <param name="entityContainerName">Name of the EntityContainer.</param>
            <returns>Return the list of custom annotation for the entity container with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetETagProperties(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Given a resource container and resource type, gets the list of ResourceProperties that
            are part of the ETag.
            </summary>
            <param name="containerName">Resource set name.</param>
            <param name="resourceType">Resource type of entities in the resource container.</param>
            <returns>Collection of properties that are part of the ETag.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType.-or- null if there is no service object of type serviceType.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.Dispose(System.Boolean)">
            <summary>
            Disposes the current object.
            </summary>
            <param name="disposing">Whethere the call is coming from IDisposable interface.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.CreateInnerProvider(System.Object,System.Object)">
            <summary>
            Creates the inner provider object.
            </summary>
            <param name="dataServiceInstance">Data service instance.</param>
            <param name="dataSourceInstance">Data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.LoadMetadata(System.Boolean)">
            <summary>
            Initializes the provider by loading metdata information.
            </summary>
            <param name="skipServiceOperations">Should service operations be loaded.</param>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ResourceSets">
            <summary>Gets all available containers.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.Types">
            <summary>Returns all the types in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ServiceOperations">
            <summary>Returns all the service operations in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.CurrentDataSource">
            <summary>The data source from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.IsNullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.ProviderBehavior">
            <summary>
            Instance of provider behavior that defines the assumptions service should make
            about the provider.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.EntityFrameworkDataServiceProvider.EdmSchemaVersion">
            <summary>
            Gets the metadata schema version.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IResourcePropertyBasedEdmProperty">
            <summary>
            Extends <see cref="T:Microsoft.Data.Edm.IEdmProperty"/> to expose the <see cref="P:System.Data.Services.Providers.IResourcePropertyBasedEdmProperty.ResourceProperty"/> that the property was based on.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IResourcePropertyBasedEdmProperty.ResourceProperty">
            <summary>
            The <see cref="P:System.Data.Services.Providers.IResourcePropertyBasedEdmProperty.ResourceProperty"/> this edm property was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IResourceSetBasedEdmEntitySet">
            <summary>
            Extends <see cref="T:Microsoft.Data.Edm.IEdmEntitySet"/> to expose the <see cref="T:System.Data.Services.Providers.ResourceSetWrapper"/> that the entity set was based on.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IResourceSetBasedEdmEntitySet.ResourceSet">
            <summary>
            The resource-set wrapper that this entity-set was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IResourceTypeBasedEdmType">
            <summary>
            Extends <see cref="T:Microsoft.Data.Edm.IEdmType"/> to expose the <see cref="P:System.Data.Services.Providers.IResourceTypeBasedEdmType.ResourceType"/> that the type was based on.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IResourceTypeBasedEdmType.ResourceType">
            <summary>
            The resource-type that this type was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmCollectionType">
            <summary>
            Implementation of <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> based on a <see cref="P:System.Data.Services.Providers.MetadataProviderEdmCollectionType.ResourceType"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmCollectionType.#ctor(System.Data.Services.Providers.ResourceType,Microsoft.Data.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Providers.MetadataProviderEdmCollectionType"/>.
            </summary>
            <param name="collectionResourceType">The collection resource type this edm collection type is being created for.</param>
            <param name="elementType">The element type of the collection.</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmCollectionType.ResourceType">
            <summary>
            The resource-type that this type was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmModelMode">
            <summary>
            Internal enum for indicating whether the <see cref="T:System.Data.Services.Providers.MetadataProviderEdmModel"/> is currently being used for reading/writing payloads or parsing URIs.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModelMode.Serialization">
            <summary>
            Indicates that the model is being used for reading/writing payloads.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModelMode.SelectAndExpandParsing">
            <summary>
            Indicates that the model is being used for parsing $select/$expand.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModelMode.UriPathParsing">
            <summary>
            Indicates that the model is being used for URI path parsing.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceActionResolver">
            <summary>
            This interface is intended to extend <see cref="T:System.Data.Services.Providers.IDataServiceActionProvider"/> and add additional information for resolving service actions during URI parsing.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceActionResolver.TryResolveServiceAction(System.Data.Services.DataServiceOperationContext,System.Data.Services.Providers.ServiceActionResolverArgs,System.Data.Services.Providers.ServiceAction@)">
            <summary>
            Tries to find the <see cref="T:System.Data.Services.Providers.ServiceAction"/> for the given resolution arguments.
            </summary>
            <param name="operationContext">The data service operation context instance.</param>
            <param name="resolverArgs">The arguments to use when resolving the action.</param>
            <param name="serviceAction">Returns the service action instance if the resolution is successful; null otherwise.</param>
            <returns>true if the resolution is successful; false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceActionResolverArgs">
            <summary>
            Provides information for an attempt to resolve a specific service action during URI parsing.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceActionResolverArgs.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Providers.ServiceActionResolverArgs"/>.
            </summary>
            <param name="serviceActionName"> The service action name taken from the URI.</param>
            <param name="bindingType">The binding type based on interpreting the URI preceeding the action, or null if the action is being invoked from the root of the service.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceActionResolverArgs.ServiceActionName">
            <summary>
            The service action name taken from the URI.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceActionResolverArgs.BindingType">
            <summary>
            The binding type based on interpreting the URI preceeding the action, or null if the action is being invoked from the root of the service.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataEdmSchemaVersion">
            <summary>Schema version compliance of the metadata.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataEdmSchemaVersion.Version1Dot0">
            <summary>EDM v1.0 compliant.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataEdmSchemaVersion.Version1Dot1">
            <summary>EDM v1.1 compliant.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataEdmSchemaVersion.Version1Dot2">
            <summary>EDM v1.2 compliant.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataEdmSchemaVersion.Version2Dot0">
            <summary>EDM v2.0 compliant.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataEdmSchemaVersion.Version2Dot2">
            <summary>EDM v2.2 compliant.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataEdmSchemaVersion.Version3Dot0">
            <summary>EDM v3.0 compliant</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ProviderQueryBehaviorKind">
            <summary>
            The kind of query processing behavior from the provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ProviderQueryBehaviorKind.ReflectionProviderQueryBehavior">
            <summary>
            Treat the provider query processing behavior similar to the reflection based provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ProviderQueryBehaviorKind.EntityFrameworkProviderQueryBehavior">
            <summary>
            Treat the provider query processing behavior similar to the entity framework based provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ProviderQueryBehaviorKind.CustomProviderQueryBehavior">
            <summary>
            Treat the provider query processing behavior as a custom provider.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ProviderBehavior">
            <summary>
            Provider behavior encapsulates the runtime behavior of the provider. The service
            will check various properties the <see cref="T:System.Data.Services.Providers.ProviderBehavior"/> exposed by the <see cref="T:System.Data.Services.Providers.IDataServiceProviderBehavior"/> 
            to process the request.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ProviderBehavior.#ctor(System.Data.Services.Providers.ProviderQueryBehaviorKind)">
            <summary>
            Constructs a new instance of <see cref="T:System.Data.Services.Providers.ProviderBehavior"/>.
            </summary>
            <param name="queryBehaviorKind">Kind of query processing behavior for the provider.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ProviderBehavior.ProviderQueryBehavior">
            <summary>
            The kind of behavior service should assume from the provider.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmStructuralProperty">
            <summary>
            Implementation of <see cref="T:Microsoft.Data.Edm.IEdmStructuralProperty"/> based on a <see cref="P:System.Data.Services.Providers.MetadataProviderEdmStructuralProperty.ResourceProperty"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmStructuralProperty.#ctor(Microsoft.Data.Edm.IEdmStructuredType,System.Data.Services.Providers.ResourceProperty,Microsoft.Data.Edm.IEdmTypeReference,System.String,Microsoft.Data.Edm.EdmConcurrencyMode)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Providers.MetadataProviderEdmStructuralProperty"/> class.
            </summary>
            <param name="declaringType">The type that declares this property.</param>
            <param name="resourceProperty">The resource-property this edm property is based on.</param>
            <param name="type">The type of the property.</param>
            <param name="defaultValue">The default value of this property.</param>
            <param name="concurrencyMode">The concurrency mode of this property.</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmStructuralProperty.ResourceProperty">
            <summary>
            The <see cref="P:System.Data.Services.Providers.MetadataProviderEdmStructuralProperty.ResourceProperty"/> this edm property was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.OperationCache">
            <summary>
            Strongly typed cache for operations. Uses the operation name and binding parameter type as a cache-key.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationCache.underlyingCache">
            <summary>
            The underlying cache which actually stores the wrappers based on a cache-key computed from the operation name and binding parameter type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.TryGetWrapper(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.OperationWrapper@)">
            <summary>
            Tries to find a wrapper for an operation with the given name and binding parameter type.
            </summary>
            <param name="operationName">The operation name.</param>
            <param name="bindingType">The operation's binding parameter's type, or null.</param>
            <param name="wrapper">The wrapper, if found.</param>
            <returns>Whether or not a wrapper was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.TryGetWrapper(System.Data.Services.Providers.Operation,System.Data.Services.Providers.OperationWrapper@)">
            <summary>
            Tries to find a wrapper for the given operation.
            </summary>
            <param name="operation">The operation to find a wrapper for.</param>
            <param name="wrapper">The wrapper, if found.</param>
            <returns>Whether or not a wrapper was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.Add(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Adds the given operation wrapper to the cache.
            </summary>
            <param name="wrapper">The wrapper to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.Contains(System.Data.Services.Providers.Operation)">
            <summary>
            Determines whether the given operation has already been cached.
            </summary>
            <param name="operation">The operation to look for.</param>
            <returns>Whether or not the operation has been cached.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.Contains(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Determines whether the given operation has already been cached.
            </summary>
            <param name="operationWrapper">The operation wrapper to look for.</param>
            <returns>Whether or not the operation has been cached.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.GetCacheKey(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Creates a cache-key from the operation name and binding parameter type.
            </summary>
            <param name="operationName">The operation name.</param>
            <param name="bindingType">The binding parameter type.</param>
            <returns>The cache-key.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.GetCacheKey(System.Data.Services.Providers.Operation)">
            <summary>
            Creates a cache-key for the given operation.
            </summary>
            <param name="operation">The operation.</param>
            <returns>The cache-key.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationCache.GetCacheKey(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Creates a cache-key for the given operation wrapper.
            </summary>
            <param name="operation">The operation wrapper.</param>
            <returns>The cache-key.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.ReflectionDataServiceProvider">
            <summary>
            Reflection based provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ReflectionDataServiceProvider.innerProvider">
            <summary>
            ReflectionServiceProvider which provides implementation of metadata and query interfaces.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.#ctor(System.Data.Services.Providers.DataServiceProviderArgs)">
            <summary>
            Initializes a new System.Data.Services.Providers.ReflectionDataServiceProvider instance.
            </summary>
            <param name="args"><see cref="T:System.Data.Services.Providers.DataServiceProviderArgs"/> needed during provider construction.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.Providers.ReflectionDataServiceProvider instance.
            </summary>
            <param name="dataServiceInstance">Required data service instance.</param>
            <param name="dataSourceInstance">Required data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <param name="resourceSet">Returns the resolved resource set, null if no resource set for the given name was found.</param>
            <returns>True if resource set with the given name was found, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the ResourceAssociationSet instance when given the source association end.
            </summary>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
            <returns>ResourceAssociationSet instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <param name="resourceType">Returns the resolved resource type, null if no resource type for the given name was found.</param>
            <returns>True if we found the resource type for the given name, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="resourceType"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <param name="serviceOperation">Returns the resolved service operation, null if no service operation was found for the given name.</param>
            <returns>True if we found the service operation for the given name, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the resource set.
            </summary>
            <param name="resourceSet">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the set; null if there is 
            no set for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="target"/>.</summary>
            <param name="target">Target instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="target"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetOpenPropertyValue(System.Object,System.String)">
            <summary>
            Get the value of the open property.
            </summary>
            <param name="target">instance of the type declaring the open property.</param>
            <param name="propertyName">name of the open property.</param>
            <returns>value for the open property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>
            Invoke the given service operation and returns the results.
            </summary>
            <param name="serviceOperation">service operation to invoke.</param>
            <param name="parameters">value of parameters to pass to the service operation.</param>
            <returns>returns the result of the service operation. If the service operation returns void, then this should return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.FinalizeMetadataModel(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Called by the service to let the provider perform data model validation.
            </summary>
            <param name="knownTypes">Collection of known types.</param>
            <param name="useMetadataCacheOrder">Whether to use metadata cache ordering instead of default ordering.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetEntityContainerAnnotations(System.String)">
            <summary>
            Return the list of custom annotation for the entity container with the given name.
            </summary>
            <param name="entityContainerName">Name of the EntityContainer.</param>
            <returns>Return the list of custom annotation for the entity container with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType.-or- null if there is no service object of type serviceType.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.Dispose(System.Boolean)">
            <summary>
            Disposes the current object.
            </summary>
            <param name="disposing">Whethere the call is coming from IDisposable interface.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.CreateInnerProvider(System.Object,System.Object)">
            <summary>
            Creates the inner provider object.
            </summary>
            <param name="dataServiceInstance">Data service instance.</param>
            <param name="dataSourceInstance">Data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionDataServiceProvider.LoadMetadata(System.Boolean)">
            <summary>
            Initializes the provider by loading metdata information.
            </summary>
            <param name="skipServiceOperations">Sould service operations be loaded.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.ResourceSets">
            <summary>Gets all available containers.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.Types">
            <summary>Returns all the types in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.ServiceOperations">
            <summary>Returns all the service operations in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.CurrentDataSource">
            <summary>The data source from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.IsNullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionDataServiceProvider.ProviderBehavior">
            <summary>
            Instance of provider behavior that defines the assumptions service should make
            about the provider.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.SelectedOperationsCache">
            <summary>
            Cache for operations that were selected in the URI.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.SelectedOperationsCache.selectedOperationsByUriType">
            <summary>
            Cache of selected actions based on the type that was specified in the URI, either the base type of the feed or a type segment that preceeded the action name.
            This is stored so that at serialization time, we can conditionally select actions based on the instance type being serialized.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.SelectedOperationsCache.selectedOperationsByPayloadType">
            <summary>
            Cache of operations which should be serialized based on specific serialization-time instance types.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.SelectedOperationsCache.AddSelectedOperations(System.Data.Services.Providers.ResourceType,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.OperationWrapper})">
            <summary>
            Adds a set of selected operations from the URL.
            </summary>
            <param name="specificSelectedTypeInUri">The specific type for which the actions are selected. Should be either the base type of the feed or from a type segment.</param>
            <param name="selectedOperations">The selected operations returned by the provider.</param>
            <returns>Whether any operations were selected.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.SelectedOperationsCache.GetSelectedOperations(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the set of operations that should be serialized for a specific instance type based on what was selected in the URI and what is bindable to the given type.
            </summary>
            <param name="instanceTypeBeingSerialized">The instance type being serialized.</param>
            <returns>The selected bindable operations.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.SelectedOperationsCache.GetSelectedAndBindableOperationsForAssignableTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the set of operations selected for types the instance type can be assigned to that are bindable to the instance type.
            </summary>
            <param name="instanceTypeBeingSerialized">The instance type being serialized.</param>
            <returns>The selected bindable operations.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperationProvider">
            <summary>
            Provides the service writers capability to specify the type which implements
            the service operations.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationProvider.type">
            <summary>
            Type implementing service operations.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationProvider.resourceTypeResolver">
            <summary>
            Resolver that gives a <see cref="T:System.Data.Services.Providers.ResourceType"/> corresponding to given CLR type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationProvider.resourceSetResolver">
            <summary>
            Resolver that gives a <see cref="T:System.Data.Services.Providers.ResourceSet"/> corresponding to given <see cref="T:System.Data.Services.Providers.ResourceType"/> and <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationProvider.serviceOperations">
            <summary>
            Lazily one-time initialized collection of service operations.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationProvider.#ctor(System.Type,System.Func{System.Type,System.Data.Services.Providers.ResourceType},System.Func{System.Data.Services.Providers.ResourceType,System.Reflection.MethodInfo,System.Data.Services.Providers.ResourceSet})">
            <summary>
            Constructs a new instance of ServiceOperationProvider.
            </summary>
            <param name="type">Type implementing service operations.</param>
            <param name="resourceTypeResolver">Resolver that gives a <see cref="T:System.Data.Services.Providers.ResourceSet"/> corresponding to given <see cref="T:System.Data.Services.Providers.ResourceType"/> and <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <param name="resourceSetResolver">Resolver that gives a <see cref="T:System.Data.Services.Providers.ResourceType"/> corresponding to given CLR type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationProvider.FindServiceOperations">
            <summary>
            Iterates over all the interesting methods on the type passed in the constructor and infers
            all the service operations from it.
            </summary>
            <returns>A list of service operations inferred from the type provided in the constructor.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationProvider.GetServiceOperationForMethod(System.Reflection.MethodInfo,System.String)">
            <summary>
            Returns a new <see cref="T:System.Data.Services.Providers.ServiceOperation"/> based on the specified <paramref name="method"/>
            instance.
            </summary>
            <param name="method">Method to expose as a service operation.</param>
            <param name="protocolMethod">Protocol (for example HTTP) method the service operation responds to.</param>
            <returns>Service operation corresponding to give <paramref name="method"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationProvider.ResolveResourceType(System.Type)">
            <summary>
            Method for obtaining a <see cref="T:System.Data.Services.Providers.ResourceType"/> corresponding to the given CLR type.
            </summary>
            <param name="type">CLR type.</param>
            <returns><see cref="T:System.Data.Services.Providers.ResourceType"/> correspoding to <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationProvider.ResolveResourceSet(System.Data.Services.Providers.ResourceType,System.Reflection.MethodInfo)">
            <summary>
            Method for obtaining a <see cref="T:System.Data.Services.Providers.ResourceSet"/> corresponding to given resource type.
            </summary>
            <param name="resourceType">Given resource type.</param>
            <param name="methodInfo">MethodInfo for a service operation.</param>
            <returns><see cref="T:System.Data.Services.Providers.ResourceSet"/> corresponding to <paramref name="resourceType"/>.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperationProvider.ServiceOperations">
            <summary>
            Returns all the service operations exposed on the registered types.
            </summary>
            <returns>Collection of service operations.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.OperationLinkBuilder">
            <summary>
            Component for generating metadata and target links for operations being serialized in entity payloads.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationLinkBuilder.metadataUri">
            <summary>
            The metadata URI of the service.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationLinkBuilder.containerName">
            <summary>
            The default container name.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationLinkBuilder.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Serializers.OperationLinkBuilder"/> class.
            </summary>
            <param name="containerName">Name of the default entity container.</param>
            <param name="metadataUri">The metadata URI of the service.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationLinkBuilder.BuildMetadataLink(System.Data.Services.Providers.OperationWrapper,System.Boolean)">
            <summary>
            Gets the metadata link value for an <see cref="T:Microsoft.Data.OData.ODataOperation"/>
            </summary>
            <param name="operation">The operation to generate the link for.</param>
            <param name="entityHasMultipleActionsWithSameName">Whether or not there are multiple operations in the current scope with the same name as the current operation.</param>
            <returns>Uri representing the link to this operations metadata.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationLinkBuilder.BuildTargetLink(System.Data.Services.Serializers.EntityToSerialize,System.Data.Services.Providers.OperationWrapper,System.Boolean)">
            <summary>
            Gets the target link value for an <see cref="T:Microsoft.Data.OData.ODataOperation"/>
            </summary>
            <param name="entityToSerialize">The current entity being serialized.</param>
            <param name="operation">The operation to generate the link for.</param>
            <param name="entityHasMultipleActionsWithSameName">Whether or not there are multiple operations in the current scope with the same name as the current operation.</param>
            <returns>Uri representing link to use for invoking this operation.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationLinkBuilder.AppendParameterTypeNames(System.Data.Services.Providers.OperationWrapper,System.Text.StringBuilder)">
            <summary>
            Appends the parameter type names onto the metadata link for an operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder with everything up to the operation name.</param>
        </member>
        <member name="T:System.Data.Services.VocabularyAnnotationCache">
            <summary>
            Represents an annotated EDM model.
            </summary>
        </member>
        <member name="F:System.Data.Services.VocabularyAnnotationCache.primaryModel">
            <summary>The primary model</summary>
        </member>
        <member name="F:System.Data.Services.VocabularyAnnotationCache.uniqueAnnotationsStorage">
            <summary>The unique collection of vocabulary annotatedModels that are either contained in the primary model or that target items in the primary model.</summary>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.#ctor(Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the VocabularyAnnotationCache class.
            </summary>
            <param name="primaryModel">The primary model the annotatedModels belong to.</param>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.FindDeclaredVocabularyAnnotations(Microsoft.Data.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotatedModels specified by the primary model or a referenced model (including the annotation models) for a given element.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotatedModels for the element.</returns>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.Add(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation)">
            <summary>
            Adds the specified annotation.
            </summary>
            <param name="annotation">The annotation to add.</param>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.PopulateFromConfiguration(System.Data.Services.DataServiceConfiguration)">
            <summary>
            Populates the annotation cache based on the current configuration of the service.
            1) Adds any annotatedModels specific to the current URL convention.
            2) Invokes the user-provided 'AnnotationsBuilder' delegate.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.IsModelMember(Microsoft.Data.Edm.IEdmVocabularyAnnotatable,Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Checks whether an annotatable item is contained within a given model.
            </summary>
            <param name="item">The annotatable item.</param>
            <param name="model">The model to search within.</param>
            <returns>A boolean to indicate whether or not the item was found.</returns>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.AddAnnotations(System.Collections.Generic.IEnumerable{Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation})">
            <summary>
            Adds a set of annotations that can be returned when either FindDeclaredVocabularyAnnotations or VocabulationAnnotations are accessed.
            </summary>
            <param name="annotations">The enumerable list of annotations.</param>
        </member>
        <member name="P:System.Data.Services.VocabularyAnnotationCache.VocabularyAnnotations">
            <summary>
            Gets the collection of vocabulary annotatedModels that are either contained in the primary model or that 
            target items in the primary model. In case of duplicates, the first annotation is taken and the rest are 
            ignored (i.e. the ordering of the annotation models is significant). Uniqueness of annotatedModels is 
            determined based on [target, term, qualifier].
            </summary>
        </member>
        <member name="T:System.Data.Services.VocabularyAnnotationCache.AnnotationComparer">
            <summary>Equality comparer for IEdmVocabularyAnnotation.</summary>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.AnnotationComparer.Equals(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation,Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation)">
            <summary>Determines whether two IEdmVocabularyAnnotations are the same.</summary>
            <param name="x">First AnnotationDescriptor to compare.</param>
            <param name="y">Second AnnotationDescriptor to compare.</param>
            <returns>true if both are the same; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.VocabularyAnnotationCache.AnnotationComparer.GetHashCode(Microsoft.Data.Edm.Annotations.IEdmVocabularyAnnotation)">
            <summary>Computes hashcode for IEdmVocabularyAnnotation.</summary>
            <param name="obj">Object to compute hashcode for.</param>
            <returns>Computed hashcode.</returns>
        </member>
        <member name="T:System.Data.Services.CallbackQueryOptionHandler">
            <summary>
            Handles $callback query parameter.
            </summary>
        </member>
        <member name="M:System.Data.Services.CallbackQueryOptionHandler.HandleCallbackQueryOption(System.Data.Services.AstoriaRequestMessage,System.Data.Services.ODataFormatWithParameters)">
            <summary>
            Gets the $callback query parameter if present. Also performs some validation:
            We do not allow $callback to be present if the content-type for the response is going to be anythign but JSON or plain text.
            </summary>
            <param name="message">The request message.</param>
            <param name="format">The format we will write the reponse in.</param>
            <returns>Returns the name of the callback function $callback specifies, or null if there isn't one.</returns>
        </member>
        <member name="T:System.Data.Services.ClientPreference">
            <summary>
            Represents the client's preferences as specified in the 'prefer' request header.
            </summary>
        </member>
        <member name="F:System.Data.Services.ClientPreference.None">
            <summary>
            Singleton instance which expresses no client preferences.
            </summary>
        </member>
        <member name="F:System.Data.Services.ClientPreference.responseBodyPreference">
            <summary>
            The client's preference for whether or not to send a response body.
            </summary>
        </member>
        <member name="F:System.Data.Services.ClientPreference.annotationFilter">
            <summary>
            The client's preference for what instance annotations to send on the response.
            </summary>
        </member>
        <member name="M:System.Data.Services.ClientPreference.#ctor(System.Data.Services.RequestDescription,System.Data.Services.HttpVerbs,Microsoft.Data.OData.IODataRequestMessage,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.ClientPreference"/> class.
            </summary>
            <param name="requestDescription">The request description.</param>
            <param name="verb">The request verb.</param>
            <param name="requestMessage">The request message.</param>
            <param name="effectiveMaxResponseVersion">The effective max response version for the request, which is the min of MDSV and MPV.</param>
        </member>
        <member name="M:System.Data.Services.ClientPreference.#ctor(System.Data.Services.ClientPreference.ResponseBodyPreference)">
            <summary>
            Prevents a default instance of the <see cref="T:System.Data.Services.ClientPreference"/> class from being created.
            </summary>
            <param name="responseBodyPreference">The response body preference.</param>
        </member>
        <member name="M:System.Data.Services.ClientPreference.InterpretClientPreference(System.Data.Services.RequestDescription,System.Data.Services.HttpVerbs,Microsoft.Data.OData.IODataRequestMessage)">
            <summary>
            Interprets the client preference for having a response body.
            </summary>
            <param name="requestDescription">The request description.</param>
            <param name="verb">The request verb.</param>
            <param name="requestMessage">The request message.</param>
            <returns>An enum representation of the client's preference.</returns>
        </member>
        <member name="P:System.Data.Services.ClientPreference.HasResponseBodyPreference">
            <summary>
            Gets a value indicating whether the client has a preference for whether or not to include a response body.
            </summary>
            <value>
                <c>true</c> if the client has a preference for whether or not to include a response body; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:System.Data.Services.ClientPreference.ShouldIncludeResponseBody">
            <summary>
            Gets a value indicating that a the client prefers a response body.
            </summary>
            <value>
                <c>true</c> if the client prefers a response body; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:System.Data.Services.ClientPreference.ShouldNotIncludeResponseBody">
            <summary>
            Gets a value indicating that a the client prefers no response body.
            </summary>
            <value>
                <c>true</c> if the client prefers no response body; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:System.Data.Services.ClientPreference.AnnotationFilter">
            <summary>
            The client's preference for what annotations to send on the response.
            </summary>
        </member>
        <member name="P:System.Data.Services.ClientPreference.RequiredResponseVersion">
            <summary>
            Gets the required response version based on whether preferences were applied.
            </summary>
        </member>
        <member name="T:System.Data.Services.ClientPreference.ResponseBodyPreference">
            <summary>
            Client preference for having/not-having a response body.
            </summary>
        </member>
        <member name="F:System.Data.Services.ClientPreference.ResponseBodyPreference.None">
            <summary>
            No client preference was honored, default behavior.
            </summary>
        </member>
        <member name="F:System.Data.Services.ClientPreference.ResponseBodyPreference.NoContent">
            <summary>
            Client asked for no-content.
            </summary>
        </member>
        <member name="F:System.Data.Services.ClientPreference.ResponseBodyPreference.Content">
            <summary>
            Client asked for content.
            </summary>
        </member>
        <member name="T:System.Data.Services.Configuration.DataServicesConfigurationConstants">
            <summary>
            Constants to be used in the configuration file.
            </summary>
        </member>
        <member name="F:System.Data.Services.Configuration.DataServicesConfigurationConstants.FeaturesSectionName">
            <summary>
            Name of the section where features can be turned on/off
            </summary>
        </member>
        <member name="F:System.Data.Services.Configuration.DataServicesConfigurationConstants.ReplaceFunctionFeatureElementName">
            <summary>
            Element name for allowing replace functions in url feature.
            </summary>
        </member>
        <member name="F:System.Data.Services.Configuration.DataServicesConfigurationConstants.EnableAttributeName">
            <summary>
            Attribute name to enable features.
            </summary>
        </member>
        <member name="T:System.Data.Services.Configuration.DataServicesFeaturesSection">
            <summary>
            Features section for data services
            </summary>
        </member>
        <member name="P:System.Data.Services.Configuration.DataServicesFeaturesSection.ReplaceFunction">
            <summary>
            Element to specify whether replace functions should be allowed in url or not.
            </summary>
        </member>
        <member name="T:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature">
            <summary>
            Feature for allowing replace functions in url.
            </summary>
        </member>
        <member name="P:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature.Enable">
            <summary>
            Returns the value of the enable attribute for data services replace feature.
            </summary>
        </member>
        <member name="P:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature.IsPresent">
            <summary>
            returns true if the element is present otherwise false.
            </summary>
        </member>
        <member name="T:System.Data.Services.Configuration.DataServicesSectionGroup">
            <summary>
            Configuration section group for data services
            </summary>
        </member>
        <member name="P:System.Data.Services.Configuration.DataServicesSectionGroup.Features">
            <summary>
            Features section whether you can turn on/off specific data services features.
            </summary>
        </member>
        <member name="T:System.Data.Services.IAcceptableContentTypeSelector">
            <summary>
            Strategy for getting the content type based on $format and the accept header.
            </summary>
        </member>
        <member name="M:System.Data.Services.IAcceptableContentTypeSelector.GetFormat(System.String,System.String,System.Version)">
            <summary>
            Gets a comma-separated list of client-supported MIME Accept types.
            If $format is found with a value we recognize, we must use the matching content type and ignore accept header.
            If $format is found but we don't recognize the value, return just that value (don't even concat to accept values). Later we'll probably throw.
            If no $format, use accept header value (might be a list).  Returning null indicates neither was set.
            </summary>
            <param name="dollarFormatValue">Value of $format or null.</param>
            <param name="acceptHeaderValue">Value of accept header or null.</param>
            <param name="maxDataServiceVersion">MaxDataServiceVersion as specified by the request or determined from our logic.</param>
            <returns>A comma-separated list of client-supported MIME Accept types.</returns>
        </member>
        <member name="T:System.Data.Services.AcceptableContentTypeSelector">
            <summary>
            Strategy for getting the content type based on $format and the accept header for V3.
            </summary>
        </member>
        <member name="M:System.Data.Services.AcceptableContentTypeSelector.GetFormat(System.String,System.String,System.Version)">
            <summary>
            Gets a comma-separated list of client-supported MIME Accept types.
            If $format is found with a value we recognize, we must use the matching content type and ignore accept header.
            If $format is found but we don't recognize the value, return just that value (don't even concat to accept values). Later we'll probably throw.
            If no $format, use accept header value (might be a list).  Returning null indicates neither was set.
            </summary>
            <param name="dollarFormatValue">Value of $format or null.</param>
            <param name="acceptHeaderValue">Value of accept header or null.</param>
            <param name="maxDataServiceVersion">MaxDataServiceVersion as specified by the request or determined from our logic.</param>
            <returns>A comma-separated list of client-supported MIME Accept types.</returns>
        </member>
        <member name="T:System.Data.Services.DataServiceODataWriter">
            <summary>
            Public class which wraps the ODataWriter instance.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceODataWriter.innerWriter">
            <summary>
            ODataWriter instance that this class wraps.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.#ctor(Microsoft.Data.OData.ODataWriter)">
            <summary>
            Creates a new instance of DataServiceODataWriter.
            </summary>
            <param name="odataWriter">Instance of ODataWriter that this class wraps.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteStart(System.Data.Services.DataServiceODataWriterFeedArgs)">
            <summary>
            Start writing a feed.
            </summary>
            <param name="args">DataServiceODataWriterFeedArgs which contains the ODataFeed and the collection instance to serialize.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteStart(System.Data.Services.DataServiceODataWriterEntryArgs)">
            <summary>
            Start writing an entry.
            </summary>
            <param name="args">DataServiceODataWriterEntryArgs which contains the ODataEntry and the entry instance to serialize.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteStart(System.Data.Services.DataServiceODataWriterNavigationLinkArgs)">
            <summary>
            Start writing a navigation link.
            </summary>
            <param name="args">DataServiceODataWriterNavigationLinkArgs which contains the ODataNavigationLink to serialize.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteEnd">
            <summary>
            Finish writing a feed/entry/navigation link.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteEnd(System.Data.Services.DataServiceODataWriterFeedArgs)">
            <summary>
            Finish writing a feed.
            </summary>
            <param name="args">DataServiceODataWriterFeedArgs which contains the ODataFeed and the collection instance that is being serialized.</param>
            <remarks>
            This method calls WriteEnd() and it's used to track when WriteEnd is called for feed.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteEnd(System.Data.Services.DataServiceODataWriterEntryArgs)">
            <summary>
            Finish writing an entry.
            </summary>
            <param name="args">DataServiceODataWriterEntryArgs which contains the ODataEntry and the entry instance that is being serialized.</param>
            <remarks>
            This method calls WriteEnd() and it's used to track when WriteEnd is called for Entry.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.WriteEnd(System.Data.Services.DataServiceODataWriterNavigationLinkArgs)">
            <summary>
            Finish writing a navigation link.
            </summary>
            <param name="args">DataServiceODataWriterNavigationLinkArgs which contains the ODataNavigationLink that is being serialized.</param>
            <remarks>
            This method calls WriteEnd() and it's used to track when WriteEnd is called for Link.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriter.Flush">
            <summary>
            Flushes the write buffer to the underlying stream.
            </summary>
        </member>
        <member name="T:System.Data.Services.DataServiceODataWriterEntryArgs">
            <summary>
            Class that keeps track of the ODataEntry, entity instance and other information
            that we need to provide to the service author when they choose to provide their own
            instance of ODataWriter.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriterEntryArgs.#ctor(Microsoft.Data.OData.ODataEntry,System.Object,System.Data.Services.DataServiceOperationContext)">
            <summary>
            Creates a new instance of DataServiceODataWriterEntryArgs
            </summary>
            <param name="entry">ODataEntry instance.</param>
            <param name="entityInstance">Entity instance that is getting serialized.</param>
            <param name="operationContext">DataServiceOperationContext instance.</param>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterEntryArgs.Entry">
            <summary>
            Gets the ODataEntry instance containing all the information
            that is going to be written in the wire.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterEntryArgs.Instance">
            <summary>
            Gets the instance of the entity that is getting serialized.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterEntryArgs.OperationContext">
            <summary>
            Gets the instance of DataServiceOperationContext.
            </summary>
        </member>
        <member name="T:System.Data.Services.DataServiceODataWriterFeedArgs">
            <summary>
            Class that keeps track of the ODataFeed, collection instance and other information
            that we need to provide to the service author when they choose to provide their own
            instance of ODataWriter.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriterFeedArgs.#ctor(Microsoft.Data.OData.ODataFeed,System.Collections.IEnumerable,System.Data.Services.DataServiceOperationContext)">
            <summary>
            Creates a new instance of DataServiceODataWriterFeedArgs
            </summary>
            <param name="feed">ODataFeed instance.</param>
            <param name="results">IEnumerable instance that is getting serialized.</param>
            <param name="operationContext">DataServiceOperationContext instance.</param>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterFeedArgs.Feed">
            <summary>
            Gets the instance of ODataFeed that is going to get serialized.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterFeedArgs.Results">
            <summary>
            Gets the IEnumerable instance which represent the collection that is getting serialized.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterFeedArgs.OperationContext">
            <summary>
            Gets the instance of DataServiceOperationContext.
            </summary>
        </member>
        <member name="T:System.Data.Services.DataServiceODataWriterNavigationLinkArgs">
            <summary>
            Class that keeps track of the ODataNavigationLink and other information
            that we need to provide to the service author when they choose to provide their own
            instance of ODataWriter.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceODataWriterNavigationLinkArgs.#ctor(Microsoft.Data.OData.ODataNavigationLink,System.Data.Services.DataServiceOperationContext)">
            <summary>
            Creates a new instance of DataServiceODataWriterNavigationLinkArgs.
            </summary>
            <param name="navigationLink">Instance of ODataNavigationLink.</param>
            <param name="operationContext">Instance of DataServiceOperationContext.</param>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterNavigationLinkArgs.NavigationLink">
            <summary>
            Gets the ODataNavigationLink instance that is going to be serialized.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceODataWriterNavigationLinkArgs.OperationContext">
            <summary>
            Gets the instance of DataServiceOperationContext.
            </summary>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser">
            <summary>Use this class to parse literals from keys, etags, skiptokens, and filter/orderby expression constants.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.DefaultInstance">
            <summary>
            Default singleton instance of the literal parser.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.ExpressionInstance">
            <summary>
            Singleton instance of the literal parser to use for filters and operation parameters.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.KeysAsSegmentsInstance">
            <summary>
            Singleton instance of the literal parser for when keys-as-segments is turned on, which does not wrap the formatted strings in any quotes or type-markers.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.Parsers">
            <summary>
            Mapping between primitive CLR types and lightweight parser classes for that type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.ForKeys(System.Boolean)">
            <summary>
            Gets the literal parser for keys, based on whether the keys are formatted as segments.
            </summary>
            <param name="keyAsSegment">Whether or not the keys is formatted as a segment.</param>
            <returns>The literal parser to use.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.TryParseLiteral(System.Type,System.String,System.Object@)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="targetType">Type to convert string to.</param>
            <param name="text">String text to convert.</param>
            <param name="result">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.Parsing.LiteralParser.ForExpressions">
            <summary>
            Gets the literal parser to use for constants in filter/orderby expressions and operation parameters.
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.LiteralParser.ForETags">
            <summary>
            Gets the literal parser to use for ETags.
            </summary>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.DefaultLiteralParser">
            <summary>
            Default literal parser which has type-markers and single-quotes. Also supports arbitrary literals being re-encoded in binary form.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DefaultLiteralParser.TryParseLiteral(System.Type,System.String,System.Object@)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="targetType">Type to convert string to.</param>
            <param name="text">String text to convert.</param>
            <param name="result">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DefaultLiteralParser.TryRemoveFormattingAndConvert(System.String,System.Type,System.Object@)">
            <summary>
            Tries to parse the literal by first removing required formatting for the expected type, then converting the resulting string.
            </summary>
            <param name="text">String text to convert.</param>
            <param name="targetType">Type to convert string to.</param>
            <param name="targetValue">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.LiteralParserWithSpatialSupport">
            <summary>
            Literal parser which supports spatial values, but is otherwise equivalent to the default parser.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.LiteralParserWithSpatialSupport.TryParseLiteral(System.Type,System.String,System.Object@)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="targetType">Type to convert string to.</param>
            <param name="text">String text to convert.</param>
            <param name="result">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.KeysAsSegmentsLiteralParser">
            <summary>
            Simplified literal parser for keys-as-segments which does not expect type-markers, single-quotes, etc. Does not support re-encoding literals as binary.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.KeysAsSegmentsLiteralParser.TryParseLiteral(System.Type,System.String,System.Object@)">
            <summary>Converts a string to a primitive value.</summary>
            <param name="targetType">Type to convert string to.</param>
            <param name="text">String text to convert.</param>
            <param name="result">After invocation, converted value.</param>
            <returns>true if the value was converted; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.KeysAsSegmentsLiteralParser.UnescapeLeadingDollarSign(System.String)">
            <summary>
            If the string starts with '$', removes it.
            Also asserts that the 2nd character is also '$', as otherwise the string would be treated as a system segment.
            </summary>
            <param name="text">The text.</param>
            <returns>The string value with a leading '$' removed, if the string started with one.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.PrimitiveParser">
            <summary>
            Helper class for parsing a specific type of primitive literal.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.XmlWhitespaceChars">
            <summary>XML whitespace characters to trim around literals.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.prefix">
            <summary>
            The expected prefix for the literal. Null indicates no prefix is expected.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.suffix">
            <summary>
            The expected suffix for the literal. Null indicates that no suffix is expected.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.suffixRequired">
            <summary>
            Whether or not the suffix is required.
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.expectedType">
            <summary>
            The expected type for this parser.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.#ctor(System.Type,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.PrimitiveParser"/> class.
            </summary>
            <param name="expectedType">The expected type for this parser.</param>
            <param name="suffix">The expected suffix for the literal. Null indicates that no suffix is expected.</param>
            <param name="suffixRequired">Whether or not the suffix is required.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.PrimitiveParser"/> class.
            </summary>
            <param name="expectedType">The expected type for this parser.</param>
            <param name="prefix">The expected prefix for the literal.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.PrimitiveParser"/> class.
            </summary>
            <param name="expectedType">The expected type for this parser.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.TryConvert(System.String,System.Object@)">
            <summary>
            Tries to convert the given text into this parser's expected type. Conversion only, formatting should already have been removed.
            </summary>
            <param name="text">The text to convert.</param>
            <param name="targetValue">The target value.</param>
            <returns>Whether or not conversion was successful.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.TryRemoveFormatting(System.String@)">
            <summary>
            Tries to remove formatting specific to this parser's expected type.
            </summary>
            <param name="text">The text to remove formatting from.</param>
            <returns>Whether or not the expected formatting was found and succesfully removed.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.ValueOfTypeCanContainQuotes(System.Type)">
            <summary>
            Determines whether the values for the specified types should be 
            quoted in URI keys.
            </summary>
            <param name='type'>Type to check.</param>
            <returns>
            true if values of <paramref name='type' /> require quotes; false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.PrimitiveParser.TryRemoveLiteralSuffix(System.String,System.String@)">
            <summary>
            Check and strip the input <paramref name="text"/> for literal <paramref name="suffix"/>
            </summary>
            <param name="suffix">The suffix value</param>
            <param name="text">The string to check</param>
            <returns>A string that has been striped of the suffix</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1">
            <summary>
            Primitive parser which uses a delegate for conversion.
            </summary>
            <typeparam name="T">The expected CLR type when parsing.</typeparam>
        </member>
        <member name="F:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.convertMethod">
            <summary>
            The delegate to use for conversion.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.#ctor(System.Func{System.String,`0},System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1"/> class.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
            <param name="suffix">The expected suffix for the literal. Null indicates that no suffix is expected.</param>
            <param name="suffixRequired">Whether or not the suffix is required.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.#ctor(System.Func{System.String,`0})">
            <summary>
            Prevents a default instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1"/> class from being created.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.#ctor(System.Func{System.String,`0},System.String)">
            <summary>
            Prevents a default instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1"/> class from being created.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
            <param name="prefix">The expected prefix for the literal.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.WithoutMarkup(System.Func{System.String,`0})">
            <summary>
            Creates a primitive parser which wraps the given delegate and does not expect any extra markup in serialized literal.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
            <returns>A new primitive parser.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.WithPrefix(System.Func{System.String,`0},System.String)">
            <summary>
            Creates a primitive parser which wraps the given delegate and expects serialized literals to start with one of the given prefixes.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
            <param name="prefix">The expected prefix for the literal.</param>
            <returns>A new primitive parser.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.WithSuffix(System.Func{System.String,`0},System.String)">
            <summary>
            Creates a primitive parser which wraps the given delegate and expects serialized literals to end with the given suffix.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
            <param name="suffix">The expected suffix for the literal. Null indicates that no suffix is expected.</param>
            <returns>A new primitive parser.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.WithSuffix(System.Func{System.String,`0},System.String,System.Boolean)">
            <summary>
            Creates a primitive parser which wraps the given delegate and expects serialized literals to end with the given suffix.
            </summary>
            <param name="convertMethod">The delegate to use for conversion.</param>
            <param name="suffix">The expected suffix for the literal. Null indicates that no suffix is expected.</param>
            <param name="required">Whether or not the suffix is required.</param>
            <returns>A new primitive parser.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DelegatingPrimitiveParser`1.TryConvert(System.String,System.Object@)">
            <summary>
            Tries to convert the given text into this parser's expected type. Conversion only, formatting should already have been removed.
            </summary>
            <param name="text">The text to convert.</param>
            <param name="targetValue">The target value.</param>
            <returns>
            Whether or not conversion was successful.
            </returns>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.DecimalPrimitiveParser">
            <summary>
            Parser specific to the Edm.Decimal type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DecimalPrimitiveParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.DecimalPrimitiveParser"/> class.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.DecimalPrimitiveParser.ConvertDecimal(System.String)">
            <summary>
            Special helper to convert a string to a decimal that will allow more than what XmlConvert.ToDecimal supports by default.
            </summary>
            <param name="text">The text to convert.</param>
            <returns>The converted decimal value.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.BinaryPrimitiveParser">
            <summary>
            Parser specific to the Edm.Binary type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.BinaryPrimitiveParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.BinaryPrimitiveParser"/> class.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.BinaryPrimitiveParser.TryConvert(System.String,System.Object@)">
            <summary>
            Tries to convert the given text into this parser's expected type. Conversion only, formatting should already have been removed.
            </summary>
            <param name="text">The text to convert.</param>
            <param name="targetValue">The target value.</param>
            <returns>
            Whether or not conversion was successful.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.BinaryPrimitiveParser.TryRemoveFormatting(System.String@)">
            <summary>
            Tries to remove formatting specific to this parser's expected type.
            </summary>
            <param name="text">The text to remove formatting from.</param>
            <returns>
            Whether or not the expected formatting was found and succesfully removed.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.BinaryPrimitiveParser.HexCharToNibble(System.Char)">
            <summary>Returns the 4 bits that correspond to the specified character.</summary>
            <param name="c">Character in the 0-F range to be converted.</param>
            <returns>The 4 bits that correspond to the specified character.</returns>
            <exception cref="T:System.FormatException">Thrown when 'c' is not in the '0'-'9','a'-'f' range.</exception>
        </member>
        <member name="T:System.Data.Services.Parsing.LiteralParser.StringPrimitiveParser">
            <summary>
            Parser specific to the Edm.String type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.StringPrimitiveParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Parsing.LiteralParser.StringPrimitiveParser"/> class.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.StringPrimitiveParser.TryConvert(System.String,System.Object@)">
            <summary>
            Tries to convert the given text into this parser's expected type. Conversion only, formatting should already have been removed.
            </summary>
            <param name="text">The text to convert.</param>
            <param name="targetValue">The target value.</param>
            <returns>
            Whether or not conversion was successful.
            </returns>
        </member>
        <member name="M:System.Data.Services.Parsing.LiteralParser.StringPrimitiveParser.TryRemoveFormatting(System.String@)">
            <summary>
            Tries to remove formatting specific to this parser's expected type.
            </summary>
            <param name="text">The text to remove formatting from.</param>
            <returns>
            Whether or not the expected formatting was found and succesfully removed.
            </returns>
        </member>
        <member name="T:System.Data.Services.Parsing.WellKnownTextParser">
            <summary>
            Parser for well-known-text spatial literals seen in a URI.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.WellKnownTextParser.TryParseSpatialLiteral(System.Type,System.String,System.Object@)">
            <summary>
            Tries to parse a spatial literal.
            </summary>
            <param name="literalType">Type of the literal.</param>
            <param name="literalText">The literal text.</param>
            <param name="literalValue">The literal value.</param>
            <returns>true if the parse was successful, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WellKnownTextParser.TryExtractWellKnownTextSqlFromSpatialLiteral(System.String,System.String,System.String@)">
            <summary>
            Tries to extract the WellKnownTextSQL portion from an astoria spatial literal.
            </summary>
            <param name="spatialLiteral">The spatial literal.</param>
            <param name="prefix">The prefix.</param>
            <param name="wellKnownTextSql">The well known text SQL.</param>
            <returns>true if the extract was successful, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.WellKnownTextParser.TryParseSpatialLiteral``1(System.String,System.String,System.Spatial.WellKnownTextSqlFormatter,``0@)">
            <summary>
            Tries to parse a spatial literal.
            </summary>
            <typeparam name="T">The spatial type to parse to</typeparam>
            <param name="literalText">The literal text.</param>
            <param name="prefix">The prefix.</param>
            <param name="formatter">The formatter.</param>
            <param name="literalValue">The literal value.</param>
            <returns>true if the parse was successful, false otherwise</returns>
        </member>
        <member name="T:System.Data.Services.PartiallyWrittenStreamMessage">
            <summary>
            A <see cref="T:Microsoft.Data.OData.IODataResponseMessage"/> implementation that is only used for writing error payloads inside already existing error payloads.
            In this case, want to reuse the existing stream to write the second error, and we want ODL not to write any additional headers or do anything else.
            So, this implementation ignores SetHeader calls and throws on various other calls.
            </summary>
        </member>
        <member name="F:System.Data.Services.PartiallyWrittenStreamMessage.stream">
            <summary>
            Stream to write the error to.
            </summary>
        </member>
        <member name="M:System.Data.Services.PartiallyWrittenStreamMessage.#ctor(System.IO.Stream)">
            <summary>
            Build a new PartiallyWrittenStreamMessage with the given stream.
            </summary>
            <param name="stream">Backing stream of the message.</param>
        </member>
        <member name="M:System.Data.Services.PartiallyWrittenStreamMessage.GetHeader(System.String)">
            <summary>
            Getting arbitrary header values is not supported for this implementation.
            </summary>
            <param name="headerName">The name of the header to get.</param>
            <returns>
            The value of the HTTP header, or null if no such header was present on the message.
            </returns>
        </member>
        <member name="M:System.Data.Services.PartiallyWrittenStreamMessage.SetHeader(System.String,System.String)">
            <summary>
            This implementation ignores calls to SetHeader since headers have already been written in the real response message.
            </summary>
            <param name="headerName">The name of the header to set.</param>
            <param name="headerValue">The value of the HTTP header or 'null' if the header should be removed.</param>
        </member>
        <member name="M:System.Data.Services.PartiallyWrittenStreamMessage.GetStream">
            <summary>
            Gets the stream for writing the error message.
            </summary>
            <returns>
            The stream for this message.
            </returns>
        </member>
        <member name="P:System.Data.Services.PartiallyWrittenStreamMessage.Headers">
            <summary>
            Getting headers from this implementation is not supported.
            </summary>
        </member>
        <member name="P:System.Data.Services.PartiallyWrittenStreamMessage.StatusCode">
            <summary>
            Getting/setting the status code is not supported for this implementation.
            </summary>
        </member>
        <member name="T:System.Data.Services.MessageWriterBuilder">
            <summary>
            Factory for creating and configuring message writers and their settings.
            </summary>
        </member>
        <member name="F:System.Data.Services.MessageWriterBuilder.writerSettings">
            <summary>The current writer settings.</summary>
        </member>
        <member name="F:System.Data.Services.MessageWriterBuilder.model">
            <summary>The current model.</summary>
        </member>
        <member name="F:System.Data.Services.MessageWriterBuilder.responseMessage">
            <summary>The current response message.</summary>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.#ctor(System.Uri,System.Version,System.Data.Services.IDataService,Microsoft.Data.OData.IODataResponseMessage,Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Prevents a default instance of the <see cref="T:System.Data.Services.MessageWriterBuilder"/> class from being created.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="responseVersion">The response version.</param>
            <param name="dataService">The data service.</param>
            <param name="responseMessage">The response message.</param>
            <param name="model">The model to provide to the message writer.</param>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.ForNormalRequest(System.Data.Services.IDataService,System.Data.Services.RequestDescription,Microsoft.Data.OData.IODataResponseMessage,Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Create a new instance of ODataMessageWriterSettings for normal requests.
            </summary>
            <param name="dataService">Data service instance.</param>
            <param name="requestDescription">The current request description.</param>
            <param name="responseMessage">IODataResponseMessage implementation.</param>
            <param name="model">The model to provide to the message writer.</param>
            <returns>An instance of a message writer with the appropriate settings.</returns>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.ForBatch(System.Data.Services.IDataService)">
            <summary>
            Create a new instance of ODataMessageWriterSettings for batch requests.
            </summary>
            <param name="dataService">Data service instance.</param>
            <returns>An instance of a message writer with the appropriate settings.</returns>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.ForError(System.Uri,System.Data.Services.IDataService,System.Version,Microsoft.Data.OData.IODataResponseMessage,System.String,System.String)">
            <summary>
            Create a new instance of ODataMessageWriterSettings for errors.
            </summary>
            <param name="serviceUri">Service base uri.</param>
            <param name="dataService">Data service instance.</param>
            <param name="responseVersion">Version of the response payload.</param>
            <param name="responseMessage">IODataResponseMessage implementation.</param>
            <param name="acceptHeaderValue">Accept header value.</param>
            <param name="acceptCharSetHeaderValue">Accept charset header value.</param>
            <returns>An instance of a message writer with the appropriate settings.</returns>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.ApplyCommonSettings(Microsoft.Data.OData.ODataMessageWriterSettings,System.Uri,System.Version,System.Data.Services.IDataService,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>
            Applies common settings from the parameters to the given writer settings.
            </summary>
            <param name="writerSettings">The writer settings to modify.</param>
            <param name="serviceUri">The service URI.</param>
            <param name="responseVersion">The response version.</param>
            <param name="dataService">The data service.</param>
            <param name="responseMessage">The response message.</param>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.CreateMessageWriterSettings">
            <summary>
            Creates a new message writer settings instance.
            </summary>
            <returns>A new settings instance.</returns>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.CreateWriter">
            <summary>
            Creates a new message writer from the current settings, message, and model.
            </summary>
            <returns>A new message writer.</returns>
        </member>
        <member name="M:System.Data.Services.MessageWriterBuilder.SetMessageForErrorInError">
            <summary>
            Erases the current response message, replacing it with a new response messaage specifically
            for handling errors that occur while writing errors. The stream is the same as the original
            message, but everything else is ignored.
            </summary>
        </member>
        <member name="P:System.Data.Services.MessageWriterBuilder.WriterSettings">
            <summary>
            Gets the writer settings.
            </summary>
        </member>
        <member name="P:System.Data.Services.MessageWriterBuilder.Model">
            <summary>
            Gets the model.
            </summary>
        </member>
        <member name="T:System.Data.Services.ODataFormatWithParameters">
            <summary>
            Extends <see cref="T:Microsoft.Data.OData.ODataFormat"/> to also carry a set of media type parameters.
            </summary>
        </member>
        <member name="F:System.Data.Services.ODataFormatWithParameters.rawMediaType">
            <summary>The raw media type represented by this instance.</summary>
        </member>
        <member name="F:System.Data.Services.ODataFormatWithParameters.mediaTypeParameters">
            <summary>The parameters of the raw media type once it has been parsed.</summary>
        </member>
        <member name="M:System.Data.Services.ODataFormatWithParameters.#ctor(Microsoft.Data.OData.ODataFormat,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.ODataFormatWithParameters"/> class.
            </summary>
            <param name="format">The format to extend.</param>
            <param name="rawMediaType">The raw media type represented by this instance.</param>
        </member>
        <member name="M:System.Data.Services.ODataFormatWithParameters.#ctor(Microsoft.Data.OData.ODataFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.ODataFormatWithParameters"/> class.
            </summary>
            <param name="format">The format to extend.</param>
        </member>
        <member name="M:System.Data.Services.ODataFormatWithParameters.GetParameterValue(System.String)">
            <summary>
            Gets the value for the parameter of the specified name, or null if it is not found.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The value of the parameter or null.</returns>
        </member>
        <member name="M:System.Data.Services.ODataFormatWithParameters.ParameterNameMatches(System.Data.Services.ContentTypeUtil.MediaParameter,System.String)">
            <summary>
            Returns whether the parameter name matches using case-insensitive comparison.
            </summary>
            <param name="mediaParameter">The media parameter.</param>
            <param name="parameterName">Name to compare to.</param>
            <returns>Whether the name matches.</returns>
        </member>
        <member name="M:System.Data.Services.ODataFormatWithParameters.PopulateMediaTypeParameters">
            <summary>
            Ensures that the media type has been parsed and that the parameters list has been populated.
            This is done lazily to avoid parsing them if GetParameterValue is never called.
            </summary>
        </member>
        <member name="P:System.Data.Services.ODataFormatWithParameters.Format">
            <summary>
            Gets the format this instance is extending.
            </summary>
        </member>
        <member name="P:System.Data.Services.ODataFormatWithParameters.IsAtom">
            <summary>
            Gets a value indicating whether this instance is the Atom format.
            </summary>
        </member>
        <member name="P:System.Data.Services.ODataFormatWithParameters.IsJsonLight">
            <summary>
            Gets a value indicating whether this instance is the JsonLight format.
            </summary>
        </member>
        <member name="T:System.Data.Services.ODataMessageExtensionMethods">
            <summary>
            Extension methods classes in WCF Data Services Server.
            </summary>
        </member>
        <member name="M:System.Data.Services.ODataMessageExtensionMethods.SetStream(Microsoft.Data.OData.IODataResponseMessage,System.IO.Stream)">
            <summary>
            Set the response stream. 
            </summary>
            <param name ="message">The message that we are setting the stream for.</param>
            <param name="stream">Stream to which the response needs to be written.</param>
        </member>
        <member name="M:System.Data.Services.ODataMessageExtensionMethods.GetRequestIfMatchHeader(Microsoft.Data.OData.IODataRequestMessage)">
            <summary>
            Gets the Request-If-Match header from the request.
            </summary>
            <param name="message">Message to get header from.</param>
            <returns>Value of the request if match header.</returns>
        </member>
        <member name="M:System.Data.Services.ODataMessageExtensionMethods.GetRequestIfNoneMatchHeader(Microsoft.Data.OData.IODataRequestMessage)">
            <summary>
            Gets the Request-If-None-Match header from the request.
            </summary>
            <param name="message">Message to get header from.</param>
            <returns>Value of the request if none match header.</returns>
        </member>
        <member name="M:System.Data.Services.ODataMessageExtensionMethods.GetRequestAcceptCharsetHeader(Microsoft.Data.OData.IODataRequestMessage)">
            <summary>
            Gets the Request Accept Charset header from the request.
            </summary>
            <param name="message">Message to get header from.</param>
            <returns>Value of the Request Accept Charset header.</returns>
        </member>
        <member name="T:System.Data.Services.HttpVerbs">
            <summary>
            Enum to represent various http methods
            </summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.None">
            <summary>Not Initialized.</summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.GET">
            <summary>Represents the GET http method.</summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.PUT">
            <summary>Represents the PUT http method.</summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.POST">
            <summary>Represents the POST http method.</summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.DELETE">
            <summary>Represents the DELETE http method.</summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.MERGE">
            <summary>Represents the MERGE http method.</summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbs.PATCH">
            <summary>Represents the PATCH http method.</summary>
        </member>
        <member name="T:System.Data.Services.HttpVerbUtils">
            <summary>
            Utility functions for reasoning about HttpVerbs.
            </summary>
        </member>
        <member name="F:System.Data.Services.HttpVerbUtils.KnownVerbs">
            <summary>
            List of the HTTP Verbs we use for convenience.
            </summary>
        </member>
        <member name="M:System.Data.Services.HttpVerbUtils.IsChange(System.Data.Services.HttpVerbs)">
            <summary>
            Returns true if the given verb could cause a creation, update, or deletion.
            </summary>
            <param name="verb">Http verb to check.</param>
            <returns>True if the given verb could cause a creation, update, or deletion.</returns>
        </member>
        <member name="M:System.Data.Services.HttpVerbUtils.IsQuery(System.Data.Services.HttpVerbs)">
            <summary>
            Returns true if the given verb is querying data (only gets information).
            </summary>
            <param name="verb">Http Verb to check.</param>
            <returns>True if the given verb is querying data.</returns>
        </member>
        <member name="M:System.Data.Services.HttpVerbUtils.IsUpdate(System.Data.Services.HttpVerbs)">
            <summary>
            Returns true if the given verb could cause an update.
            </summary>
            <param name="verb">Http verb to check.</param>
            <returns>True if the given verb could cause an update.</returns>
        </member>
        <member name="M:System.Data.Services.HttpVerbUtils.IsInsert(System.Data.Services.HttpVerbs)">
            <summary>
            Returns true if the given verb could cause a creation.
            </summary>
            <param name="verb">Http verb to check.</param>
            <returns>True if the given verb could cause a creation.</returns>
        </member>
        <member name="M:System.Data.Services.HttpVerbUtils.IsDelete(System.Data.Services.HttpVerbs)">
            <summary>
            Returns true if the given verb could cause a deletion.
            </summary>
            <param name="verb">Http verb to check.</param>
            <returns>True if the given verb could cause a deletion.</returns>
        </member>
        <member name="T:System.Data.Services.LiteralFormatter">
            <summary>
            Component for formatting literals for use in URIs, ETags, and skip-tokens.
            </summary>
        </member>
        <member name="F:System.Data.Services.LiteralFormatter.HexValues">
            <summary>Constant table of nibble-to-hex convertion values.</summary>
        </member>
        <member name="F:System.Data.Services.LiteralFormatter.DefaultInstance">
            <summary>Default singleton instance for parenthetical keys, etags, or skiptokens.</summary>
        </member>
        <member name="F:System.Data.Services.LiteralFormatter.KeyAsSegmentInstance">
            <summary>Default singleton instance for keys formatted as segments.</summary>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.ForKeys(System.Boolean)">
            <summary>
            Gets the literal formatter for keys.
            </summary>
            <param name="keysAsSegment">if set to <c>true</c> then the key is going to be written as a segment, rather than in parentheses.</param>
            <returns>The literal formatter for keys.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.Format(System.Object)">
            <summary>Converts the specified value to an encoded, serializable string for URI key.</summary>
            <param name="value">Non-null value to convert.</param>
            <returns>value converted to a serializable string for URI key.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.EscapeResultForUri(System.String)">
            <summary>
            Escapes the result accoridng to URI escaping rules.
            </summary>
            <param name="result">The result to escape.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.ConvertByteArrayToKeyString(System.Byte[])">
            <summary>Converts the given byte[] into string.</summary>
            <param name="byteArray">byte[] that needs to be converted.</param>
            <returns>String containing hex values representing the byte[].</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.FormatRawLiteral(System.Object)">
            <summary>
            Formats the literal without a type prefix, quotes, or escaping.
            </summary>
            <param name="value">The non-null value to format.</param>
            <returns>The formatted literal, without type marker or quotes.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.FormatAndEscapeLiteral(System.Object)">
            <summary>
            Formats the literal without a type prefix or quotes, but does escape it.
            </summary>
            <param name="value">The non-null value to format.</param>
            <returns>The formatted literal, without type marker or quotes.</returns>
        </member>
        <member name="P:System.Data.Services.LiteralFormatter.ForETag">
            <summary>
            Gets the literal formatter for ETags.
            </summary>
        </member>
        <member name="P:System.Data.Services.LiteralFormatter.ForSkipToken">
            <summary>
            Gets the literal formatter for skip-tokens.
            </summary>
        </member>
        <member name="T:System.Data.Services.LiteralFormatter.SharedUtils">
            <summary>
            Helper utilities that capture any deltas between ODL, the WCF DS Client, and the WCF DS Server.
            </summary>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.SharedUtils.CreateExceptionForUnconvertableType(System.Object)">
            <summary>
            Creates a new exception instance to be thrown if the value is not a type that can be formatted as a literal.
            DEVNOTE: Will return a different exception depending on whether this is ODataLib, the WCF DS Server, or the WCF DS client.
            </summary>
            <param name="value">The literal value that could not be converted.</param>
            <returns>The exception that should be thrown.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.SharedUtils.TryConvertToStandardType(System.Object,System.Object@)">
            <summary>
            Tries to convert the given value to one of the standard recognized types. Used specifically for handling XML and binary types.
            </summary>
            <param name="value">The original value.</param>
            <param name="converted">The value converted to one of the standard types.</param>
            <returns>Whether or not the value was converted.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.SharedUtils.AppendDecimalMarkerToDouble(System.String)">
            <summary>
            Appends the decimal marker to string form of double value if necessary.
            DEVNOTE: Only used by the client and ODL, for legacy/back-compat reasons.
            </summary>
            <param name="input">Input string.</param>
            <returns>String with decimal marker optionally added.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.SharedUtils.ShouldAppendLiteralSuffixToDouble(System.Double)">
            <summary>
            Returns whether a 'd' literal suffix to a double value based on its value.
            DEVNOTE: The WCF DS client never added the 'd', but WCF DS Server and ODL do.
            </summary>
            <param name="value">The value itself.</param>
            <returns>Whether or not to append the 'd' suffix.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.SharedUtils.TryGetByteArrayFromBinary(System.Object,System.Byte[]@)">
            <summary>
            Tries to convert an instance of System.Data.Linq.Binary to a byte array.
            </summary>
            <param name="value">The original value which might be an instance of System.Data.Linq.Binary.</param>
            <param name="array">The converted byte array, if it was converted.</param>
            <returns>Whether or not the value was converted.</returns>
        </member>
        <member name="T:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter">
            <summary>
            Default literal formatter implementation.
            </summary>
        </member>
        <member name="F:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter.disableUrlEncoding">
            <summary>If true, literals will not be URL encoded.</summary>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter"/>.
            </summary>
            <param name="disableUrlEncoding">If true, literals will not be URL encoded.</param>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter.Format(System.Object)">
            <summary>Converts the specified value to an encoded, serializable string for URI key.</summary>
            <param name="value">Non-null value to convert.</param>
            <returns>value converted to a serializable string for URI key.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter.EscapeResultForUri(System.String)">
            <summary>
            Escapes the result accoridng to URI escaping rules.
            </summary>
            <param name="result">The result to escape.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.DefaultLiteralFormatter.FormatLiteralWithTypePrefix(System.Object)">
            <summary>
            Formats the literal with a type prefix and quotes (if the type requires it).
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted literal, with type marker if needed.</returns>
        </member>
        <member name="T:System.Data.Services.LiteralFormatter.KeysAsSegmentsLiteralFormatter">
            <summary>
            Literal formatter for keys which are written as URI segments. 
            Very similar to the default, but it never puts the type markers or single quotes around the value.
            </summary>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.KeysAsSegmentsLiteralFormatter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.LiteralFormatter.KeysAsSegmentsLiteralFormatter"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.KeysAsSegmentsLiteralFormatter.Format(System.Object)">
            <summary>Converts the specified value to an encoded, serializable string for URI key.</summary>
            <param name="value">Non-null value to convert.</param>
            <returns>value converted to a serializable string for URI key.</returns>
        </member>
        <member name="M:System.Data.Services.LiteralFormatter.KeysAsSegmentsLiteralFormatter.EscapeLeadingDollarSign(System.String)">
            <summary>
            If the string starts with a '$', prepends another '$' to escape it.
            </summary>
            <param name="stringValue">The string value.</param>
            <returns>The string value with a leading '$' escaped, if one was present.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.UnicodeCategoryEqualityComparer">
            <summary>This class implements IEqualityComparer for UnicodeCategory</summary>
            <remarks>
            Using this class rather than EqualityComparer&lt;T&gt;.Default 
            saves from JIT'ing it in each AppDomain.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.UnicodeCategoryEqualityComparer.Equals(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory)">
            <summary>
            Checks whether two unicode categories are equal
            </summary>
            <param name="x">first unicode category</param>
            <param name="y">second unicode category</param>
            <returns>true if they are equal, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.UnicodeCategoryEqualityComparer.GetHashCode(System.Globalization.UnicodeCategory)">
            <summary>
            Gets a hash code for the specified unicode category
            </summary>
            <param name="obj">the input value</param>
            <returns>The hash code for the given input unicode category, the underlying int</returns>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmEntitySet">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmEntitySet"/> implementation backed by an IDSMP metadata provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntitySet.model">
            <summary>The edm model to which this instance belongs to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntitySet.entityContainer">
            <summary>EntityContainer instance that this set belongs to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntitySet.resourceSet">
            <summary>The resource set underlying this entity set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntitySet.navigationTargetMapping">
            <summary>Mapping of navigation property to entity set.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntitySet.#ctor(System.Data.Services.Providers.MetadataProviderEdmModel,System.Data.Services.Providers.MetadataProviderEdmEntityContainer,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Constructor.
            </summary>
            <param name="model">The edm model this instance belongs to.</param>
            <param name="entityContainer">Entity container instance that this set belongs to.</param>
            <param name="resourceSet">ResourceSet that this entity set represents.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntitySet.FindNavigationTarget(Microsoft.Data.Edm.IEdmNavigationProperty)">
            <summary>
            Finds the entity set that this navigation property refers to.
            </summary>
            <param name="navigationProperty">Instance of navigation property.</param>
            <returns>an instance of IEdmEntitySet that this navigation property refers to.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntitySet.EnsureNavigationTarget(Microsoft.Data.Edm.IEdmNavigationProperty,System.Data.Services.Providers.MetadataProviderEdmEntitySet)">
            <summary>
            Cache the entity set that the given navigation property refers to.
            </summary>
            <param name="navigationProperty">IEdmNavigationProperty that contains the navigation property metadata.</param>
            <param name="entitySet">Entityset that <paramref name="navigationProperty"/> refers to.</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntitySet.ResourceSet">
            <summary>
            The resource-set wrapper that this entity-set was created from.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntitySet.ElementType">
            <summary>
            The element type of this entity set.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntitySet.ContainerElementKind">
            <summary>
            The entity container kind of the entity set; returns EdmContainerElementKind.EntitySet.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntitySet.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntitySet.NavigationTargets">
            <summary>
            Gets the list of navigation targets for this set.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntitySet.Container">
            <summary>
            EntityContainer instance that this set belongs to.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty">
            <summary>
            Represents a navigation property synthesized for an association end that does not have a corresponding navigation property.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.partner">
            <summary>The destination end of this navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.type">
            <summary>The type of the navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.deleteAction">
            <summary>The on-delete action of the navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.name">
            <summary>The name of this navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.dependentProperties">
            <summary>The dependent properties of the referential constraint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty,Microsoft.Data.Edm.EdmOnDeleteAction,Microsoft.Data.Edm.EdmMultiplicity,System.String)">
            <summary>
            Creates a new Silent partner for a navigation property
            </summary>
            <param name="partnerProperty">The navigation property this is a silent partner of.</param>
            <param name="propertyDeleteAction">The on delete action for this side of the association</param>
            <param name="multiplicity">The multiplicity of this side of the association.</param>
            <param name="name">The name of this navigation property.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.SetDependentProperties(System.Collections.Generic.IList{Microsoft.Data.Edm.IEdmStructuralProperty})">
            <summary>
            Dependent properties of this navigation property.
            </summary>
            <param name="properties">The dependent properties</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.Partner">
            <summary>
            Gets the destination end of this navigation property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.OnDelete">
            <summary>
            Gets the action to execute on the deletion of this end of a bidirectional association.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.IsPrincipal">
            <summary>
            Gets whether this navigation property originates at the principal end of an association.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.ContainsTarget">
            <summary>
            Gets a value indicating whether the navigation target is contained inside the navigation source.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.DependentProperties">
            <summary>
            Gets the dependent properties of this navigation property, returning null if this is the principal end or if there is no referential constraint.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.Type">
            <summary>
            Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.DeclaringType">
            <summary>
            Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmSilentNavigationProperty.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.OperationParameterBindingKind">
            <summary> Enumeration for classifying the different kinds of operation parameter binding. </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameterBindingKind.Never">
            <summary>
            Used when the first parameter of a service action is not a binding parameter.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameterBindingKind.Sometimes">
            <summary>
            Used when the first parameter of a service action is a binding parameter and some or all instances of the binding parameter type 
            may be bound to the service action.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameterBindingKind.Always">
            <summary>
            Used when the first parameter of a service action is a binding parameter and all instances of the binding parameter type 
            must be bound to the service action.
            </summary>
            <remarks>When this value is set, the <see cref="M:System.Data.Services.Providers.IDataServiceActionProvider.AdvertiseServiceAction(System.Data.Services.DataServiceOperationContext,System.Data.Services.Providers.ServiceAction,System.Object,System.Boolean,Microsoft.Data.OData.ODataAction@)"/> method will not be called for the service action."/&gt; </remarks>
        </member>
        <member name="T:System.Data.Services.QueryResultInfo">
            <summary>
            Keeps all the information about the query results.
            </summary>
        </member>
        <member name="F:System.Data.Services.QueryResultInfo.results">
            <summary>
            Actuals results from the provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.QueryResultInfo.originalQueryResults">
            <summary>
            Query that needs to be disposed.
            </summary>
        </member>
        <member name="F:System.Data.Services.QueryResultInfo.enumerator">
            <summary>
            Enumerator instance that we got from the results.
            </summary>
        </member>
        <member name="F:System.Data.Services.QueryResultInfo.hasMoved">
            <summary>
            Keeps track whether the enumerator has been successfully advanced to the first element.
            </summary>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates a new instance of QueryResultInfo.
            </summary>
            <param name="queryResults">Query results that we need to enumerate and serialize.</param>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.#ctor(System.Collections.IEnumerable,System.Data.Services.QueryResultInfo)">
            <summary>
            Creates a new instance of QueryResultInfo.
            For performance reasons we reuse results from existing query to read a projected value. We create an enumerator
            containing the projected value but must not dispose the original query until later. This wrapper allows us to 
            pass the created enumerator and dispose the query at the right time. 
            </summary>
            <param name="queryResults">Query results that we need to enumerate and serialize.</param>
            <param name="originalResults">Actual query that we need to dispose.</param>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.MoveNext">
            <summary>
            Read the next element from the results.
            </summary>
            <returns>true if there is a next element, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.Dispose">
            <summary>
            Dispose the enumerator and the innerQueryResults, if specified.
            The outer enumerable must be disposed by the ResponseBodyWriter.
            </summary>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.AsIExpandedResult">
            <summary>
            Checks the results enumerator for IExpandedResult.
            </summary>
            <returns>an instance of IExpandedResult.</returns>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.GetContinuationTokenFromPagingProvider(System.Data.Services.Providers.DataServicePagingProviderWrapper)">
            <summary>
            Get the continuation token from the paging provider.
            </summary>
            <param name="pagingProvider">Instance of DataServicePagingProviderWrapper instance.</param>
            <returns>list of the continuation tokens as provided by the wrapper.</returns>
        </member>
        <member name="M:System.Data.Services.QueryResultInfo.GetDataServiceODataWriterFeedArgs(Microsoft.Data.OData.ODataFeed,System.Data.Services.DataServiceOperationContext)">
            <summary>
            Forms an instance of DataServiceODataWriterFeedArgs that contains results.
            </summary>
            <param name="feed">ODataFeed instance.</param>
            <param name="operationContext">DataServicesOperationContext instance.</param>
            <returns>DataServiceODataWriterFeedArgs instance</returns>
        </member>
        <member name="P:System.Data.Services.QueryResultInfo.Current">
            <summary>
            Current instance from the result.
            </summary>
        </member>
        <member name="P:System.Data.Services.QueryResultInfo.HasMoved">
            <summary>
            Returns true if the results has been moved forward.
            </summary>
        </member>
        <member name="T:System.Data.Services.ResponseContentTypeNegotiator">
            <summary>
            Standalone component for doing content-type negotiation which wraps ODataLib's APIs
            </summary>
        </member>
        <member name="F:System.Data.Services.ResponseContentTypeNegotiator.responseVersion">
            <summary>
            The response version.
            </summary>
        </member>
        <member name="F:System.Data.Services.ResponseContentTypeNegotiator.throwIfNoMatch">
            <summary>
            Whether or not to throw if no match is found.
            </summary>
        </member>
        <member name="M:System.Data.Services.ResponseContentTypeNegotiator.#ctor(Microsoft.Data.OData.ODataVersion,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.ResponseContentTypeNegotiator"/> class.
            </summary>
            <param name="responseVersion">The version of the response.</param>
            <param name="throwIfNoMatch">if set to <c>true</c> then the method should throw an exception if no match is found. Otherwise null should be returned in this case.</param>
        </member>
        <member name="M:System.Data.Services.ResponseContentTypeNegotiator.DetermineResponseFormat(Microsoft.Data.OData.ODataPayloadKind,System.String,System.String)">
            <summary>
            Determines the response format based on the results of content negotiation.
            </summary>
            <param name="payloadKind">The payload kind of the response.</param>
            <param name="acceptableMediaTypes">
            The acceptable media types used to determine the content type of the message.
            This is a comma separated list of content types as specified in RFC 2616, Section 14.1
            </param>
            <param name="acceptableCharSets">
            The acceptable charsets to use to the determine the encoding of the message.
            This is a comma separated list of charsets as specified in RFC 2616, Section 14.2
            </param>
            <returns>The format the response should use. </returns>
        </member>
        <member name="T:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage">
            <summary>
            A <see cref="T:Microsoft.Data.OData.IODataResponseMessage"/> implementation that is only used for content-negotation and doesn't support anything other than SetHeader for 'Content-Type'.
            </summary>
        </member>
        <member name="M:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage.GetHeader(System.String)">
            <summary>
            Getting arbitrary header values is not supported for this implementation.
            </summary>
            <param name="headerName">The name of the header to get.</param>
            <returns>
            The value of the HTTP header, or null if no such header was present on the message.
            </returns>
        </member>
        <member name="M:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage.SetHeader(System.String,System.String)">
            <summary>
            Sets the value of an HTTP header. Only certain headers are allowed to be set in this implementation.
            </summary>
            <param name="headerName">The name of the header to set.</param>
            <param name="headerValue">The value of the HTTP header or 'null' if the header should be removed.</param>
        </member>
        <member name="M:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage.GetStream">
            <summary>
            Getting the stream is not supported for this implementation.
            </summary>
            <returns>
            The stream for this message.
            </returns>
        </member>
        <member name="P:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage.Headers">
            <summary>
            Getting headers from this implementation is not supported.
            </summary>
        </member>
        <member name="P:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage.StatusCode">
            <summary>
            Getting/setting the status code is not supported for this implementation.
            </summary>
        </member>
        <member name="P:System.Data.Services.ResponseContentTypeNegotiator.ContentNegotiationResponseMessage.ContentType">
            <summary>
            Gets the content type which was set via SetHeader, if any.
            </summary>
        </member>
        <member name="T:System.Data.Services.ExpandAndSelectParseResult">
            <summary>
            Component for performing simple syntactic parsing of the $expand and $select query options.
            </summary>
        </member>
        <member name="M:System.Data.Services.ExpandAndSelectParseResult.#ctor(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.ExpandAndSelectParseResult"/> class.
            </summary>
            <param name="requestDescription">The request description.</param>
            <param name="dataService">The data service.</param>
        </member>
        <member name="M:System.Data.Services.ExpandAndSelectParseResult.ValidateSelectIsAllowedForRequest(System.Data.Services.RequestDescription)">
            <summary>
            Throws exceptions if the $select query option cannot be specified on this request.
            </summary>
            <param name="requestDescription">The request description.</param>
        </member>
        <member name="M:System.Data.Services.ExpandAndSelectParseResult.HasSelectedItemAtAnyLevel(Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause)">
            <summary>
            Determines whether there are any selected items at any level of the tree. Essentially determines whether $select was specified in the request.
            </summary>
            <param name="clause">The expand/select clause to check for selected items.</param>
            <returns>Whether the clause had a select item at any level that was not an expansion.</returns>
        </member>
        <member name="P:System.Data.Services.ExpandAndSelectParseResult.Clause">
            <summary>
            The actual select/expand clause.
            </summary>
        </member>
        <member name="P:System.Data.Services.ExpandAndSelectParseResult.HasExpand">
            <summary>
            Whether there was a $expand in the request.
            </summary>
        </member>
        <member name="P:System.Data.Services.ExpandAndSelectParseResult.HasSelect">
            <summary>
            Whether there was a $select in the request.
            </summary>
        </member>
        <member name="P:System.Data.Services.ExpandAndSelectParseResult.RawSelectQueryOptionValue">
            <summary>
            Gets the raw query option value of $select.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityToSerialize">
            <summary>
            Contains the current entity being serialized, its type, its edit-link, and its identity.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityToSerialize.entity">
            <summary>Backing storage field for the entity.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityToSerialize.resourceType">
            <summary>Backing storage field for the entity's type.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityToSerialize.serializedEntityKey">
            <summary>Backing storage field for entity's key (equivalent to the identity, but without the service root).</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityToSerialize.#ctor(System.Object,System.Data.Services.Providers.ResourceType,System.Data.Services.Serializers.SerializedEntityKey)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/> class.
            </summary>
            <param name="entity">The entity itself.</param>
            <param name="resourceType">The type of the entity.</param>
            <param name="serializedKey">The serialized entity key for the instance.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityToSerialize.Create(System.Object,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.DataServiceProviderWrapper,System.Uri)">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/>.
            </summary>
            <param name="entity">The entity itself.</param>
            <param name="resourceType">The type of the entity.</param>
            <param name="resourceSetWrapper">The resource set the entity belongs to.</param>
            <param name="provider">The wrapper for the current service provider.</param>
            <param name="absoluteServiceUri">The absolute service URI.</param>
            <returns>The new instance of <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/></returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityToSerialize.Create(System.Object,System.Data.Services.Providers.ResourceType,System.String,System.Boolean,System.Func{System.Data.Services.Providers.ResourceProperty,System.Object},System.Data.Services.Serializers.KeySerializer,System.Uri)">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/>.
            </summary>
            <param name="entity">The entity itself.</param>
            <param name="resourceType">The type of the entity.</param>
            <param name="resourceSetName">Name of the resource set the entity belongs to.</param>
            <param name="includeTypeSegment">if set to <c>true</c> then the type segment should be included in the edit link.</param>
            <param name="getPropertyValue">The callback to get each property value.</param>
            <param name="keySerializer">The key serializer to use.</param>
            <param name="absoluteServiceUri">The absolute service URI.</param>
            <returns>The new instance of <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityToSerialize.CreateFromExplicitValues(System.Object,System.Data.Services.Providers.ResourceType,System.Data.Services.Serializers.SerializedEntityKey)">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/>. Should only be used from other Create methods or from unit tests.
            </summary>
            <param name="entity">The entity itself.</param>
            <param name="resourceType">The type of the entity.</param>
            <param name="serializedKey">The serialized key of the entity.</param>
            <returns>The new instance of <see cref="T:System.Data.Services.Serializers.EntityToSerialize"/>.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityToSerialize.Entity">
            <summary>
            Gets the entity itself.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityToSerialize.SerializedKey">
            <summary>
            The serialized key of the entity, which contains its edit-link, identity, etc.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityToSerialize.ResourceType">
            <summary>
            Gets the <see cref="P:System.Data.Services.Serializers.EntityToSerialize.ResourceType"/> of the entity.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.KeySerializer">
            <summary>
            Component for serializing entity key values for building identities, edit links, etc.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.KeySerializer.DefaultInstance">
            <summary>Singleton instance of the default serializer.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.KeySerializer.SegmentInstance">
            <summary>Singleton instance of the segment-based serializer.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.Create(System.Data.Services.UrlConvention)">
            <summary>
            Creates a new key serializer.
            </summary>
            <param name="urlConvention">The url convention to use.</param>
            <returns>
            A new key serializer.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.AppendKeyExpression``1(System.Text.StringBuilder,System.Collections.Generic.ICollection{``0},System.Func{``0,System.String},System.Func{``0,System.Object})">
            <summary>
            Appends the key expression for an entity to the given <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <typeparam name="TProperty">The type used to represent properties.</typeparam>
            <param name="builder">The builder to append onto.</param>
            <param name="keyProperties">The key properties.</param>
            <param name="getPropertyName">The callback to get each property's name.</param>
            <param name="getPropertyValue">The callback to get each property's value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.GetKeyValueAsString``1(System.Func{``0,System.Object},``0,System.Data.Services.LiteralFormatter)">
            <summary>
            Gets the value of the key property and serializes it to a string.
            </summary>
            <typeparam name="TProperty">The type used to represent properties.</typeparam>
            <param name="getPropertyValue">The callback to get the value for a property.</param>
            <param name="property">The key property.</param>
            <param name="literalFormatter">The literal formatter to use.</param>
            <returns>The serialized key property value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.AppendKeyWithParentheses``1(System.Text.StringBuilder,System.Collections.Generic.ICollection{``0},System.Func{``0,System.String},System.Func{``0,System.Object})">
            <summary>
            Appends the key using the parentheses-based syntax (e.g. Customers(1)) onto the given <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="builder">The builder to append onto.</param>
            <typeparam name="TProperty">The type used to represent properties.</typeparam>
            <param name="keyProperties">The key properties.</param>
            <param name="getPropertyName">The callback to get each property's name.</param>
            <param name="getPropertyValue">The callback to get each property's value.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.KeySerializer.DefaultKeySerializer">
            <summary>
            Default implementation of the key serializer which uses parentheses (e.g. Customers(1)).
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.DefaultKeySerializer.AppendKeyExpression``1(System.Text.StringBuilder,System.Collections.Generic.ICollection{``0},System.Func{``0,System.String},System.Func{``0,System.Object})">
            <summary>
            Appends the key expression for an entity to the given <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <param name="builder">The builder to append onto.</param>
            <typeparam name="TProperty">The type used to represent properties.</typeparam>
            <param name="keyProperties">The key properties.</param>
            <param name="getPropertyName">The callback to get each property's name.</param>
            <param name="getPropertyValue">The callback to get each property's value.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.KeySerializer.SegmentKeySerializer">
            <summary>
            Implementation of the key serializer which uses segments (e.g. Customers/1).
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.SegmentKeySerializer.#ctor">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Serializers.KeySerializer.SegmentKeySerializer"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.SegmentKeySerializer.AppendKeyExpression``1(System.Text.StringBuilder,System.Collections.Generic.ICollection{``0},System.Func{``0,System.String},System.Func{``0,System.Object})">
            <summary>
            Appends the key expression for an entity to the given <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <param name="builder">The builder to append onto.</param>
            <typeparam name="TProperty">The type used to represent properties.</typeparam>
            <param name="keyProperties">The key properties.</param>
            <param name="getPropertyName">The callback to get each property's name.</param>
            <param name="getPropertyValue">The callback to get each property's value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.KeySerializer.SegmentKeySerializer.AppendKeyWithSegments``1(System.Text.StringBuilder,System.Collections.Generic.ICollection{``0},System.Func{``0,System.Object})">
            <summary>
            Appends the key for the current resource using segment-based syntax (e.g. Customers/1) onto the given <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="builder">The builder to append onto.</param>
            <typeparam name="TProperty">The type used to represent properties.</typeparam>
            <param name="keyProperties">The key properties.</param>
            <param name="getPropertyValue">The callback to get each property's value.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.LazySerializedEntityKey">
            <summary>
            Representation of the identity and edit-link of an entity that lazily builds them on demand.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.SerializedEntityKey">
            <summary>
            Data structure for representing the identity and edit-link of an entity being serialized.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.SerializedEntityKey.RelativeEditLink">
            <summary>
            Gets the edit link of the entity relative to the service base.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.SerializedEntityKey.Identity">
            <summary>
            Gets the identity of the entity.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.SerializedEntityKey.AbsoluteEditLink">
            <summary>
            Gets the absolute edit link of the entity.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.SerializedEntityKey.AbsoluteEditLinkWithoutSuffix">
            <summary>
            Gets the absolute edit link of the entity without a type segment or other suffix.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.LazySerializedEntityKey.lazyAbsoluteEditLinkWithoutSuffix">
            <summary>Lazy storage for the edit link as an absolute URI without any type segments.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.LazySerializedEntityKey.lazyAbsoluteEditLink">
            <summary>Lazy storage for the edit link as an absolute URI.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.LazySerializedEntityKey.lazyRelativeEditLink">
            <summary>Lazy storage for the edit link as a relative URI.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.LazySerializedEntityKey.lazyIdentity">
            <summary>Lazy storage for the identity.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.LazySerializedEntityKey.#ctor(System.Data.Services.SimpleLazy{System.String},System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Serializers.LazySerializedEntityKey"/> class which uses the same syntax for identity and edit link.
            </summary>
            <param name="lazyRelativeIdentity">The identity as a lazy string relative to the service URI.</param>
            <param name="absoluteServiceUri">The absolute service URI.</param>
            <param name="editLinkSuffix">The optional suffix to append to the edit link. Null means nothing will be appended.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.LazySerializedEntityKey.Create(System.Data.Services.Serializers.KeySerializer,System.Uri,System.String,System.Collections.Generic.ICollection{System.Data.Services.Providers.ResourceProperty},System.Func{System.Data.Services.Providers.ResourceProperty,System.Object},System.String)">
            <summary>
            Creates an instance of <see cref="T:System.Data.Services.Serializers.SerializedEntityKey"/> for the given properties and values.
            </summary>
            <param name="keySerializer">The key serializer to use.</param>
            <param name="absoluteServiceUri">The absolute service URI.</param>
            <param name="entitySetName">Name of the entity set.</param>
            <param name="keyProperties">The key properties.</param>
            <param name="getPropertyValue">The callback to get each property's value.</param>
            <param name="editLinkSuffix">The suffix to append to the edit-link, or null.</param>
            <returns>A serialized-key instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.LazySerializedEntityKey.AppendLazilyIfNeeded(System.Data.Services.SimpleLazy{System.Uri},System.String)">
            <summary>
            Wraps a lazy URI with another that will have the given string appended if it is not null.
            </summary>
            <param name="lazyUri">The lazy URI to wrap.</param>
            <param name="suffix">The suffix for the URI.</param>
            <returns>A new lazy URI which will have the suffix, or the same instance if the suffix was null.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.LazySerializedEntityKey.RelativeEditLink">
            <summary>
            Gets the edit link of the entity relative to the service base.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.LazySerializedEntityKey.Identity">
            <summary>
            Gets the identity of the entity.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.LazySerializedEntityKey.AbsoluteEditLink">
            <summary>
            Gets the absolute edit link of the entity.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.LazySerializedEntityKey.AbsoluteEditLinkWithoutSuffix">
            <summary>
            Gets the absolute edit link of the entity without a type segment or other suffix.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter">
            <summary>
            Component for interpreting the media type parameter for controlling how much payload metadata is written on the wire.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.MediaTypeParameterName">
            <summary>
            The name of the media type parameter to use.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.metadataParameterValue">
            <summary>
            The interpreted representation of the parameter.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.metadataParameterValueForTypeNames">
            <summary>
            The interpreted representation of the parameter, to used for controlling the type name serialization.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.isJsonLight">
            <summary>
            true if the odata format is JSON Light, false otherwise.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.#ctor(Microsoft.Data.OData.ODataFormat,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter"/> class.
            NOTE: This constructor is for unit-testing only.
            </summary>
            <param name="format">The response format.</param>
            <param name="rawParameterValue">The parameter value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.Create(System.Data.Services.ODataFormatWithParameters)">
            <summary>
            Creates a new instance of the <see cref="T:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter"/> class.
            </summary>
            <param name="format">The response format.</param>
            <returns>A new instance of the <see cref="T:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter"/> class.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeEntryMetadata(System.Data.Services.Serializers.PayloadMetadataKind.Entry)">
            <summary>
            Returns whether a specific kind of entry metadata should be included. Must not be called for type names, however.
            </summary>
            <param name="kind">The kind of metadata.</param>
            <returns>True if the metadata should be included, otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeEntryTypeName(System.String,System.String)">
            <summary>
            Returns whether an entry type name should be included.
            </summary>
            <param name="entityTypeName">Name of the entity type.</param>
            <param name="entitySetBaseTypeName">Name of the entity set's base-type.</param>
            <returns>True if the type name should be included, otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeStreamMetadata(System.Data.Services.Serializers.PayloadMetadataKind.Stream)">
            <summary>
            Returns whether a specific kind of stream metadata should be included.
            </summary>
            <param name="kind">The kind of metadata.</param>
            <returns>True if the metadata should be included, otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeNavigationMetadata(System.Data.Services.Serializers.PayloadMetadataKind.Navigation)">
            <summary>
            Returns whether a specific kind of navigation link metadata should be included.
            </summary>
            <param name="kind">The kind of metadata.</param>
            <returns>True if the metadata should be included, otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeAssociationMetadata(System.Data.Services.Serializers.PayloadMetadataKind.Association)">
            <summary>
            Returns whether a specific kind of association link metadata should be included.
            </summary>
            <param name="kind">The kind of metadata.</param>
            <returns>True if the metadata should be included, otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeFeedMetadata(System.Data.Services.Serializers.PayloadMetadataKind.Feed)">
            <summary>
            Returns whether a specific kind of feed metadata should be included.
            </summary>
            <param name="kind">The kind of metadata.</param>
            <returns>True if the metadata should be included, otherwise false</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeOperationMetadata(System.Data.Services.Serializers.PayloadMetadataKind.Operation,System.Func{System.Boolean})">
            <summary>
            Returns whether a specific kind of operation metadata should be included.
            </summary>
            <param name="kind">The kind of metadata.</param>
            <param name="checkIfUserValue">Callback to determine if the value has been changed by the user.</param>
            <returns>
            True if the metadata should be included, otherwise false
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldIncludeAlwaysAvailableOperation">
            <summary>
            Returns whether an always available operations should be included in the entry.
            </summary>
            <returns>true if always available operations should be included, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldSpecifyTypeNameAnnotation(Microsoft.Data.OData.ODataValue,System.Data.Services.Providers.ResourceType,System.String@)">
            <summary>
            Returns whether ODataLib should be explicitly instructed to include or omit a type name on the wire.
            </summary>
            <param name="value">The value to be serialized.</param>
            <param name="actualType">The type to be potentially serialized.</param>
            <param name="typeNameToWrite">The type name which ODataLib should be told to serialize. A value of null indicates the type name should be omitted.</param>
            <returns>true if an annotation should be created to override ODataLib's default type name serialization behavior; false if the ODataLib default behavior should be used.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ShouldNextPageLinkBeAbsolute">
            <summary>
            Determins whether to use absolute or relative Uri for next link.
            </summary>
            <returns>true if the next link Uri should be absolute; false if the next link Uri should be relative.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.IsEquivalentTo(System.Data.Services.Serializers.PayloadMetadataParameterInterpreter)">
            <summary>
            Unit test method for determining whether two facades are equivalent (ie: wrap the same server/client models).
            </summary>
            <param name="other">The other facade.</param>
            <returns>
              <c>true</c> if the two facades wrap the same models; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.ParseMetadataParameterForJsonLight(System.String)">
            <summary>
            Parses the raw parameter value provided in the media type and returns a simplified representation, assuming the format is Json Light.
            </summary>
            <param name="rawParameterValue">The raw parameter value.</param>
            <returns>A representation of what option was specified.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.MetadataParameterValue">
            <summary>
            Local enum for capturing which of the parameter values was specified.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.MetadataParameterValue.MinimalMetadata">
            <summary>
            The 'minimalmetadata' option
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.MetadataParameterValue.FullMetadata">
            <summary>
            The 'fullmetadata' option
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataParameterInterpreter.MetadataParameterValue.NoMetadata">
            <summary>
            The 'nometadata' option
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.AdvertiseServiceActionCallback">
            <summary>
            Delegate for abstracting away a call to IDataServiceActionProvider.AdvertiseServiceAction.
            </summary>
            <param name="serviceAction">Service action to be advertised.</param>
            <param name="resourceInstance">Instance of the resource to which the service action is bound.</param>
            <param name="resourceInstanceInFeed">true if the resource instance to be serialized is inside a feed; false otherwise. The value true
            suggests that this method might be called many times during serialization since it will get called once for every resource instance inside
            the feed. If it is an expensive operation to determine whether to advertise the service action for the <paramref name="resourceInstance"/>,
            the provider may choose to always advertise in order to optimize for performance.</param>
            <param name="actionToSerialize">The <see cref="T:Microsoft.Data.OData.ODataAction"/> to be serialized. The server constructs 
            the version passed into this call, which may be replaced by an implementation of this interface.
            This should never be set to null unless returning false.</param>
            <returns>true if the service action should be advertised; false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.OperationSerializer">
            <summary>
            Converts action/function metadata into ODataLib object-model instances using an action provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationSerializer.metadataPropertyManager">
            <summary>
            Storage for the payload metadata property manager to use.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationSerializer.payloadMetadataParameterInterpreter">
            <summary>
            Storage for the metadata query option interpreter to use.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationSerializer.operationLinkBuilder">
            <summary>
            The link builder to use when serializing operations.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationSerializer.advertiseServiceAction">
            <summary>
            Callback for determining whether to advertise a given action.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationSerializer.format">
            <summary>
            The current format being serialized.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.OperationSerializer.metadataUri">
            <summary>
            The metadata uri of the service.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationSerializer.#ctor(System.Data.Services.Serializers.PayloadMetadataParameterInterpreter,System.Data.Services.Serializers.PayloadMetadataPropertyManager,System.Data.Services.Serializers.AdvertiseServiceActionCallback,System.String,Microsoft.Data.OData.ODataFormat,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Serializers.OperationSerializer"/> class.
            </summary>
            <param name="payloadMetadataParameterInterpreter">The metadata query option interpreter </param>
            <param name="metadataPropertyManager">The metadata property manager.</param>
            <param name="advertiseServiceAction">The callback to use for determining whether an action should be advertised. Should wrap a call to IDataServiceActionProvider.AdvertiseServiceAction.</param>
            <param name="containerName">Name of the container.</param>
            <param name="format">The current format being serialized into.</param>
            <param name="metadataUri">The metadata uri of the service.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationSerializer.SerializeOperations(System.Data.Services.Serializers.EntityToSerialize,System.Boolean,System.Collections.Generic.ICollection{System.Data.Services.Providers.OperationWrapper})">
            <summary>
            Serializes the given operations and returns the resulting instances of <see cref="T:Microsoft.Data.OData.ODataAction"/>.
            </summary>
            <param name="entityToSerialize">The entity to serialize.</param>
            <param name="resourceInstanceInFeed">Whether or not the entity is being serialized in a feed.</param>
            <param name="operationWrappers">The wrapped operations to serialize.</param>
            <returns>The serialized actions.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationSerializer.GetCollidingActionNames(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.OperationWrapper})">
            <summary>
            Creates a hash-set containing only the names of actions that have colliding names.
            </summary>
            <param name="operations">The operations to check for collisions.</param>
            <returns>The hash-set with the colliding names.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationSerializer.TrySerializeOperation(System.Data.Services.Serializers.EntityToSerialize,System.Boolean,System.Boolean,System.Data.Services.Providers.OperationWrapper,Microsoft.Data.OData.ODataAction@)">
            <summary>
            Tries to serialize the operation.
            </summary>
            <param name="entityToSerialize">The entity to serialize.</param>
            <param name="resourceInstanceInFeed">Whether or not the entity is being serialized in a feed.</param>
            <param name="entityHasMultipleActionsWithSameName">Whether or not there are multiple operations in the current scope with the same name as the current operation.</param>
            <param name="serviceOperationWrapper">The service operation wrapper.</param>
            <param name="odataAction">The ODL object-model representation of the action.</param>
            <returns>Whether or not to serialize the operation.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationSerializer.AskProviderIfActionShouldBeAdvertised(System.Data.Services.Serializers.EntityToSerialize,System.Boolean,System.Data.Services.Providers.OperationWrapper,System.Data.Services.SimpleLazy{System.Uri},Microsoft.Data.OData.ODataAction@)">
            <summary>
            Asks the provider if the action should be advertised in payloads.
            </summary>
            <param name="entityToSerialize">The entity to serialize.</param>
            <param name="resourceInstanceInFeed">Whether or not the entity is being serialized in a feed.</param>
            <param name="serviceOperationWrapper">The service operation wrapper.</param>
            <param name="lazyActionTargetUri">Target uri of the action, which will only be generated if needed.</param>
            <param name="odataAction">The ODL object-model representation of the action.</param>
            <returns>Whether or not the action should be advertised.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.OperationSerializer.MakeOperationTargetRelativeFromMetadataUriIfJsonLight(Microsoft.Data.OData.ODataOperation)">
            <summary>
            Method modifies the Operation Target Uri to be relative to the metadata uri if the
            Operation Target has the same host as the metadata uri and the format is JSONLight
            </summary>
            <param name="operation">Operation to update</param>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataPropertyManager">
            <summary>
            Component for controlling access to payload metadata properties which may be intentionally omitted from response payloads.
            Note: this is currently controlled via a query option, but could be extended further in the future.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataPropertyManager.interpreter">
            <summary>
            The payload metadta parameter interpreter to use when deciding whether to include certain payload metadata.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.#ctor(System.Data.Services.Serializers.PayloadMetadataParameterInterpreter)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Services.Serializers.PayloadMetadataPropertyManager"/> class.
            </summary>
            <param name="interpreter">The interpreter for the query option.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetETag(Microsoft.Data.OData.ODataEntry,System.Func{System.String})">
            <summary>
            Sets the entry's ETag property if it should be included according to the current query option.
            </summary>
            <param name="entry">The entry to modify.</param>
            <param name="computeETag">The callback to compute the ETag.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetTypeName(Microsoft.Data.OData.ODataEntry,System.String,System.String)">
            <summary>
            Sets the entry's TypeName property if it should be included according to the current query option.
            </summary>
            <param name="entry">The entry to modify.</param>
            <param name="entitySetBaseTypeName">Name of the entity set's base type.</param>
            <param name="entryTypeName">Name of the entry's type.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetId(Microsoft.Data.OData.ODataEntry,System.Func{System.String})">
            <summary>
            Sets the entry's Id property if it should be included according to the current query option.
            </summary>
            <param name="entry">The entry to modify.</param>
            <param name="computeIdentity">The callback to compute the identity.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetEditLink(Microsoft.Data.OData.ODataEntry,System.Func{System.Uri})">
            <summary>
            Sets the entry's EditLink property if it should be included according to the current query option.
            </summary>
            <param name="entry">The entry to modify.</param>
            <param name="computeEditLink">The callback to compute the edit link.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetId(Microsoft.Data.OData.ODataFeed,System.Func{System.String})">
            <summary>
            Sets the feed's Id property if it should be included according to the current query option.
            </summary>
            <param name="feed">The feed to modify.</param>
            <param name="computeIdentity">The callback to compute the identity.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetNextPageLink(Microsoft.Data.OData.ODataFeed,System.Uri,System.Uri)">
            <summary>
            Sets the feed's NextPageLink property.
            </summary>
            <param name="feed">The feed to modify.</param>
            <param name="absoluteServiceUri">The absolute service Uri.</param>
            <param name="absoluteNextPageLinkUri">The absolute next link uri.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetEditLink(Microsoft.Data.OData.ODataStreamReferenceValue,System.Func{System.Uri})">
            <summary>
            Sets the stream's EditLink property if it should be included according to the current query option.
            </summary>
            <param name="stream">The stream to modify.</param>
            <param name="computeEditLink">The callback to compute the edit link.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetReadLink(Microsoft.Data.OData.ODataStreamReferenceValue,System.Func{System.Uri})">
            <summary>
            Sets the stream's ReadLink property if it should be included according to the current query option.
            </summary>
            <param name="stream">The stream to modify.</param>
            <param name="computeReadLink">The callback to compute the read link.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetContentType(Microsoft.Data.OData.ODataStreamReferenceValue,System.String)">
            <summary>
            Sets the stream's ContentType property if it should be included according to the current query option.
            </summary>
            <param name="stream">The stream to modify.</param>
            <param name="contentType">The stream's content type.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetETag(Microsoft.Data.OData.ODataStreamReferenceValue,System.String)">
            <summary>
            Sets the stream's ETag property if it should be included according to the current query option.
            </summary>
            <param name="stream">The stream to modify.</param>
            <param name="streamETag">The stream's ETag.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetUrl(Microsoft.Data.OData.ODataNavigationLink,System.Func{System.Uri})">
            <summary>
            Sets the link's Url property if it should be included according to the current query option.
            </summary>
            <param name="link">The link to modify.</param>
            <param name="computeUrl">The callback to compute the url.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetAssociationLinkUrl(Microsoft.Data.OData.ODataNavigationLink,System.Func{System.Uri})">
            <summary>
            Sets the link's AssociationLinkUrl property if it should be included according to the current query option.
            </summary>
            <param name="link">The link to modify.</param>
            <param name="computeUrl">The callback to compute the url.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetUrl(Microsoft.Data.OData.ODataAssociationLink,System.Func{System.Uri})">
            <summary>
            Sets the link's Url property if it should be included according to the current query option.
            </summary>
            <param name="link">The link to modify.</param>
            <param name="computeUrl">The callback to compute the url.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetTypeName(Microsoft.Data.OData.ODataValue,System.Data.Services.Providers.ResourceType)">
            <summary>
            Sets the value's TypeName property if it should be included according to the current query option.
            </summary>
            <param name="value">The value to modify.</param>
            <param name="actualType">The type reference for the given value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetTitle(Microsoft.Data.OData.ODataAction,System.Boolean,System.String)">
            <summary>
            Sets the action's Title property if it should be included according to the current query option.
            </summary>
            <param name="action">The action to modify.</param>
            <param name="isAlwaysAvailable">Indicates whether the action is always available. If not, then the value will be set because the action will be passed out to user code.</param>
            <param name="title">The title to set.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.SetTarget(Microsoft.Data.OData.ODataAction,System.Boolean,System.Func{System.Uri})">
            <summary>
            Sets the action's Target property if it should be included according to the current query option.
            </summary>
            <param name="action">The action to modify.</param>
            <param name="isAlwaysAvailable">Indicates whether the action is always available. If not, then the value will be set because the action will be passed out to user code.</param>
            <param name="computeTarget">The callback to compute the target.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.CheckForUnmodifiedTitle(Microsoft.Data.OData.ODataAction,System.String)">
            <summary>
            Checks whether the action's Title property has changed, and sets it to null if it should not be included according to the current query option.
            </summary>
            <param name="action">The action to modify.</param>
            <param name="originalTitle">The original computed title.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PayloadMetadataPropertyManager.CheckForUnmodifiedTarget(Microsoft.Data.OData.ODataAction,System.Func{System.Uri})">
            <summary>
            Checks whether the action's Target property has changed, and sets it to null if it should not be included according to the current query option.
            </summary>
            <param name="action">The action to modify.</param>
            <param name="computeOriginalTarget">The callback to compute the original target.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind">
            <summary>
            Container class for a set of enumerations for payload metadatada.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind.Navigation">
            <summary>
            Enumeration of payload metadata kinds for navigation links.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Navigation.Url">
            <summary>
            The 'Url' property of a navigation link.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Navigation.AssociationLinkUrl">
            <summary>
            The 'AssociationLinkUrl' property of a navigation link.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind.Feed">
            <summary>
            Enumeration of payload metadata kinds for feeds.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Feed.Id">
            <summary>
            The 'Id' property of a feed.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind.Entry">
            <summary>
            Enumeration of payload metadata kinds for entries.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Entry.Id">
            <summary>
            The 'Id' property of an entry.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Entry.TypeName">
            <summary>
            The 'TypeName' property of an entry.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Entry.EditLink">
            <summary>
            The 'EditLink' property of an entry.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Entry.ETag">
            <summary>
            The 'ETag' property of an entry.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind.Association">
            <summary>
            Enumeration of payload metadata kinds for association links.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Association.Url">
            <summary>
            The 'Url' property of an association link.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind.Stream">
            <summary>
            Enumeration of payload metadata kinds for streams.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Stream.EditLink">
            <summary>
            The 'EditLink' property of a stream.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Stream.ReadLink">
            <summary>
            The 'ReadLink' property of a stream.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Stream.ContentType">
            <summary>
            The 'ContentType' property of a stream.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Stream.ETag">
            <summary>
            The 'ETag' property of a stream.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PayloadMetadataKind.Operation">
            <summary>
            Enumeration of payload metadata kinds for actions/functions.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Operation.Title">
            <summary>
            The 'Title' property of an operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.PayloadMetadataKind.Operation.Target">
            <summary>
            The 'Target' property of an operation.
            </summary>
        </member>
        <member name="T:System.Data.Services.RequestQueryCountOption">
            <summary>
            Query Counting Option
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryCountOption.None">
            <summary>Do not count the result set</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryCountOption.Inline">
            <summary>Count and return value inline (together with data)</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryCountOption.ValueOnly">
            <summary>Count and return value only (as integer)</summary>
        </member>
        <member name="T:System.Data.Services.UrlConvention">
            <summary>
            Component for representing the url convention in use by the server, client, or codegen.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.ConventionTermNamespace">
            <summary>
            The namespace of the term to use when building value annotations for indicating the conventions used.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.ConventionTermName">
            <summary>
            The name of the term to use when building value annotations for indicating the conventions used.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.KeyAsSegmentConventionName">
            <summary>
            The string value for indicating that the key-as-segment convention is being used in annotations and headers.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.UrlConventionHeaderName">
            <summary>
            The name of the request header for indicating what conventions are being used.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.ConventionTerm">
            <summary>
            The term to use for building value annotations for indicating the conventions used.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.KeyAsSegmentAnnotationValue">
            <summary>
            The value to use when building value annotations for indicating that the key-as-segment convention is being used.
            </summary>
        </member>
        <member name="F:System.Data.Services.UrlConvention.generateKeyAsSegment">
            <summary>
            Whether to generate entity keys as '/'-delimited segments instead of using parenthesis.
            </summary>
        </member>
        <member name="M:System.Data.Services.UrlConvention.#ctor(System.Boolean)">
            <summary>
            Prevents a default instance of the <see cref="T:System.Data.Services.UrlConvention"/> class from being created.
            </summary>
            <param name="generateKeyAsSegment">Whether keys should be generated as segments.</param>
        </member>
        <member name="M:System.Data.Services.UrlConvention.CreateWithExplicitValue(System.Boolean)">
            <summary>
            Helper for creating an instance with explicit value. Should only be called from unit tests.
            </summary>
            <param name="generateKeyAsSegment">Whether keys should be generated as segments.</param>
            <returns>A new UrlConvention instance with the given value.</returns>
        </member>
        <member name="M:System.Data.Services.UrlConvention.Create(System.Data.Services.IDataService)">
            <summary>
            Creates an instance of <see cref="T:System.Data.Services.UrlConvention"/> based on the data services' configuration and operation context.
            </summary>
            <param name="dataService">The data service.</param>
            <returns>The url convention for the service.</returns>
        </member>
        <member name="M:System.Data.Services.UrlConvention.CreateFromUserInput(System.Data.Services.DataServiceBehavior,System.Func{System.String,System.String})">
            <summary>
            Helper for creating an instance directly from the relevant user input. Should only be called from unit tests.
            </summary>
            <param name="dataServiceBehavior">The data service behavior from configuration.</param>
            <param name="getCustomHeaderValue">The callback for getting custom header values.</param>
            <returns>A new UrlConvention instance based on the user input.</returns>
        </member>
        <member name="M:System.Data.Services.UrlConvention.BuildMetadataAnnotations(System.Data.Services.DataServiceBehavior,Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Builds the annotations needed to indicate the supported url conventions based on the service's configuration.
            </summary>
            <param name="dataServiceBehavior">The data service behavior.</param>
            <param name="model">The service's model.</param>
            <returns>The annotations to add to the model.</returns>
        </member>
        <member name="P:System.Data.Services.UrlConvention.GenerateKeyAsSegment">
            <summary>
            Whether to generate entity keys as '/'-delimited segments instead of using parenthesis.
            </summary>
        </member>
        <member name="T:System.Data.Services.ServiceActionRights">
            <summary> Access rights for service actions. </summary>
        </member>
        <member name="F:System.Data.Services.ServiceActionRights.None">
            <summary>Specifies no rights on this service action.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceActionRights.Invoke">
            <summary>Specifies the right to execute the service action.</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceOperationContext">
            <summary>Represents the current context for the operation being processed.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceOperationContext.isInnerBatchOperation">
            <summary>
            True if the request is not a top-level request. In other words, its one of the request defined as part of the top level $batch request.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceOperationContext.hostInterface">
            <summary>
            RequestMessage interface for the current operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceOperationContext.requestMessage">
            <summary>
            RequestMessage for the current operation. This more or less caches the request header values and validates the data from the host interface.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceOperationContext.responseMessage">
            <summary>
            ResponseMessage for the current operation. This mostly tracks the response headers.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceOperationContext.isBatchRequest">
            <summary>
            True if the current operation is part of a batch request.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceOperationContext.lazyMetadataUri">
            <summary>
            Uri to the metadata
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceOperationContext.#ctor(System.Data.Services.IDataServiceHost)">
            <summary>
            Constructs a new instance of DataServiceOperationContext object
            </summary>
            <param name="host">RequestMessage instance for the current operation context.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceOperationContext.#ctor(System.Boolean,System.Data.Services.IDataServiceHost2)">
            <summary>
            Constructs a new instance of DataServiceOperationContext object
            </summary>
            <param name="isBatchOperation">True if the current operation is part of a batch request.</param>
            <param name="host">RequestMessage instance for the current operation context.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceOperationContext.GetService(System.Type)">
            <summary>Returns the service that provides custom operation.</summary>
            <returns>An instance of the service, or Null if the service is not available.</returns>
            <param name="serviceType">The type of the service to use for validation.</param>
            <remarks>A service object of type <paramref name="serviceType"/> or null if there is no service object of type <paramref name="serviceType"/>.</remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceOperationContext.GetQueryStringValue(System.String)">
            <summary>Gets the value for the specified key in the request query string.</summary>
            <param name="key">Item to return.</param>
            <returns>
            The value for the specified key in the request query string;
            null if <paramref name="key"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataServiceOperationContext.InitializeAndCacheHeaders(System.Data.Services.IDataService)">
            <summary>
            Creates a new instance of the RequestMessage and ResponseMessage to cache the request headers and to validate the data from the host interface.
            </summary>
            <remarks>
            Note that this code cannot go in the constructor, because it is possible for a user to attach a host to DataService,
            process a request, changes fields _on the same host_, and then call process request again. So we need to be able to 
            create a new AstoriaRequestMessage while still using the same DataServiceOpeationContext.
            </remarks>
            <param name="dataService">The current data service instance.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceOperationContext.GetResponseStream">
            <summary>
            Gets the ResponseStream from the host, which is used in custom host scenarios.
            </summary>
            <returns>The ResponseStream to use from the host implementation.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.IsBatchRequest">
            <summary>Gets a value that indicates whether the current operation is part of a batch request.</summary>
            <returns>true when the operation is part of a batch request; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.RequestMethod">
            <summary>Gets the HTTP request method for the operation.</summary>
            <returns>The HTTP request method.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.AbsoluteRequestUri">
            <summary>Get the request URI for the current operation.</summary>
            <returns>The <see cref="T:System.Uri" /> of the operation.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.AbsoluteServiceUri">
            <summary>Gets the base service URI for the request.</summary>
            <returns>The base <see cref="T:System.Uri" /> of the service.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.RequestHeaders">
            <summary>Gets the request headers for the current operation.</summary>
            <returns>A <see cref="T:System.Net.WebHeaderCollection" /> object that contains the request headers.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.ResponseHeaders">
            <summary>Gets the response headers for the current operation.</summary>
            <returns>A <see cref="T:System.Net.WebHeaderCollection" /> object that contains the response headers.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.ResponseStatusCode">
            <summary>Gets or sets the status code of the response.</summary>
            <returns>The status code of the operation response. </returns>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.RequestMessage">
            <summary>
            RequestMessage instance for the current operation.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.CurrentDataService">
            <summary>
            The current data service instance.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.ResponseMessage">
            <summary>
            The Response Message associated with this operation, regardless of whether it is a top-level request or an inner batch operation.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.MetadataUri">
            <summary>
            Gets the Metadata uri for the service
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceOperationContext.IsInnerBatchOperation">
            <summary>
            Returns true if the request is part of the top level $batch request.
            </summary>
        </member>
        <member name="T:System.Data.Services.BatchServiceHost">
            <summary>
            Keeps track of the request and response headers for each
            operation in the batch
            </summary>
        </member>
        <member name="T:System.Data.Services.IDataServiceHost2">
            <summary>
            Extends IDataServiceHost to include extra request and response headers.
            </summary>
        </member>
        <member name="T:System.Data.Services.IDataServiceHost">
            <summary>
            Provides access to the environment for a DataService,
            including information about the current request.
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)">
            <summary>Gets a data item identified by the identity key contained by the parameter of the method.</summary>
            <returns>The data item requested by the query serialized as a string.</returns>
            <param name="item">String value containing identity key of item requested.</param>
        </member>
        <member name="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>Handles a data service exception using information in  the <paramref name="args" /> parameter.</summary>
            <param name="args"><see cref="T:System.Data.Services.HandleExceptionArgs" />  that contains information on the exception object.</param>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri">
            <summary>Gets an absolute URI that is the URI as sent by the client.</summary>
            <returns>A string that is the absolute URI of the request.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri">
            <summary>Gets an absolute URI that is the root URI of the data service.</summary>
            <returns>A string that is the absolute root URI of the data service.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestAccept">
            <summary>The transport protocol specified by the request accept header.</summary>
            <returns>String that indicates the transport protocol required by the request.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet">
            <summary>Gets a string representing the value of the Accept-Charset HTTP header.</summary>
            <returns>String representing the value of the Accept-Charset HTTP header.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestContentType">
            <summary>Gets the transport protocol specified by the content type header.</summary>
            <returns>String value that indicates content type.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestHttpMethod">
            <summary>Gets the request methods such as GET, PUT, POST, PATCH or DELETE.</summary>
            <returns>String value that indicates request method.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestIfMatch">
            <summary>Gets the value for the If-Match header on the current request.</summary>
            <returns>String value for the If-Match header on the current request.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch">
            <summary>Gets the value for the If-None-Match header on the current request.</summary>
            <returns>String value for the If-None-Match header on the current request.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestMaxVersion">
            <summary>Gets the value that identifies the highest version that the request client is able to process.</summary>
            <returns>A string that contains the highest version that the request client is able to process, possibly null.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestStream">
            <summary>Gets the stream that contains the HTTP request body.</summary>
            <returns><see cref="T:System.IO.Stream" /> object that contains the request body.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.RequestVersion">
            <summary>Gets the value that identifies the version of the request that the client submitted, possibly null.</summary>
            <returns>A string that identifies the version of the request that the client submitted, possibly null.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseCacheControl">
            <summary>Gets a string value that represents cache control information.</summary>
            <returns>A string value that represents cache control information.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseContentType">
            <summary>Gets the transport protocol of the response.</summary>
            <returns>String value containing the content type.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseETag">
            <summary>Gets an eTag value that represents the state of data in response.</summary>
            <returns>A string value that represents the eTag state value.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseLocation">
            <summary>Gets or sets the service location.</summary>
            <returns>String that contains the service location.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseStatusCode">
            <summary>Gets or sets the response code that indicates results of query.</summary>
            <returns>Integer value that contains the response code.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseStream">
            <summary>Gets the response stream to which the HTTP response body will be written.</summary>
            <returns><see cref="T:System.IO.Stream" /> object to which the response body will be written.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost.ResponseVersion">
            <summary>Gets the version used by the host in the response.</summary>
            <returns>A string value that contains the host version.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost2.RequestHeaders">
            <summary>Request header for an HTTP request.</summary>
            <returns>String value of header.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceHost2.ResponseHeaders">
            <summary>Response header for an HTTP response. </summary>
            <returns>String value of header.</returns>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.requestStream">
            <summary>Request Stream.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.contentId">
            <summary>Content Id for this operation.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.writer">
            <summary>Output writer.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.absoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.absoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.requestHttpMethod">
            <summary>Request Http Method</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.requestHeaders">
            <summary>Collection of request headers for the current batch operation.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.responseHeaders">
            <summary>Collection of response headers for the current batch operation.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.queryParameters">
            <summary>List of query parameters as specified in the request uri.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.responseStatusCode">
            <summary>Value of the response StatusCode header.</summary>
        </member>
        <member name="F:System.Data.Services.BatchServiceHost.operationMessage">
            <summary>IODataResponseMessage for this operation request.</summary>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.#ctor(System.Uri,Microsoft.Data.OData.IODataRequestMessage,System.String,Microsoft.Data.OData.ODataBatchWriter,System.Version,System.Version,System.Version)">
            <summary>
            Initializes a new dummy host for the batch request.
            This host represents a single operation in the batch.
            </summary>
            <param name="absoluteServiceUri">Absolute Uri to the service.</param>
            <param name="operationMessage">The request message representing a batch operation to wrap.</param>
            <param name="contentId">Content id for the given operation host.</param>
            <param name="writer">ODataBatchWriter instance.</param>
            <param name="maxDataServiceVersion">MaxDSV header on the batch request. If the MaxDSV header is not specified in the current operation, we default to the MaxDSV from the batch level.</param>
            <param name="minDataServiceVersion">MinDSV header on the batch request. If the MinDSV header is not specified in the current operation, we default to the MinDSV from the batch level.</param>
            <param name="dataServiceVersion">DSV header on the batch request. If the DSV header is not specified in the current operation, we default to the DSV from the batch level.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.#ctor(Microsoft.Data.OData.ODataBatchWriter)">
            <summary>
            Private constructor code that is common between normal and error construction code.
            </summary>
            <param name='writer'>ODataBatchWriter instance.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.Dispose">
            <summary>
            Disposes the object and all its resources.
            </summary>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#GetQueryStringItem(System.String)">
            <summary>Gets the value for the specified item in the request query string.</summary>
            <param name="item">Item to return.</param>
            <returns>
            The value for the specified item in the request query string;
            null if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>Method to handle a data service exception during processing.</summary>
            <param name="args">Exception handling description.</param>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.CreateBatchServiceHostForError(Microsoft.Data.OData.ODataBatchWriter)">
            <summary>
            Initializes a host for error scenarios - something to which we can write the response header values
            and write them to the underlying stream.
            </summary>
            <param name='writer'>ODataBatchWriter instance.</param>
            <returns>New BatchServiceHost instance for the error.</returns>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.GetOperationResponseMessage">
            <summary>
            Return the response message for this operation.
            </summary>
            <returns>ODataBatchOperationResponseMessage instance for this batch operation.</returns>
        </member>
        <member name="M:System.Data.Services.BatchServiceHost.GetUriAndQueryParameters">
            <summary>
            Given the request uri, parse the uri and query parameters and cache them
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#AbsoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestAccept">
            <summary>
            Gets the character set encoding that the client requested,
            possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestAcceptCharSet">
            <summary>
            Gets the character set encoding that the client requested,
            possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestContentType">
            <summary>Gets the HTTP MIME type of the input stream.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestHttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestIfMatch">
            <summary>Gets the value of the If-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestIfNoneMatch">
            <summary>Gets the value of the If-None-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestMaxVersion">
            <summary>Gets the value for the MaxDataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestVersion">
            <summary>Gets the value for the DataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseCacheControl">
            <summary>Gets or sets the Cache-Control header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseContentType">
            <summary>Gets or sets the HTTP MIME type of the output stream.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseETag">
            <summary>Gets/Sets the value of the ETag header on the outgoing response</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseLocation">
            <summary>Gets or sets the Location header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseStatusCode">
            <summary>
            Gets/Sets the status code for the request made.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> to be written to send a response
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#ResponseVersion">
            <summary>Gets or sets the value for the DataServiceVersion response header.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost#RequestStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> from which the request data can be read from
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost2#RequestHeaders">
            <summary>Dictionary of all request headers.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.System#Data#Services#IDataServiceHost2#ResponseHeaders">
            <summary>Enumerates all response headers that has been set.</summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.ContentId">
            <summary>
            Gets/Sets the content id as specified in the batch request.
            This same value is written out in the response headers also to allow mapping requests on the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.BatchServiceHost.Writer">
            <summary>Output writer.</summary>
        </member>
        <member name="T:System.Data.Services.ChangeInterceptorAttribute">
            <summary>The <see cref="T:System.Data.Services.ChangeInterceptorAttribute" /> on a method is used to process updates on the specified entity set name.</summary>
            <remarks>Use this attribute on a DataService method to indicate that this method should be invoked with data changes.</remarks>
        </member>
        <member name="F:System.Data.Services.ChangeInterceptorAttribute.entitySetName">
            <summary>Container name that the method filters.</summary>
        </member>
        <member name="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)">
            <summary>Creates a new change interceptor for an entity set specified by the parameter <paramref name="entitySetName" />.</summary>
            <param name="entitySetName">The name of the entity set that contains the entity to which the interceptor applies.</param>
        </member>
        <member name="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName">
            <summary>Gets the name of the entity set to which the interceptor applies.</summary>
            <returns>The string value that represents entity set name.</returns>
        </member>
        <member name="T:System.Data.Services.DataService`1">
            <summary>
            Represents a strongly typed service that can process data-oriented 
            resource requests.
            </summary>
            <typeparam name="T">The type of the store to provide resources.</typeparam>
            <remarks>
            <typeparamref name="T"/> will typically be a subtype of 
            <see cref="T:System.Data.Objects.ObjectContext"/> or another class that provides <see cref="T:System.Linq.IQueryable"/>
            properties.
            </remarks>
        </member>
        <member name="T:System.Data.Services.IRequestHandler">
            <summary>
            This interface declares the service contract for a DataWeb
            service.
            </summary>
        </member>
        <member name="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)">
            <summary>Provides an entry point for the request. </summary>
            <returns>The resulting message for the supplied request.</returns>
            <param name="messageBody">The <see cref="T:System.IO.Stream" /> object that contains the request.</param>
        </member>
        <member name="T:System.Data.Services.IDataService">
            <summary>Provides a non-generic interface for web data services.</summary>
        </member>
        <member name="M:System.Data.Services.IDataService.InternalHandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Processes a catchable exception.</summary>
            <param name="args">The arguments describing how to handle the exception.</param>
        </member>
        <member name="M:System.Data.Services.IDataService.GetSegmentForContentId(System.String)">
            <summary>
            Returns the segmentInfo of the resource referred by the given content Id;
            </summary>
            <param name="contentId">content id for a operation in the batch request.</param>
            <returns>segmentInfo for the resource referred by the given content id.</returns>
        </member>
        <member name="M:System.Data.Services.IDataService.GetResource(System.Data.Services.RequestDescription,System.Int32,System.String)">
            <summary>
            Get the resource referred by the segment in the request with the given index
            </summary>
            <param name="description">description about the request url.</param>
            <param name="segmentIndex">index of the segment that refers to the resource that needs to be returned.</param>
            <param name="typeFullName">typename of the resource.</param>
            <returns>the resource as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.IDataService.DisposeDataSource">
            <summary>
            Dispose the data source instance and set it to null
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataService.InternalOnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before a request is processed.
            </summary>
            <param name="args">Information about the request that is going to be processed.</param>
        </member>
        <member name="M:System.Data.Services.IDataService.InternalOnRequestQueryConstructed(System.Linq.IQueryable)">
            <summary>
            This method is called once the request query is constructed.
            </summary>
            <param name="query">The query which is going to be executed against the provider.</param>
        </member>
        <member name="M:System.Data.Services.IDataService.CreateODataWriterWrapper(Microsoft.Data.OData.ODataWriter)">
            <summary>
            Method to wrap the current DataServiceODataWriter with custom one to intercept 
            WCF Data Services calls to ODataWriter. This enables seeing the ODataFeed/ODataEntry/
            ODataNavigationLink instances that gets passed to underlying instance.
            </summary>
            <param name="odataWriter">DataServiceODataWriter instance to wrap.</param>
            <returns>an instance of DataServiceODataWriter.</returns>
        </member>
        <member name="P:System.Data.Services.IDataService.Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.Provider">
            <summary>Data provider for this data service.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.Instance">
            <summary>Returns the instance of the data service.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.OperationContext">
            <summary>Context for current operation.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.ProcessingPipeline">
            <summary>Processing pipeline events</summary>
            <remarks>
            Note that this is the same as DataService&lt;T&gt;.ProcessingPipeline.  Internally we pass IDataService around and
            we can't always cast IDataService back to DataService&lt;T&gt; easily because we don't always know what T is.
            IDataService.ProcessingPipeline is internal and it makes the pipeline object more accessible.
            </remarks>
        </member>
        <member name="P:System.Data.Services.IDataService.Updatable">
            <summary>IUpdatable interface for this provider</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.StreamProvider">
            <summary>Reference to IDataServiceStreamProvider interface</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.PagingProvider">
            <summary>Reference to the wrapper to IDataServicePagingProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.ExecutionProvider">
            <summary>Reference to the wrapper for the IDataServiceExecutionProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.IDataService.ActionProvider">
            <summary>Reference to the wrapper for the IDataServiceActionProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.processingPipeline">
            <summary>Events for the data service processing pipeline.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.cachedConstructor">
            <summary>A delegate used to create an instance of the data context.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.provider">
            <summary>Data provider for this data service.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.updatable">
            <summary>IUpdatable interface for this datasource's provider</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.pagingProvider">
            <summary>Custom paging provider interface exposed by the service.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.operationContext">
            <summary>Context for the current operation.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.streamProvider">
            <summary>Reference to IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.executionProvider">
            <summary>Reference to IDataServiceExecutionProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.actionProvider">
            <summary>Reference to the wrapper for the IDataServiceActionProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.requestQueryableConstructed">
            <summary>Test hook which gets called once a query is constructed right before its execution.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#InternalHandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Processes a catchable exception.</summary>
            <param name="args">The arguments describing how to handle the exception.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#GetSegmentForContentId(System.String)">
            <summary>
            Returns the segmentInfo of the resource referred by the given content Id;
            </summary>
            <param name="contentId">content id for a operation in the batch request.</param>
            <returns>segmentInfo for the resource referred by the given content id.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#GetResource(System.Data.Services.RequestDescription,System.Int32,System.String)">
            <summary>
            Get the resource referred by the segment in the request with the given index
            </summary>
            <param name="description">description about the request url.</param>
            <param name="segmentIndex">index of the segment that refers to the resource that needs to be returned.</param>
            <param name="typeFullName">typename of the resource.</param>
            <returns>the resource as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#DisposeDataSource">
            <summary>Disposes the data source of the current <see cref="F:System.Data.Services.DataService`1.provider"/> if necessary.</summary>
            <remarks>
            Because the provider has affinity with a specific data source
            (which is created and set by the DataService), we set
            the provider to null so we remember to re-create it if the
            service gets reused for a different request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#InternalOnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before a request is processed.
            </summary>
            <param name="args">Information about the request that is going to be processed.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#InternalOnRequestQueryConstructed(System.Linq.IQueryable)">
            <summary>
            This method is called once the request query is constructed.
            </summary>
            <param name="query">The query which is going to be executed against the provider.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.System#Data#Services#IDataService#CreateODataWriterWrapper(Microsoft.Data.OData.ODataWriter)">
            <summary>
            Creates the DataServiceODataWriter class which wraps the given ODataWriter instance.
            </summary>
            <param name="odataWriter">ODataWriter instance to wrap.</param>
            <returns>an instance of DataServiceODataWriter.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)">
            <summary>Attaches the data service host to the data service identified by the parameter <paramref name="host" />.</summary>
            <param name="host">An instance of <see cref="T:System.Data.Services.IDataServiceHost" />.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)">
            <summary>Processes an HTTP request.</summary>
            <returns>Response message.</returns>
            <param name="messageBody">The body of the HTTP request.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessRequest">
            <summary>Processes an request.</summary>
            <remarks>Provides a responseMessage-agnostic entry point for request processing.</remarks>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateDataSource">
             <summary>Creates a data source of the template class that will be used by the data service.</summary>
             <returns>An instance of the data source.</returns>
             <remarks>
             The default implementation uses a constructor with no parameters
             to create a new instance.
            
             The instance will only be used for the duration of a single
             request, and will be disposed after the request has been
             handled.
             </remarks>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Called when an exception is raised while processing a request.</summary>
            <param name="args">Exception arguments.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>Called before processing each request. For batch requests, it is called one time for the top batch request and one time for each operation in the batch.</summary>
            <param name="args"><see cref="T:System.Data.Services.ProcessRequestArgs" /> that contains information about the request.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.CheckETagValues(System.Data.Services.AstoriaRequestMessage,System.Data.Services.RequestDescription)">
            <summary>
            Checks that if etag values are specified in the header, they must be valid.
            </summary>
            <param name="requestMessage">header values.</param>
            <param name="description">request description.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.String,System.Action{System.IO.Stream},System.Data.Services.IDataService)">
            <summary>
            Creates a <see cref="T:System.ServiceModel.Channels.Message"/> that invokes the specified 
            <paramref name="writer"/> callback to write its body.
            </summary>
            <param name="version">Version for message.</param>
            <param name="action">Action for message.</param>
            <param name="contentType">MIME content type for body.</param>
            <param name="writer">Callback.</param>
            <param name="service">Service with context to dispose once the response has been written.</param>
            <returns>A new <see cref="T:System.ServiceModel.Channels.Message"/>.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateConfiguration(System.Type,System.Data.Services.Providers.IDataServiceMetadataProvider,System.Boolean)">
            <summary>
            Creates a new data service configuration instance
            </summary>
            <param name="dataServiceType">data service type</param>
            <param name="provider">provider instance</param>
            <param name="isInternallyCreatedProvider">Whether this is an internally created provider.</param>
            <returns>data service configuration instance</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.ValidateRequest(System.Data.Services.DataServiceOperationContext)">
            <summary>Validate the given request.</summary>
            <param name="operationContext">Context for current operation.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessIncomingRequest(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Processes the incoming request, without writing anything to the response body.
            </summary>
            <param name="description">description about the request uri</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>
            A delegate to be called to write the body; null if no body should be written out.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SerializeResponseBody(System.Data.Services.RequestDescription,System.Data.Services.IDataService,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>Serializes the results for a request into the body of a response message.</summary>
            <param name='description'>Description of the data requested.</param>
            <param name="dataService">data service to which the request was made.</param>
            <param name="responseMessage">response message to serialize</param>
            <returns>A delegate that can serialize the body into an IEnumerable.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.SelectMediaResourceContentType(System.Object,System.String,System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>Gets the correct content format for a media resource.</summary>
            <param name="mediaLinkEntry">The media link entry.</param>
            <param name="acceptTypesText">Accept header value.</param>
            <param name="service">Data service instance.</param>
            <param name='description'>Request description.</param>
            <returns>Response content type for the media resource or named responseStream property.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleServiceAction(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Handles service action requests.
            </summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandlePostOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles POST requests.</summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>a new request description object, containing information about the response payload</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandlePutOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles PUT requests.</summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
            <returns>new request description which contains the info about the entity resource getting modified.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleDeleteOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>Handles DELETE requests.</summary>
            <param name="description">description about the target request</param>
            <param name="dataService">data service to which the request was made.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleInternalResources(System.Data.Services.RequestDescription,System.Data.Services.IDataService,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>Handles a request for an internal resource if applicable.</summary>
            <param name="description">Request description.</param>
            <param name="dataService">data service to which the request was made.</param>
            <param name="responseMessage">response message we are writing</param>
            <returns>
            An action that produces the resulting responseStream; null if the description isn't for an internal resource.
            </returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CompareETagAndWriteResponse(System.Data.Services.RequestDescription,System.Data.Services.IDataService,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>
            Compare the ETag value and then serialize the value if required
            </summary>
            <param name="description">Description of the uri requested.</param>
            <param name="dataService">Data service to which the request was made.</param>
            <param name="responseMessage">Response Message to write</param>
            <returns>A delegate that can serialize the result.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.WriteSingleElementResponse(System.Data.Services.RequestDescription,System.Data.Services.QueryResultInfo,System.Int32,System.String,System.Data.Services.IDataService,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>
            Compare the ETag value and then serialize the value if required
            </summary>
            <param name="description">Description of the uri requested.</param>
            <param name="queryResults">Enumerator whose current resource points to the resource which needs to be written</param>
            <param name="parentResourceIndex">index of the segment info that represents the last resource</param>
            <param name="etagValue">etag value for the resource specified in parent resource parameter</param>
            <param name="dataService">data service to which the request was made.</param>
            <param name="responseMessage">Message to write.</param>
            <returns>A delegate that can serialize the result.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.ValidateSingleResultValue(System.Object,System.Data.Services.SegmentInfo,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Performs validation on <paramref name="singleResult"/>. We check that it is not both a direct reference ($value, key) and null. 
            We check that it is not an open property with a ResourceTypeKind.Collection value.
            </summary>
            <param name="singleResult">The resulting property value to be validated.</param>
            <param name="segmentInfo">SegmentInfo for the segment we processed.</param>
            <param name="provider">Provider reference.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.GetContainerAndActualEntityInstance(System.Data.Services.IDataService,System.Data.Services.RequestDescription,System.Data.Services.Providers.ResourceSetWrapper@)">
            <summary>
            Returns the actual entity instance and its containers for the resource in the description results.
            </summary>
            <param name="service">Data service</param>
            <param name="description">description about the request made.</param>
            <param name="container">returns the container to which the result resource belongs to.</param>
            <returns>returns the actual entity instance for the given resource.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleUnbindOperation(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Handles the unbind operations
            </summary>
            <param name="description">description about the request made.</param>
            <param name="dataService">data service to which the request was made.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.VerifyAndInitializeRequest(System.Data.Services.IDataService)">
            <summary>
            This method is supposed to verify and initialize a few things before we start processing the request. Also,
            the processing pipeline events are fired after this method is called.
            </summary>
            <param name="service">service instance.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateResponseBodyWriter(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Data.Services.QueryResultInfo,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>
            Returns a instance of ResponseBodyWriter class.
            </summary>
            <param name="requestDescription">Description of the uri requested.</param>
            <param name="service">data service to which the request was made.</param>
            <param name="queryResults">Enumerator whose current resource points to the resource which needs to be written</param>
            <param name="responseMessage">IODataResponseMessage for the response being serialized.</param>
            <returns>An instance of ResponseBodyWriter class.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CheckConfigurationConsistency(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.IDataServiceMetadataProvider)">
            <summary>Checks that the applied configuration is consistent.</summary>
            <param name="configuration">Data service configuration instance with access right info.</param>
            <param name="metadataProvider">Metadata provider object.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleRequest">
            <summary>
            Handle the request - whether its a batch request or a non-batch request
            </summary>
            <returns>Returns the delegate for writing the response</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleNonBatchRequest(System.Data.Services.RequestDescription)">
            <summary>
            Handle non-batch requests
            </summary>
            <param name="description">description about the request uri.</param>
            <returns>Returns the delegate which takes the response responseStream for writing the response.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.HandleBatchRequest">
            <summary>Handle the batch request.</summary>
            <returns>Returns the delegate which takes the response responseStream for writing the response.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.EnsureProviderAndConfigForRequest">
            <summary>Creates the provider and configuration as necessary to be used for this request.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateMetadataAndQueryProviders(System.Data.Services.Providers.IDataServiceMetadataProvider@,System.Data.Services.Providers.IDataServiceQueryProvider@,System.Object@,System.Boolean@)">
            <summary>
            Creates the metadata provider and query provider instances.
            </summary>
            <param name="metadataProviderInstance">Returns the metadata provider instance.</param>
            <param name="queryProviderInstance">Returns the query provider instance.</param>
            <param name="dataSourceInstance">Returns the data source instance.</param>
            <param name="isInternallyCreatedProvider">Whether an internal provider was instantiated for the service.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.GetDataServiceInterface``1(System.Data.Services.Providers.IDataServiceMetadataProvider,System.Func{``0})">
            <summary>
            Returns an instance of requested typed interface. If the service writer
            does not implement it, we default to the internal no-op implementation
            which does nothing.
            </summary>
            <typeparam name="U">Type of interface requested.</typeparam>
            <param name="metadataProvider">Metadata provider object.</param>
            <param name="constructor">Function that can construct an instance of requested interface.</param>
            <returns>Instance of the interface with type U.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateProvider">
            <summary>
            Creates a provider implementation that wraps the T type.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.ProcessIncomingRequestUri">
            <summary>
            Processes the incoming request and cache all the request headers
            </summary>
            <returns>description about the request uri.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.CreateDataSourceInstance">
            <summary>
            Create the data source instance by calling the CreateDataSource virtual method
            </summary>
            <returns>returns the instance of the data source.</returns>
        </member>
        <member name="P:System.Data.Services.DataService`1.ProcessingPipeline">
            <summary>Gets an object that defines the events for the data service processing pipeline.</summary>
            <returns>A <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> object that is used to define events for the data service processing pipeline.</returns>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Provider">
            <summary>Data provider for this data service</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#PagingProvider">
            <summary>Paging provider for this data service.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Instance">
            <summary>Returns the instance of data service.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#OperationContext">
            <summary>Cached request headers.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#ProcessingPipeline">
            <summary>Processing pipeline events</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#Updatable">
            <summary>IUpdatable interface for this provider</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#StreamProvider">
            <summary>Reference to IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#ExecutionProvider">
            <summary>Reference to the wrapper for the IDataServiceExecutionProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.System#Data#Services#IDataService#ActionProvider">
            <summary>Reference to the wrapper for the IDataServiceActionProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.ODataWriterFactory">
            <summary>
            Public func to wrap the current DataServiceODataWriter with custom one to intercept 
            WCF Data Services calls to ODataWriter. This enables seeing the ODataFeed/ODataEntry/
            ODataNavigationLink instances that gets passed to underlying instance.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.CurrentDataSource">
            <summary>Gets the data source instance currently being used to process the request.</summary>
            <returns>The data source instance for the service.</returns>
        </member>
        <member name="T:System.Data.Services.DataService`1.BatchDataService">
            <summary>
            Dummy data service for batch requests
            </summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.dataService">
            <summary>Original data service instance.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.messageReader">
            <summary>Batch request message reader.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchReader">
            <summary>Batch reader for the request.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchResponseMessage">
            <summary>Batch response message.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.messageWriter">
            <summary>Batch response message writer.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.contentIds">
            <summary>Hashset to make sure that the content ids specified in the batch are all unique.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.contentIdsToSegmentInfoMapping">
            <summary>Dictionary to track objects represented by each content id within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchRequestDescription">
            <summary>List of the all request description within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchOperationContexts">
            <summary>List of the all response headers and results of each operation within a changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchElementCount">
            <summary>Number of changset/query operations encountered in the current batch.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.batchLimitExceeded">
            <summary>Whether the batch limit has been exceeded (implies no further processing should take place).</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.changeSetElementCount">
            <summary>Number of CUD operations encountered in the current changeset.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.operationContext">
            <summary>The context of the current batch operation.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.updatable">
            <summary>Instance which implements IUpdatable interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.pagingProvider">
            <summary>Instance which implements the IDataServicePagingProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.streamProvider">
            <summary>Instance which implements IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.executionProvider">
            <summary>Instance which implements IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.DataService`1.BatchDataService.actionProvider">
            <summary>Reference to the wrapper for the IDataServiceActionProvider interface.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.#ctor(System.Data.Services.IDataService,Microsoft.Data.OData.ODataMessageReader,Microsoft.Data.OData.ODataBatchReader,Microsoft.Data.OData.IODataResponseMessage,Microsoft.Data.OData.ODataMessageWriter)">
            <summary>
            Creates an instance of the batch data service which keeps track of the 
            request and response headers per operation in the batch
            </summary>
            <param name="dataService">original data service to which the batch request was made</param>
            <param name="messageReader">ODataMessageReader instance for the batch request.</param>
            <param name="batchReader">The batch reader for the batch request.</param>
            <param name="batchResponseMessage">AstoriaResponseMessage for the batch response.</param>
            <param name="messageWriter">ODataMesageWriter instance for the batch response.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.InternalHandleException(System.Data.Services.HandleExceptionArgs)">
            <summary>Processes a catchable exception.</summary>
            <param name="args">The arguments describing how to handle the exception.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.InternalOnRequestQueryConstructed(System.Linq.IQueryable)">
            <summary>
            This method is called once the request query is constructed.
            </summary>
            <param name="query">The query which is going to be executed against the provider.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.GetSegmentForContentId(System.String)">
            <summary>
            Returns the segmentInfo of the resource referred by the given content Id;
            </summary>
            <param name="contentId">content id for a operation in the batch request.</param>
            <returns>segmentInfo for the resource referred by the given content id.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.GetResource(System.Data.Services.RequestDescription,System.Int32,System.String)">
            <summary>
            Get the resource referred by the segment in the request with the given index
            </summary>
            <param name="description">description about the request url.</param>
            <param name="segmentIndex">index of the segment that refers to the resource that needs to be returned.</param>
            <param name="typeFullName">typename of the resource.</param>
            <returns>the resource as returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.DisposeDataSource">
            <summary>
            Dispose the data source instance
            </summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.InternalOnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
            <summary>
            This method is called before a request is processed.
            </summary>
            <param name="args">Information about the request that is going to be processed.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.CreateODataWriterWrapper(Microsoft.Data.OData.ODataWriter)">
            <summary>
            Creates the DataServiceODataWriter class which wraps the given ODataWriter instance.
            </summary>
            <param name="odataWriter">ODataWriter instance to wrap.</param>
            <returns>an instance of DataServiceODataWriter.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.HandleBatchContent(System.IO.Stream)">
            <summary>
            Handle the batch content
            </summary>
            <param name="responseStream">response responseStream for writing batch response</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.CreateBatchServiceHostFromOperationMessage(System.Data.Services.IDataService,Microsoft.Data.OData.IODataRequestMessage,System.Collections.Generic.HashSet{System.Int32},Microsoft.Data.OData.ODataBatchWriter)">
            <summary>
            Creates a batch service host for the current batch operation.
            </summary>
            <param name="dataService">Data service instance.</param>
            <param name="operationRequestMessage">The operation message to create a context for.</param>
            <param name="contentIds">content ids that are defined in the batch.</param>
            <param name="writer">Output writer.</param>
            <returns>An instance of the batch service host which represents the current operation.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.CreateOperationContextFromBatchServiceHost(System.Data.Services.IDataService,System.Data.Services.BatchServiceHost)">
            <summary>
            Creates an operation context for the current batch operation
            </summary>
            <param name="dataService">Data service instance.</param>
            <param name="operationHost">The operation batch service host.</param>
            <returns>instance of the operation context which represents the current operation.</returns>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.HandleBatchOperation(Microsoft.Data.OData.IODataRequestMessage,Microsoft.Data.OData.ODataBatchWriter,System.Boolean,System.Boolean@)">
            <summary>
            Handles a single operation in the batch request.
            </summary>
            <param name="operationRequestMessage">The operation message for the current operation.</param>
            <param name="batchWriter">The batch writer to write responses to.</param>
            <param name="ignoreCUDOperations">true if all CUD operations should be ignored, this is used if we've found an exception in the current changeset
            to read over all the rest of the changeset, without actually processing the operations in it.</param>
            <param name="serviceOperationRequests">Boolean which tracks if all the operations are service operations. If so we don't need to call SaveChanges.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.HandleChangesetException(System.Exception,System.Collections.Generic.List{System.Data.Services.DataServiceOperationContext},Microsoft.Data.OData.ODataBatchWriter,System.IO.Stream,System.Version)">
            <summary>
            Write the exception encountered in the middle of the changeset to the response
            </summary>
            <param name="exception">exception encountered</param>
            <param name="changesetOperationContexts">list of operation contexts in the changeset</param>
            <param name="batchWriter">writer to which the response needs to be written</param>
            <param name="responseStream">Underlying response responseStream.</param>
            <param name="defaultResponseVersion">Response version to use.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.IncreaseBatchCount">
            <summary>Increases the count of batch changsets/queries found, and checks it is within limits.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.IncreaseChangeSetCount">
            <summary>Increases the count of changeset CUD operations found, and checks it is within limits.</summary>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.UpdateRequestEnumerableForPut(System.Data.Services.RequestDescription)">
            <summary>
             For POST operations, the RequestEnumerable could be out of date
             when a PUT is referring to the POST within the changeset.
             We need to update the RequestEnumerable to reflect what actually
             happened to the database.
            </summary>
            <param name="requestDescription">description for the current request.</param>
        </member>
        <member name="M:System.Data.Services.DataService`1.BatchDataService.WriteBatchOperationResponse(System.Data.Services.RequestDescription,System.Data.Services.BatchServiceHost)">
            <summary>
            Write the response for the given request, if required.
            </summary>
            <param name="description">description of the request uri. If this is null, means that no response needs to be written</param>
            <param name="batchHost">Batch responseMessage for which the request should be written.</param>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Provider">
            <summary>Data provider for this data service.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Updatable">
            <summary>IUpdatable interface for this provider</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.PagingProvider">
            <summary>IDataServicePagingProvider wrapper object.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.StreamProvider">
            <summary>Instance which implements IDataServiceStreamProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.ExecutionProvider">
            <summary>Instance which implements IDataServiceExecutionProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.ActionProvider">
            <summary>Reference to the wrapper for the IDataServiceActionProvider interface.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.Instance">
            <summary>Instance of the data provider.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.OperationContext">
            <summary>Gets the context of the current batch operation.</summary>
        </member>
        <member name="P:System.Data.Services.DataService`1.BatchDataService.ProcessingPipeline">
            <summary>Processing pipeline events</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceBehavior">
            <summary>Use this class to add settings that define service behavior.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceBehavior.urlConventions">
            <summary>The conventions to use when generating and parsing URLs.</summary>
        </member>
        <member name="M:System.Data.Services.DataServiceBehavior.#ctor">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.DataServiceBehavior"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceBehavior.ApplySettingsFromConfiguration(System.Data.Services.Configuration.DataServicesFeaturesSection)">
            <summary>
            Applies the settings from the configuration file.
            </summary>
            <param name="featuresSection">The features section from the configuration file.</param>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.InvokeInterceptorsOnLinkDelete">
            <summary>Gets or sets whether to invoke change interceptors when a link is deleted.</summary>
            <returns>True when interceptors should be invoked; otherwise false. </returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.AcceptCountRequests">
            <summary>Gets or sets whether requests with the $count path segment or the $inlinecount query options are accepted.</summary>
            <returns>True if count requests are supported; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.AcceptProjectionRequests">
            <summary>Gets or sets whether projection requests should be accepted.</summary>
            <returns>True if projection requests are supported; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.AcceptAnyAllRequests">
            <summary>Gets or sets whether the server will accept requests with filters that contain all or any expressions.</summary>
            <returns>True when the server accepts all or any expressions; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.MaxProtocolVersion">
            <summary>Gets or sets the maximum protocol version that is supported by the response sent by the data service.</summary>
            <returns>The maximum version allowed in the response.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.IncludeAssociationLinksInResponse">
            <summary>Get or sets whether relationship links are included in responses from the data service.</summary>
            <returns>True when relationship links are returned; otherwise false. </returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.UseMetadataKeyOrderForBuiltInProviders">
            <summary>Get or sets whether to use the order of key properties as defined in the metadata of an Entity Framework or reflection provider when constructing an implicit OrderBy query.</summary>
            <returns>True when the order of key properties is inferred from the provider metadata and false when an alphabetical order is used.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.AcceptSpatialLiteralsInQuery">
            <summary>Gets or sets whether spatial literal values are supported in the URI.</summary>
            <returns>True when spatial literals are supported in the URI; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.AcceptReplaceFunctionInQuery">
            <summary>
            Allow replace functions in the request url.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.UrlConventions">
            <summary>
            The conventions to use when generating and parsing URLs.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.AlwaysUseDefaultXmlNamespaceForRootElement">
            <summary>
            If set to true, then the root element of each payload will be written in the default (non-prefix-qualified) namespace of the document. 
            All other elements in the same namespace will also not have prefixes.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.GenerateKeyAsSegment">
            <summary>
            Gets a value indicating whether to generate keys as segments based on the user-specified URL conventions.
            </summary>
        </member>
        <member name="P:System.Data.Services.DataServiceBehavior.ShouldIncludeAssociationLinksInResponse">
            <summary>
            Return false for V1/V2 servers because we should ignore the IncludeAssociationLinksInResponse settings for V1/V2 servers.
            Otherwise, return whatever value has been set for the knob.
            </summary>
        </member>
        <member name="T:System.Data.Services.DataServiceConfiguration">
            <summary>Use this class to manage the configuration data for a data service.</summary>
        </member>
        <member name="T:System.Data.Services.IDataServiceConfiguration">
            <summary>
            Use this interface to modify the configuration of a web data service.
            </summary>
        </member>
        <member name="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
            <summary>Sets the access rules for the specified entity set.</summary>
            <param name="name">The name of the entity set for configured access.</param>
            <param name="rights">The rights allowed for the entity set.</param>
        </member>
        <member name="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
            <summary>Sets the access rules for the specified service operation.</summary>
            <param name="name">The name of the service operation on which to set access rights.</param>
            <param name="rights">The rights allowed according to <see cref="T:System.Data.Services.ServiceOperationRights" /> enumeration. </param>
        </member>
        <member name="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)">
            <summary>Registers a resource type for use by the data service.</summary>
            <param name="type">The resource type to register.</param>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount">
            <summary>Gets the maximum number of requests that can be handled in a batch.</summary>
            <returns>Integer value that indicates the maximum number of requests that can be handled in a batch.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount">
            <summary>Gets the maximum number of change sets that can be handled in a batch.</summary>
            <returns>Integer value that indicates the maximum number of change sets that can be handled in a batch.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount">
            <summary>Gets or sets the maximum number of segments that can be expanded by the $expand query option for all requests to the data service.  </summary>
            <returns>The maximum number of segments to expand.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth">
            <summary>Gets or sets a maximum number of segments supported in a single $expand path for all requests to the data service.</summary>
            <returns>Integer representing the maximum number of supported segments in $expand path.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection">
            <summary>Gets the maximum number of results per collection.</summary>
            <returns>The integer value that indicates the maximum number of results per collection.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert">
            <summary>Gets or sets the maximum number of objects that can be inserted in a single request. </summary>
            <returns>The integer value that contains the maximum number of objects that can be inserted in a single request.</returns>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors">
            <summary>Gets or sets whether verbose errors are used by default for all responses from the data service.  </summary>
            <returns>A Boolean value that indicates whether verbose errors are returned.</returns>
            <remarks>
            This property sets the default for the whole service; individual responses may behave differently
            depending on the value of the VerboseResponse property of the arguments to the HandleException
            method on the <see cref="T:System.Data.Services.DataService`1"/> class.
            </remarks>
        </member>
        <member name="P:System.Data.Services.IDataServiceConfiguration.DisableValidationOnMetadataWrite">
            <summary>Gets or sets whether the data model is validated before it is written as a response to a request to the metadata endpoint.</summary>
            <returns>true when metadata validation is disabled; otherwise false.</returns>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.resourceRights">
            <summary>
            A lookup of containers to their rights.
            For IDSP there is no guarantee that the provider will always return the same metadata instance.  We should
            use the name instead of the instance as key since the configuration is cached across requests.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.serviceOperationRights">
            <summary>
            A lookup of service operations to their rights.
            For IDSP there is no guarantee that the provider will always return the same metadata instance.  We should
            use the name instead of the instance as key since the configuration is cached across requests.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.serviceActionRights">
            <summary>
            A lookup of service action to their rights.
            For IDSP there is no guarantee that the provider will always return the same metadata instance.  We should
            use the name instead of the instance as key since the configuration is cached across requests.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.pageSizes">
            <summary>
            A lookup of resource sets to their page sizes.
            For IDSP there is no guarantee that the provider will always return the same metadata instance.  We should
            use the name instead of the instance as key since the configuration is cached across requests.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.knownTypes">
            <summary>A list of known types.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.dataServiceBehavior">
            <summary>Holds configuration of service behavior</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.accessEnabledResourceTypes">
            <summary>List of fully qualified type names that were marked as visible by calling EnableAccess().</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.configurationSealed">
            <summary>Whether this configuration has been sealed.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxBatchCount">
            <summary>Maximum number of change sets and query operations in a batch.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxChangeSetCount">
            <summary>Maximum number of changes in a change set.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxExpandCount">
            <summary>Maximum number of segments to be expanded allowed in a request.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxExpandDepth">
            <summary>Maximum number of segments in a single $expand path.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxResultsPerCollection">
            <summary>Maximum number of elements in each returned collection (top-level or expanded).</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.maxObjectCountOnInsert">
            <summary>maximum number of objects that can be referred in a single insert request.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.provider">
            <summary>The provider for the web service.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.rightsForUnspecifiedResourceContainer">
            <summary>Rights used for unspecified resource sets.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.rightsForUnspecifiedServiceOperation">
            <summary>Rights used for unspecified service operations.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.rightsForUnspecifiedServiceAction">
            <summary>Rights used for unspecified service actions.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.defaultPageSize">
            <summary>Page size for unspecified resource sets</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.useVerboseErrors">
            <summary>Whether verbose errors should be returned by default.</summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.typeConversion">
            <summary>
            Perform type conversion from the type specified in the payload to the actual property type.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.disableValidationOnMetadataWrite">
            <summary>
            Specifies whether the EDM model should be validated before it is written
            as a response to a $metadata request.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceConfiguration.accessEnabledForAllResourceTypes">
            <summary>This is set to true if EnableAccess("*") is called.  False otherwise.</summary>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.#ctor(System.Data.Services.Providers.IDataServiceMetadataProvider)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.DataServiceConfiguration"/> with
            the specified <paramref name="provider"/>.
            </summary>
            <param name="provider">Non-null provider for this configuration.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
            <summary>Sets the permissions for the specified entity set resource.</summary>
            <param name="name">The Name of the entity set for which to set permissions.</param>
            <param name="rights">The Access rights to be granted to this resource, passed as an <see cref="T:System.Data.Services.EntitySetRights" /> value.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
            <summary>Sets the permissions for the specified service operation.</summary>
            <param name="name">The name of the service operation for which to set permissions.</param>
            <param name="rights">The access rights to be granted to this resource, passed as a <see cref="T:System.Data.Services.ServiceOperationRights" /> value.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetServiceActionAccessRule(System.String,System.Data.Services.ServiceActionRights)">
            <summary>Sets the permissions for the specified service action.</summary>
            <param name="name">The name of the service action for which to set permissions.</param>
            <param name="rights">The access rights to be granted to this action, passed as a <see cref="T:System.Data.Services.ServiceActionRights" /> value.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)">
            <summary>Adds a type to the list of types that are recognized by the data service.</summary>
            <param name="type">The type to add to the collection of known types.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)">
            <summary>Sets the maximum page size for an entity set resource.</summary>
            <param name="name">The name of entity set resource for which to set the page size.</param>
            <param name="size">The page size for the entity set resource that is specified in <paramref name="name" />.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.EnableTypeAccess(System.String)">
             <summary>Registers a data type with the data service runtime so that it can be used by a custom data service provider.</summary>
             <param name="typeName">The namespace-qualified name of the type that is enabled for use with the custom data service provider.</param>
             <remarks>
             This method is used to register a type with the Astoria runtime which may be returned in the “open properties” of
             an open type such that the type is visible in $metadata output and usable with CRUD operations.
             
             The typename parameter must be a namespace qualified type name (format: &lt;namespace&gt;.&lt;typename&gt;).  
             The name provided must be as it would show up in a CSDL document (ie. model types, not CLR types)
             
             The types registered via calls to EnableAccess will be additive to those implicitly made accessible via 
             DSC.SetEntitySetAccessRule(…) invocations
              • Note: The Astoria runtime layer won’t be able to determine if a typename specified maps to an Entity Type,
                Complex Type, etc until it actually obtains type info (entity types, complex types, etc) from the underlying provider
              • “*” can be used as the value of ‘typename’, which will be interpreted as matching all types
              
             When Astoria enumerates types or needs to obtain a type (Complex Types, Entity Types) from the underlying provider
             it will first determine if the type should be visible (show in $metadata and accessible via operations exposed by the
             service) as per the standard v1 checks (ie. driven by SetEntitySetAccessRule calls). If the type is not visible via V1
             rules, then we consult the set of types registered via EnableAccess(&lt;typename&gt;) invocations.  If the type was
             included in such a call then the type is visible via $metadata and can be accessed via CRUD ops, etc.
             
             If a type is not made visible via one of the mechanisms above, then:
               • That type must not be included a response to a $metadata request
               • Instances of the type must not be returned to the client as the response of a request to the data service. 
                 If such a type instance would be required the service MUST fail the request.  Failure semantics are covered 
                 in the area of the specification which covers request/response semantics with respect to open types. 
            
             Invoking this method multiple times with the same type name is allowed and considered a “NO OP”.
             </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.ComposeQueryInterceptors(System.Object,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>Composes all query interceptors into a single expression.</summary>
            <param name="serviceInstance">Web service instance.</param>
            <param name="container">Container for which interceptors should run.</param>
            <returns>An expression the filter for query interceptors, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.ComposeResourceContainer(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceSetWrapper,System.Linq.Expressions.Expression)">
            <summary>
            Composes the specified <paramref name="queryExpression"/> for the 
            given <paramref name="container"/> with authorization
            callbacks.
            </summary>
            <param name="service">Data service on which to invoke method.</param>
            <param name="container">resource set to compose with.</param>
            <param name="queryExpression">Query to compose.</param>
            <returns>The resulting composed query.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckResourceRights(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.EntitySetRights)">
            <summary>Checks whether this request has the specified rights.</summary>
            <param name="container">Container to check.</param>
            <param name="requiredRights">Required rights.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="requiredRights"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckResourceRightsForRead(System.Data.Services.Providers.ResourceSetWrapper,System.Boolean)">
            <summary>Checks whether this request has the specified reading rights.</summary>
            <param name="container">Container to check.</param>
            <param name="singleResult">Whether a single or multiple resources are requested.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="singleResult"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckServiceOperationRights(System.Data.Services.Providers.OperationWrapper,System.Data.Services.ServiceOperationRights)">
            <summary>Checks whether this request has the specified rights.</summary>
            <param name="operation">Operation to check.</param>
            <param name="requiredRights">Required rights.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="requiredRights"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckServiceOperationRights(System.Data.Services.Providers.OperationWrapper,System.Boolean)">
            <summary>Checks whether this request has the specified rights.</summary>
            <param name="operation">Operation to check.</param>
            <param name="singleResult">Whether a single or multiple resources are requested.</param>
            <exception cref="T:System.Data.Services.DataServiceException">Thrown if <paramref name="singleResult"/> aren't available.</exception>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetAllowedMethods(System.Data.Services.DataServiceConfiguration,System.Data.Services.RequestDescription)">
            <summary>Gets a string with methods allowed on the target for the <paramref name="description"/>.</summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="description">Description with target.</param>
            <returns>A string with methods allowed on the description; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetAllowedMethods(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.RequestDescription)">
            <summary>
            Gets a string representation of allowed methods on the container (with the specified target cardinality),
            suitable for an 'Allow' header.
            </summary>
            <param name="configuration">configuration object which has the data</param>
            <param name="container">Targetted container, possibly null.</param>
            <param name="description">Description with target.</param>
            <returns>A value for an 'Allow' header; null if <paramref name="container"/> is null.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetResourceSetRights(System.Data.Services.Providers.ResourceSet)">
            <summary>Gets the effective rights on the specified container.</summary>
            <param name="container">Container to get rights for.</param>
            <returns>The effective rights as per this configuration.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetServiceOperationRights(System.Data.Services.Providers.ServiceOperation)">
            <summary>Gets the effective rights on the specified operation.</summary>
            <param name="serviceOperation">Operation to get rights for.</param>
            <returns>The effective rights as per this configuration.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetServiceActionRights(System.Data.Services.Providers.ServiceAction)">
            <summary>Gets the effective rights on the specified action.</summary>
            <param name="serviceAction">Action to get rights for.</param>
            <returns>The effective rights as per this configuration.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetResourceSetPageSize(System.Data.Services.Providers.ResourceSet)">
            <summary>Gets the page size per entity set</summary>
            <param name="container">Entity set for which to get the page size</param>
            <returns>Page size for the <paramref name="container"/></returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetKnownTypes">
            <summary>Returns the list of types registered by the data service.</summary>
            <returns>The list of types as registered by the data service</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.GetAccessEnabledResourceTypes">
            <summary>Get the list of access enabled resourceType names.</summary>
            <returns>List of namespace qualified resourceType names that were marked as visible by calling EnableAccess().</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.Initialize(System.Type)">
            <summary>
            Initializes the DataServiceConfiguration instance by:
            1. Invokes the static service initialization methods on the specified type family.
            2. Register authorization callbacks specified on the given <paramref name="type"/>.
            </summary>
            <param name="type">Type of service to initialize for.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.Seal">
            <summary>Seals this configuration instance and prevents further changes.</summary>
            <remarks>
            This method should be called after the configuration has been set up and before it's placed on the
            metadata cache for sharing.
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.ValidateServerOptions">
            <summary>
            Validated if server options used by the service are compatible with MaxProtocolVersion
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.HasAnnotations">
            <summary>
            Indicates whether the metadata includes annotations
            </summary>
            <returns>true if the metadata includes annotations; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.AppendRight(System.Data.Services.EntitySetRights,System.Data.Services.EntitySetRights,System.String,System.Text.StringBuilder)">
            <summary>
            Appends the <paramref name="name"/> of a right if the <paramref name="test"/> right is enabled 
            on <paramref name="entitySetRights"/>.
            </summary>
            <param name="entitySetRights">Rights to be checked.</param>
            <param name="test">Right being looked for.</param>
            <param name="name">Name of right to append.</param>
            <param name="builder">Comma-separated list of right names to append to.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.InvokeStaticInitialization(System.Type)">
            <summary>
            Invokes the static service initialization methods on the 
            specified type family.
            </summary>
            <param name="type">Type of service to initialize for.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckNonNegativeProperty(System.Int32,System.String)">
            <summary>
            Checks that the specified <paramref name="value"/> for the named property is not negative and that the
            configuration isn't sealed.
            </summary>
            <param name="value">Value to check.</param>
            <param name="propertyName">Parameter name.</param>
            <returns>The <paramref name="value"/> to set.</returns>
            <remarks>
            This method is typically used in properties with the following pattern:
            <code>public int Foo { get {... } set { this.foo = this.CheckNonNegativeProperty(value, "Foo"); } }</code>
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceConfiguration.CheckNotSealed">
            <summary>Checks that this configuration hasn't been sealed yet.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion">
            <summary>Gets or sets whether the data service runtime should convert the type that is contained in the payload to the actual property type that is specified in the request.</summary>
            <returns>True if the data service runtime should convert the type that is contained in the payload; otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount">
            <summary>Gets or sets the maximum number of change sets and query operations that are allowed in a single batch.</summary>
            <returns>The maximum number of change sets.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount">
            <summary>Gets or set the maximum number of changes that can be included in a single change set.</summary>
            <returns>The maximum number of changes allowed.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount">
            <summary>Gets or sets the maximum number of related entities that can be included in a single request by using the $expand operator.</summary>
            <returns>The maximum number of related entities.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth">
            <summary>Get or sets the maximum number of related entities that can be included in an $expand path in a single request.</summary>
            <returns>The maximum depth of an $expand path.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection">
            <summary>Get or sets the maximum number of items in each returned collection.</summary>
            <returns>The maximum number of items.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert">
            <summary>Get or sets the maximum number of objects to insert that can be contained in a single POST request.</summary>
            <returns>The maximum number of objects to insert.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.AnnotationsBuilder">
            <summary>Builds the annotation models to be applied to the data model of the provider.</summary>
            <returns>The annotation models to be applied.</returns>
            <remarks>
            Builds the annotation models to be applied to the provider's EDM model (driven by <see cref="T:System.Data.Services.Providers.IDataServiceMetadataProvider"/>).
            The input to the Func is the provider's model (so the returned annotations can reference it).
            Only annotations within the returned models are considered; any other schema elements are ignored.
            </remarks>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors">
            <summary>Gets or sets whether the verbose errors should be returned by the data service.</summary>
            <returns>True if the verbose errors should be returned by the data service; otherwise, false.</returns>
            <remarks>
            This property sets the default for the whole service; individual responses may behave differently
            depending on the value of the VerboseResponse property of the arguments to the HandleException
            method on the <see cref="T:System.Data.Services.DataService`1"/> class.
            </remarks>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.DataServiceBehavior">
            <summary>Gets a <see cref="T:System.Data.Services.DataServiceBehavior" /> object that defines the additional behaviors of the data service.</summary>
            <returns>The additional behaviors of the data service.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.DisableValidationOnMetadataWrite">
            <summary>Gets or sets whether the data model is validated before it is written as a response to a request to the $metadata endpoint.</summary>
            <returns>True when metadata validation is disabled; otherwise false.</returns>
            <remarks>The default value for this property is 'false'.</remarks>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.AccessEnabledForAllResourceTypes">
            <summary>True if all resource types have been made visible by calling EnableAccess("*").  False otherwise.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceConfiguration.IsPageSizeDefined">
            <summary>
            Whether size of a page has been defined.
            </summary>
        </member>
        <member name="T:System.Data.Services.DataServiceException">
            <summary>
            The exception that is thrown when an error occurs while processing
            a web data service request.
            </summary>
            <remarks>
            The DataServiceException is thrown to indicate an error during
            request processing, specifying the appropriate response for
            the request.
            
            RFC2616 about the status code values:
                1xx: Informational  - Request received, continuing process
                "100"  ; Section 10.1.1: Continue
                "101"  ; Section 10.1.2: Switching Protocols
                
                2xx: Success        - The action was successfully received, understood, and accepted
                "200"  ; Section 10.2.1: OK
                "201"  ; Section 10.2.2: Created
                "202"  ; Section 10.2.3: Accepted
                "203"  ; Section 10.2.4: Non-Authoritative Information
                "204"  ; Section 10.2.5: No Content
                "205"  ; Section 10.2.6: Reset Content
                "206"  ; Section 10.2.7: Partial Content
                
                3xx: Redirection    - Further action must be taken in order to complete the request
                "300"  ; Section 10.3.1: Multiple Choices
                "301"  ; Section 10.3.2: Moved Permanently
                "302"  ; Section 10.3.3: Found
                "303"  ; Section 10.3.4: See Other
                "304"  ; Section 10.3.5: Not Modified
                "305"  ; Section 10.3.6: Use Proxy
                "307"  ; Section 10.3.8: Temporary Redirect
                
                4xx: Client Error   - The request contains bad syntax or cannot be fulfilled
                "400"  ; Section 10.4.1: Bad Request
                "401"  ; Section 10.4.2: Unauthorized
                "402"  ; Section 10.4.3: Payment Required
                "403"  ; Section 10.4.4: Forbidden
                "404"  ; Section 10.4.5: Not Found
                "405"  ; Section 10.4.6: Method Not Allowed
                "406"  ; Section 10.4.7: Not Acceptable
                "407"  ; Section 10.4.8: Proxy Authentication Required
                "408"  ; Section 10.4.9: Request Time-out
                "409"  ; Section 10.4.10: Conflict
                "410"  ; Section 10.4.11: Gone
                "411"  ; Section 10.4.12: Length Required
                "412"  ; Section 10.4.13: Precondition Failed
                "413"  ; Section 10.4.14: Request Entity Too Large
                "414"  ; Section 10.4.15: Request-URI Too Large
                "415"  ; Section 10.4.16: Unsupported Media Type
                "416"  ; Section 10.4.17: Requested range not satisfiable
                "417"  ; Section 10.4.18: Expectation Failed
                
                5xx: Server Error   - The server failed to fulfill an apparently valid request
                "500"  ; Section 10.5.1: Internal Server Error
                "501"  ; Section 10.5.2: Not Implemented
                "502"  ; Section 10.5.3: Bad Gateway
                "503"  ; Section 10.5.4: Service Unavailable
                "504"  ; Section 10.5.5: Gateway Time-out
                "505"  ; Section 10.5.6: HTTP Version not supported
            </remarks>
        </member>
        <member name="F:System.Data.Services.DataServiceException.state">
            <summary>
            Contains the state of this exception.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a system-supplied message that describes the error.</summary>
            <remarks>
            The Message property is initialized to a system-supplied message
            that describes the error. This message takes into account the
            current system culture. The StatusCode property is set to 500
            (Internal Server Error).
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a specified message that describes the error.</summary>
            <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
            <remarks>
            The StatusCode property is set to 500 (Internal Server Error).
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
            <param name="innerException">The exception that is the cause of the current exception. </param>
            <remarks>
            The StatusCode property is set to 500 (Internal Server Error).
            </remarks>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class. </summary>
            <param name="statusCode">The HTTP status code returned by the exception.</param>
            <param name="message">The error message for the exception.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class. </summary>
            <param name="statusCode">The HTTP status code of the exception.</param>
            <param name="errorCode">The string value that contains the error code.</param>
            <param name="message">The string value that contains the error message.</param>
            <param name="messageXmlLang">The string value that indicates the language of the error message.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateDeepRecursion(System.Int32)">
            <summary>Creates a new "Bad Request" exception for recursion limit exceeded.</summary>
            <param name="recursionLimit">Recursion limit that was reaced.</param>
            <returns>A new exception to indicate that the request is rejected.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateDeepRecursion_General">
            <summary>Creates a new "Bad Request" exception for recursion limit exceeded.</summary>
            <returns>A new exception to indicate that the request is rejected.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateForbidden">
            <summary>Creates a new "Forbidden" exception.</summary>
            <returns>A new exception to indicate that the request is forbidden.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateResourceNotFound(System.String)">
            <summary>Creates a new "Resource Not Found" exception.</summary>
            <param name="identifier">segment identifier information for which resource was not found.</param>
            <returns>A new exception to indicate the requested resource cannot be found.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.ResourceNotFoundError(System.String)">
            <summary>Creates a new "Resource Not Found" exception.</summary>
            <param name="errorMessage">Plain text error message for this exception.</param>
            <returns>A new exception to indicate the requested resource cannot be found.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateSyntaxError">
            <summary>Creates a new exception to indicate a syntax error.</summary>
            <returns>A new exception to indicate a syntax error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateSyntaxError(System.String)">
            <summary>Creates a new exception to indicate a syntax error.</summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a syntax error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreatePreConditionFailedError(System.String)">
            <summary>
            Creates a new exception to indicate Precondition error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a Precondition failed error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreatePreConditionFailedError(System.String,System.Exception)">
            <summary>
            Creates a new exception to indicate Precondition error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Inner Exception.</param>
            <returns>A new exception to indicate a Precondition failed error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateBadRequestError(System.String)">
            <summary>
            Creates a new exception to indicate BadRequest error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a bad request error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateBadRequestError(System.String,System.Exception)">
            <summary>
            Creates a new exception to indicate BadRequest error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Inner Exception.</param>
            <returns>A new exception to indicate a bad request error.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateMethodNotAllowed(System.String,System.String)">
            <summary>Creates a new "Method Not Allowed" exception.</summary>
            <param name="message">Error message.</param>
            <param name="allow">String value for 'Allow' header in response.</param>
            <returns>A new exception to indicate the requested method is not allowed on the response.</returns>
        </member>
        <member name="M:System.Data.Services.DataServiceException.CreateMethodNotImplemented(System.String)">
            <summary>
            Creates a new exception to indicate MethodNotImplemented error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <returns>A new exception to indicate a MethodNotImplemented error.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceException.ErrorCode">
            <summary>Gets the error code.</summary>
            <returns>The integer value that represents the error code.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceException.MessageLanguage">
            <summary>Gets the error message language.</summary>
            <returns>The string value that represents the message language.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceException.StatusCode">
            <summary>Gets the HTTP status code returned by the exception.</summary>
            <returns>HTTP status code for the exception.</returns>
        </member>
        <member name="P:System.Data.Services.DataServiceException.ResponseAllowHeader">
            <summary>'Allow' response for header.</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceException.DataServiceExceptionSerializationState">
            <summary>
            Contains the state of the exception, used for serialization in security transparent code.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceException.DataServiceExceptionSerializationState.System#Runtime#Serialization#ISafeSerializationData#CompleteDeserialization(System.Object)">
            <summary>
            Called when deserialization of the exception is complete.
            </summary>
            <param name="deserialized">The deserialized exception.</param>
        </member>
        <member name="P:System.Data.Services.DataServiceException.DataServiceExceptionSerializationState.MessageLanguage">
            <summary>Gets or sets the language for the exception message.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceException.DataServiceExceptionSerializationState.ErrorCode">
            <summary>Gets or sets the error code to be used in payloads.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceException.DataServiceExceptionSerializationState.StatusCode">
            <summary>Gets or sets the HTTP response status code for this exception.</summary>
        </member>
        <member name="P:System.Data.Services.DataServiceException.DataServiceExceptionSerializationState.ResponseAllowHeader">
            <summary>Gets or sets the 'Allow' response for header.</summary>
        </member>
        <member name="T:System.Data.Services.DataServiceHost">
            <summary>
            This structure supports the .NET Framework infrastructure and is 
            not intended to be used directly from your code.
            </summary>
            <internal>
            Provides a host for services of type DataService.
            </internal>
        </member>
        <member name="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])">
            <summary>Instantiates <see cref="T:System.Data.Services.DataServiceHost" /> for WCF Data Services.</summary>
            <param name="serviceType">Identifies the WCF Data Services to the host.</param>
            <param name="baseAddresses">The URI of the host.</param>
        </member>
        <member name="T:System.Data.Services.DataServiceHostFactory">
            <summary>
            This structure supports the .NET Framework infrastructure and is 
            not intended to be used directly from your code.
            </summary>
            <internal>
            This class is used to hook up a WCF as a raw HTTP handler.
            </internal>
        </member>
        <member name="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
            <summary>Creates a new <see cref="T:System.Data.Services.DataServiceHost" /> from the URI.</summary>
            <returns>The new <see cref="T:System.Data.Services.DataServiceHost" />.</returns>
            <param name="serviceType">The type of WCF service to host.</param>
            <param name="baseAddresses">An array of base addresses for the service. </param>
        </member>
        <member name="T:System.Data.Services.DataServiceProcessingPipelineEventArgs">
            <summary>
            Event argument class for DataServiceProcessingPipeline events.
            </summary>
        </member>
        <member name="F:System.Data.Services.DataServiceProcessingPipelineEventArgs.operationContext">
            <summary>
            Context for the operation which the current event is fired for.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipelineEventArgs.#ctor(System.Data.Services.DataServiceOperationContext)">
            <summary>
            Constructs a new instance of DataServicePipelineEventArgs object
            </summary>
            <param name="operationContext">Context for the operation which the current event is fired for.</param>
        </member>
        <member name="P:System.Data.Services.DataServiceProcessingPipelineEventArgs.OperationContext">
            <summary>Gets the context of the operation that raised the event.</summary>
            <returns>A <see cref="T:System.Data.Services.DataServiceOperationContext" /> that is the operation context. </returns>
        </member>
        <member name="T:System.Data.Services.DataServiceProcessingPipeline">
            <summary>
            Class declaring the events for the data service processing pipeline
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertInitialDebugState">
            <summary>
            Assert ProcessingPipeline state before any event has been fired
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertAndUpdateDebugStateAtOnStartProcessingRequest">
            <summary>
            Assert ProcessingPipeline state at DataService&lt;T&gt;.OnStartProcessingRequest
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertAndUpdateDebugStateAtDispose">
            <summary>
            Assert ProcessingPipeline state before disposing provider interfaces
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertDebugStateDuringRequestProcessing(System.Data.Services.DataServiceOperationContext)">
            <summary>
            Assert Processing Pipeline state during request processing
            </summary>
            <param name="operationContext">data service operation context instance</param>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertDebugStateAtExecuteExpression(System.Data.Services.IDataService)">
            <summary>
            Assert Processing Pipeline state when IDataServiceExecutionProvider.Execute() is called.
            </summary>
            <param name="dataService">data service instance</param>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertAndUpdateDebugStateAtGetService">
            <summary>
            Assert Processing Pipeline state during request processing
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertAndUpdateDebugStateAtSaveChanges">
            <summary>
            Assert Processing Pipeline state at SaveChanges
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.AssertAndUpdateDebugStateAtInvokeServiceAction(System.Data.Services.IDataService)">
            <summary>
            Assert Processing Pipeline state at InvokeServiceAction
            </summary>
            <param name="dataService">data service instance</param>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.ResetDebugState">
            <summary>
            Need to be able to reset the states since the caller can reuse the same service instance.
            </summary>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.InvokeProcessingRequest(System.Object,System.Data.Services.DataServiceProcessingPipelineEventArgs)">
            <summary>
            Invoke request start event
            </summary>
            <param name="sender">Sender, i.e. data service instance.</param>
            <param name="e">event arg</param>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.InvokeProcessedRequest(System.Object,System.Data.Services.DataServiceProcessingPipelineEventArgs)">
            <summary>
            Invoke request end event
            </summary>
            <param name="sender">Sender, i.e. data service instance.</param>
            <param name="e">event arg</param>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.InvokeProcessingChangeset(System.Object,System.EventArgs)">
            <summary>
            Invoke change set start event
            </summary>
            <param name="sender">Sender, i.e. data service instance.</param>
            <param name="e">event arg</param>
        </member>
        <member name="M:System.Data.Services.DataServiceProcessingPipeline.InvokeProcessedChangeset(System.Object,System.EventArgs)">
            <summary>
            Invoke change set end event
            </summary>
            <param name="sender">Sender, i.e. data service instance.</param>
            <param name="e">event arg</param>
        </member>
        <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingRequest">
            <summary>
            Request start event
            </summary>
        </member>
        <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedRequest">
            <summary>
            Request end event
            </summary>
        </member>
        <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingChangeset">
            <summary>
            Change set start event
            </summary>
        </member>
        <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedChangeset">
            <summary>
            Change set end event
            </summary>
        </member>
        <member name="T:System.Data.Services.DelegateBodyWriter">
            <summary>Use this class to handle writing body contents using a callback.</summary>
        </member>
        <member name="F:System.Data.Services.DelegateBodyWriter.service">
            <summary>Service to dispose data source from once the response is written.</summary>
        </member>
        <member name="F:System.Data.Services.DelegateBodyWriter.writerAction">
            <summary>Callback.</summary>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.#ctor(System.Action{System.IO.Stream},System.Data.Services.IDataService)">
            <summary>Initializes a new <see cref="T:System.Data.Services.DelegateBodyWriter"/> instance.</summary>
            <param name="writer">Callback for writing.</param>
            <param name="service">Service to dispose data source from once the response is written.</param>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
            <summary>Called when the message body is written to an XML file.</summary>
            <param name="writer">
            An <see cref="T:System.Xml.XmlDictionaryWriter"/> that is used to write this 
            message body to an XML file.
            </param>
        </member>
        <member name="T:System.Data.Services.DelegateBodyWriter.XmlWriterStream">
            <summary>Use this class to write to an <see cref="T:System.Xml.XmlDictionaryWriter"/>.</summary>
        </member>
        <member name="F:System.Data.Services.DelegateBodyWriter.XmlWriterStream.innerWriter">
            <summary>Target writer.</summary>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.#ctor(System.Xml.XmlDictionaryWriter)">
            <summary>Initializes a new <see cref="T:System.Data.Services.DelegateBodyWriter.XmlWriterStream"/> instance.</summary>
            <param name="xmlWriter">Target writer.</param>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered 
            data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and 
            advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains 
            the specified byte array with the values between <paramref name="offset"/> 
            and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced 
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in <paramref name="buffer"/> at which to 
            begin storing the data read from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the position within the current stream.</summary>
            <param name="offset">
            A byte offset relative to the <paramref name="origin"/> parameter.
            </param>
            <param name="origin">
            A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference 
            point used to obtain the new position.
            </param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.SetLength(System.Int64)">
            <summary>Sets the length of the current stream.</summary>
            <param name="value">New value for length.</param>
        </member>
        <member name="M:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances 
            the current position within this stream by the number of 
            bytes written. 
            </summary>
            <param name="buffer">
            An array of bytes. This method copies <paramref name="count"/> 
            bytes from <paramref name="buffer"/> to the current stream.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin copying 
            bytes to the current stream.
            </param>
            <param name="count">
            The number of bytes to be written to the current stream.
            </param>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.CanRead">
            <summary>Gets a value indicating whether the current stream supports reading.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.CanSeek">
            <summary>Gets a value indicating whether the current stream supports seeking.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.CanWrite">
            <summary>Gets a value indicating whether the current stream supports writing.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Length">
            <summary>Gets the length in bytes of the stream.</summary>
        </member>
        <member name="P:System.Data.Services.DelegateBodyWriter.XmlWriterStream.Position">
            <summary>Gets or sets the position within the current stream.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.EpmAttributeNameBuilder">
            <summary>
            Build attribute names corresponding to ones in csdl file
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EpmAttributeNameBuilder.index">
            <summary>Current index</summary>
        </member>
        <member name="F:System.Data.Services.Providers.EpmAttributeNameBuilder.postFix">
            <summary>PostFix for current attribute names</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EpmAttributeNameBuilder.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EpmAttributeNameBuilder.MoveNext">
            <summary>Move to next attribute name generation</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmAttributeNameBuilder.EpmKeepInContent">
            <summary>KeepInContent</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmAttributeNameBuilder.EpmSourcePath">
            <summary>SourcePath</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmAttributeNameBuilder.EpmTargetPath">
            <summary>Target Path</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmAttributeNameBuilder.EpmContentKind">
            <summary>ContentKind</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmAttributeNameBuilder.EpmNsPrefix">
            <summary>Namespace Prefix</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmAttributeNameBuilder.EpmNsUri">
            <summary>Namespace Uri</summary>
        </member>
        <member name="T:System.Data.Services.Providers.EpmHelper">
            <summary>
            This class contains code for translating epm information stored in Metadata properties to objects of EpmPropertyInformation class
            !!! THIS CODE IS USED BY System.Data.Services.Providers.ObjectContextProvider *AND* System.Data.EntityModel.Emitters CLASSES !!!
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EpmHelper.GetEpmInformationFromProperty(System.Data.Metadata.Edm.EdmMember)">
            <summary>
            Gets EPM information for a property of a type
            </summary>
            <param name="edmMember">Member that could contain EPM information</param>
            <returns>IEnumerable of EPM information for the member, if any.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EpmHelper.GetEpmInformationFromType(System.Data.Metadata.Edm.StructuralType)">
            <summary>
            Gets EPM information for a type
            </summary>
            <param name="structuralType">Type that could contain EPM information</param>
            <returns>IEnumerable of EPM information for the type, if any.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EpmHelper.GetEpmPropertyInformation(System.Data.Metadata.Edm.MetadataItem,System.String,System.String)">
            <summary>
            Obtains the epm information for a single property by reading csdl content
            </summary>
            <param name="metadataItem">StructuralType or EdmMember to get EPM information for</param>
            <param name="typeName">Type for which we are reading the metadata properties</param>
            <param name="memberName">Member for which we are reading the metadata properties. Can be null if reading from a type instead of a member.</param>
            <returns>EpmPropertyInformation corresponding to read metadata properties</returns>
        </member>
        <member name="T:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation">
            <summary>
            Class for holding de-serialized Epm attribute from csdl file
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.IsAtom">
            <summary>Syndication mapping or custom mapping</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.KeepInContent">
            <summary>KeepInContent</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.SourcePath">
            <summary>SourcePath</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.PathGiven">
            <summary>Was path provided or inferred</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.TargetPath">
            <summary>TargetPath</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.SyndicationItem">
            <summary>Target syndication item when IsAtom is true</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.ContentKind">
            <summary>Target syndication item content kind when IsAtom is true</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.NsPrefix">
            <summary>Namespace prefix when IsAtom is false</summary>
        </member>
        <member name="P:System.Data.Services.Providers.EpmHelper.EpmPropertyInformation.NsUri">
            <summary>Namespace Uri when IsAtom is false</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EpmSourcePathSegment">
            <summary>
            Representation of each node in the <see cref="T:System.Data.Services.Serializers.EpmSourceTree"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmSourcePathSegment.propertyName">
            <summary>Name of the property under the parent resource type</summary>
            <remarks>This fields is used to diferentiate between some special node types as well.
            - null - this is the root node of the source tree.
            - "" (empty string) - this is a node representing a value of a primitive item in a collection property.
            - anything else - this is a node representing a property with the name of this field.</remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmSourcePathSegment.subProperties">
            <summary>List of sub-properties if this segment corresponds to a complex type</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourcePathSegment.#ctor">
            <summary>
            Constructor creates a root source path segment
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourcePathSegment.#ctor(System.String)">
            <summary>
            Constructor creates a source path segment with the name set to <paramref name="propertyName"/>
            </summary>
            <param name="propertyName">Segment property name</param>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmSourcePathSegment.PropertyName">
            <summary>Name of the property under the parent resource type</summary>
            <remarks>This property is used to diferentiate between some special node types as well.
            - null - this is the root node of the source tree.
            - "" (empty string) - this is a node representing a value of a primitive item in a collection property.
            - anything else - this is a node representing a property with the name of this property.
            These values should not be compared directly, instead use the IsCollectionItemValue property to differentiate between the last two.
            The root node itself should never be accessed directly so far.</remarks>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmSourcePathSegment.SubProperties">
            <summary>List of sub-properties if this segment corresponds to a complex type</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmSourcePathSegment.EpmInfo">
            <summary>Corresponding EntityPropertyMappingInfo</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EpmSourceTree">
            <summary>
            Tree representing the sourceName properties in all the EntityPropertyMappingAttributes for a resource type
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmSourceTree.root">
            <summary>Root of the tree</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmSourceTree.epmTargetTree">
            <summary><see cref="T:System.Data.Services.Serializers.EpmTargetTree"/> corresponding to this tree</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourceTree.#ctor(System.Data.Services.Serializers.EpmTargetTree)">
            <summary>Default constructor creates a null root</summary>
            <param name="epmTargetTree">Target xml tree</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourceTree.Add(System.Data.Services.Serializers.EntityPropertyMappingInfo,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty})">
            <summary>
            Adds a path to the source and target tree which is obtained by looking at the EntityPropertyMappingAttribute in the <paramref name="epmInfo"/>
            </summary>
            <param name="epmInfo">EnitityPropertyMappingInfo holding the source path</param>
            <param name="declaredProperties">the declared properties for the currentType</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourceTree.Validate(System.Data.Services.Providers.ResourceType,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty})">
            <summary>Validates the source tree.</summary>
            <param name="resourceType">The resource type for which the validation is performed.</param>
            <param name="declaredProperties">The declaredProperties of the declaredPropertiesResourceType.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourceTree.Validate(System.Data.Services.Serializers.EpmSourcePathSegment,System.Data.Services.Providers.ResourceType,System.Collections.Generic.Dictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty}})">
            <summary>Validates the specified segment and all its subsegments.</summary>
            <param name="pathSegment">The path segment to validate.</param>
            <param name="resourceType">The resource type of the property represented by this segment (null for open properties).</param>
            <param name="declaredPropertiesLookup">The dictionary to lookup and add declaredProperties associated with resourceTypes.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourceTree.GetDeclaredProperties(System.Data.Services.Providers.ResourceType,System.Collections.Generic.Dictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty}})">
            <summary>
            Looks up the declaredProperties in the dictionary, or gets them and adds to the dictionary
            </summary>
            <param name="resourceType">The resource type to look for the properties on.</param>
            <param name="declaredPropertiesLookup">The dictionary of declaredProperties.</param>
            <returns>The declaredProperties to use for the given resourcType.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmSourceTree.GetPropertyType(System.Data.Services.Providers.ResourceType,System.String,System.Collections.Generic.Dictionary{System.Data.Services.Providers.ResourceType,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty}})">
            <summary>
            Returns a resource type of the property on the specified resource type.
            </summary>
            <param name="resourceType">The resource type to look for the property on.</param>
            <param name="propertyName">The name of the property to look for.</param>
            <param name="declaredPropertiesLookup">The dictionary of resourceTypes to declaredProperties.</param>
            <returns>The type of the property specified. Note that for collection properties this returns the type of the item of the collection property.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmSourceTree.Root">
            <summary>
            Root of the tree
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EpmTargetPathSegment">
            <summary>
            Representation of each node in the <see cref="T:System.Data.Services.Serializers.EpmTargetTree"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmTargetPathSegment.segmentName">
            <summary>Name of the xml element/attribute</summary>
            <remarks>This field is used to differentiate between special nodes as well.
            - null - this is the root of the target tree.
            - anything else (doesn't start with @) - this node represents an element with the specified name.
            - anything else (starts with @) - this node represents an attribute with the specified name.</remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmTargetPathSegment.segmentNamespaceUri">
            <summary>URI of the namespace to which the <see cref="F:System.Data.Services.Serializers.EpmTargetPathSegment.segmentName"/> belongs</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmTargetPathSegment.subSegments">
            <summary>If this is a non-leaf element, the child elements/attributes collection</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmTargetPathSegment.parentSegment">
            <summary>Parent element of this element/attribute</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetPathSegment.#ctor">
            <summary>
            Constructor initializes the list of sub-nodes to be empty, used for creating root nodes
            in the <see cref="T:System.Data.Services.Serializers.EpmTargetTree"/>
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetPathSegment.#ctor(System.String,System.String,System.Data.Services.Serializers.EpmTargetPathSegment)">
            <summary>Used for creating non-root nodes in the syndication/custom trees</summary>
            <param name="segmentName">Name of xml element/attribute</param>
            <param name="segmentNamespaceUri">URI of the namespace for <paramref name="segmentName"/></param>
            <param name="parentSegment">Reference to the parent node if this is a sub-node, useful for traversals in visitors</param>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.SegmentName">
            <summary>Name of the xml element/attribute</summary>
            <remarks>This property is used to differentiate between special nodes as well.
            - null - this is the root of the target tree.
            - anything else (doesn't start with @) - this node represents an element with the specified name.
            - anything else (starts with @) - this node represents an attribute with the specified name.
            The value of the proeprty should not be compared directly to differentiate between these cases, instead
            properties IsAttribute and IsElementContentSegment should be used. The root not should not be accessed directly
            from anywhere so far.</remarks>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.AttributeName">
            <summary>
            Retruns name of the attribute the property is mapped to. Must not be called if a property is mapped to an element.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.SegmentNamespaceUri">
            <summary>URI of the namespace to which the <see cref="F:System.Data.Services.Serializers.EpmTargetPathSegment.segmentName"/> belongs</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.EpmInfo">
            <summary>EntityPropertyMappingInfo corresponding to current segement</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.HasContent">
            <summary>Whether this node corresponds to ResourceType or ClientType property values</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.IsAttribute">
            <summary>Does this node correspond to xml attribute</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.ParentSegment">
            <summary>Parent node in the tree (always an element if present)</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetPathSegment.SubSegments">
            <summary>Sub-nodes of this node. Only exist if current node is an element node</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EpmTargetTree">
            <summary>
            Tree representing the targetName properties in all the EntityPropertyMappingAttributes for a resource type
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EpmTargetTree.countOfNonContentV2mappings">
            <summary>Number of properties that have V2 mapping with KeepInContent false</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetTree.#ctor">
            <summary>Initializes the sub-trees for syndication and non-syndication content</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetTree.Add(System.Data.Services.Serializers.EntityPropertyMappingInfo)">
            <summary>
            Adds a path to the tree which is obtained by looking at the EntityPropertyMappingAttribute in the <paramref name="epmInfo"/>
            </summary>
            <param name="epmInfo">EnitityPropertyMappingInfo holding the target path</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetTree.Remove(System.Data.Services.Serializers.EntityPropertyMappingInfo)">
            <summary>
            Removes a path in the tree which is obtained by looking at the EntityPropertyMappingAttribute in the <paramref name="epmInfo"/>
            </summary>
            <param name="epmInfo">EnitityPropertyMappingInfo holding the target path</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetTree.Validate">
            <summary>Validates the target tree.</summary>
            <remarks>This also cleans up the tree if necessary.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetTree.HasMixedContent(System.Data.Services.Serializers.EpmTargetPathSegment,System.Boolean)">
            <summary>Checks if mappings could potentially result in mixed content and dis-allows it.</summary>
            <param name="currentSegment">Segment being processed.</param>
            <param name="ancestorHasContent">Does any of the ancestors have content.</param>
            <returns>boolean indicating if the tree is valid or not.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EpmTargetTree.GetPropertyNameFromEpmInfo(System.Data.Services.Serializers.EntityPropertyMappingInfo)">
            <summary>
            Given an <see cref="T:System.Data.Services.Serializers.EntityPropertyMappingInfo"/> gives the correct target path for it
            </summary>
            <param name="epmInfo">Given <see cref="T:System.Data.Services.Serializers.EntityPropertyMappingInfo"/></param>
            <returns>String with the correct value for the target path</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetTree.SyndicationRoot">
            <summary>Root of the sub-tree for syndication content</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetTree.NonSyndicationRoot">
            <summary>Root of the sub-tree for custom content</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EpmTargetTree.MinimumDataServiceProtocolVersion">
            <summary>
            Minimum DSPV required to serialize this target tree.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.EpmTranslate">
            <summary>
            Helper class for translating Epm enum values to strings and strings to Epm enum values.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.EpmTranslate.syndicationItemToTargetPath">
            <summary>SyndicationItemProperty enum to FC_TargetPath mapping.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.EpmTranslate.targetPathToSyndicationItem">
            <summary>FC_TargetPath to SyndicationItemProperty enum mapping.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EpmTranslate.#cctor">
            <summary>Initialize mappings</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EpmTranslate.MapSyndicationPropertyToEpmTargetPath(System.Data.Services.Common.SyndicationItemProperty)">
            <summary>
            Translates syndication item property to string
            </summary>
            <param name="property">Syndication property to translate</param>
            <returns>TargetPath corresponding to SyndicationItemProperty</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EpmTranslate.MapEpmTargetPathToSyndicationProperty(System.String)">
            <summary>
            Given a <paramref name="targetPath"/> gets the corresponding syndication property.
            </summary>
            <param name="targetPath">Target path in the form of syndication property name</param>
            <returns>
            Enumerated value of a SyndicationItemProperty or SyndicationItemProperty.CustomProperty if the <paramref name="targetPath"/>
            does not map to any syndication property name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.EpmTranslate.MapSyndicationTextContentKindToEpmContentKind(System.Data.Services.Common.SyndicationTextContentKind)">
            <summary>
            Translates content kind to string for csdl
            </summary>
            <param name="contentKind">ContentKind</param>
            <returns>String corresponding to contentKind</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EpmTranslate.MapEpmContentKindToSyndicationTextContentKind(System.String,System.String,System.String)">
            <summary>
            Given the string representation in <paramref name="strContentKind"/> gets back the corresponding enumerated value
            </summary>
            <param name="strContentKind">String representation of syndication content kind e.g. plaintext, html or xhtml</param>
            <param name="typeName">Type to which the property belongs</param>
            <param name="memberName">Name of the member whose extended properties we are searching from</param>
            <returns>Enumerated value of SyndicationTextContentKind</returns>
        </member>
        <member name="T:System.Data.Services.ETagAttribute">
            <summary>Attribute to be annotated on types with ETags.</summary>
        </member>
        <member name="F:System.Data.Services.ETagAttribute.propertyNames">
            <summary>Name of the properties that form the ETag.</summary>
        </member>
        <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.ETagAttribute" /> class. </summary>
            <param name="propertyName">The string value containing properties used in eTag value.</param>
        </member>
        <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String[])">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.ETagAttribute" /> class.</summary>
            <param name="propertyNames">String values containing properties used in eTag value.</param>
        </member>
        <member name="P:System.Data.Services.ETagAttribute.PropertyNames">
            <summary>Gets the names of properties used in the <see cref="T:System.Data.Services.ETagAttribute" />.</summary>
            <returns>String collection containing property names.</returns>
        </member>
        <member name="T:System.Data.Services.Error">
            <summary>
            Strongly-typed and parameterized exception factory.
            </summary>
            <summary>
               Strongly-typed and parameterized exception factory.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.HttpHeaderFailure(System.Int32,System.String)">
            <summary>
            create and trace a HttpHeaderFailure
            </summary>
            <param name="errorCode">error code</param>
            <param name="message">error message</param>
            <returns>DataServiceException</returns>
        </member>
        <member name="M:System.Data.Services.Error.Trace``1(``0)">
            <summary>
            Trace the exception
            </summary>
            <typeparam name="T">type of the exception</typeparam>
            <param name="exception">exception object to trace</param>
            <returns>the exception parameter</returns>
        </member>
        <member name="M:System.Data.Services.Error.ArgumentNull(System.String)">
            <summary>
            The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.ArgumentOutOfRange(System.String)">
            <summary>
            The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.NotImplemented">
            <summary>
            The exception that is thrown when the author has yet to implement the logic at this point in the program. This can act as an exception based TODO tag.
            </summary>
        </member>
        <member name="M:System.Data.Services.Error.NotSupported">
            <summary>
            The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality. 
            </summary>
        </member>
        <member name="T:System.Data.Services.ErrorHandler">
            <summary>
            Provides support for orchestrating error handling at different points in the processing cycle and for
            serializing structured errors.
            </summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.MaxInnerErrorDepth">
            <summary>The maximum number of nested inner errors to write.</summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.exceptionArgs">
            <summary>Arguments for the exception being handled.</summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.responseVersion">
            <summary>Response version.</summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.contentTypeWithCharset">
            <summary>Content type and charset to use when writing the error.</summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.contentType">
            <summary>Content type to use when writing the error.</summary>
        </member>
        <member name="F:System.Data.Services.ErrorHandler.encoding">
            <summary>Encoding to use when writing the error.</summary>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.#ctor(System.Exception,System.Boolean,System.Version,System.String,System.String)">
            <summary>
            Prevents a default instance of the <see cref="T:System.Data.Services.ErrorHandler"/> class from being created.
            </summary>
            <param name="exception">The exception to be written.</param>
            <param name="verbose">if set to <c>true</c> indicates verbose errors should be written.</param>
            <param name="responseVersion">The response version.</param>
            <param name="acceptableContentTypes">The acceptable content types.</param>
            <param name="requestAcceptCharsetHeader">The request accept charset header.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleBatchOperationError(System.Data.Services.IDataService,System.Data.Services.AstoriaRequestMessage,Microsoft.Data.OData.IODataResponseMessage,System.Exception,Microsoft.Data.OData.ODataBatchWriter,System.IO.Stream,System.Version)">
            <summary>Handles an exception when processing a batch response.</summary>
            <param name='service'>Data service doing the processing.</param>
            <param name="requestMessage">requestMessage holding information about the request that caused an error</param>
            <param name="responseMessage">responseMessage to which we need to write the exception message</param>
            <param name='exception'>Exception thrown.</param>
            <param name='batchWriter'>Output writer for the batch.</param>
            <param name="responseStream">Underlying response stream.</param>
            <param name="defaultResponseVersion">The data service version to use for response, if it cannot be computed from the requestMessage.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleBatchInStreamError(System.Data.Services.IDataService,System.Exception,Microsoft.Data.OData.ODataBatchWriter,System.IO.Stream)">
            <summary>Handles an exception when processing a batch request.</summary>
            <param name='service'>Data service doing the processing.</param>
            <param name='exception'>Exception thrown.</param>
            <param name='batchWriter'>Output writer for the batch.</param>
            <param name="responseStream">Underlying response stream.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleBeforeWritingException(System.Exception,System.Data.Services.IDataService)">
            <summary>Handles an exception before the response has been written out.</summary>
            <param name='exception'>Exception thrown.</param>
            <param name='service'>Data service doing the processing.</param>
            <returns>An action that can serialize the exception into a stream.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleExceptionWhileWriting(System.Data.Services.IDataService,System.Exception,Microsoft.Data.OData.IODataResponseMessage,Microsoft.Data.OData.ODataMessageWriter,System.Text.Encoding,System.IO.Stream,System.Data.Services.MessageWriterBuilder)">
            <summary>
            Handles an exception that occurred while writing a response.
            </summary>
            <param name="service">Data service doing the processing.</param>
            <param name="exception">The exception that was thrown.</param>
            <param name="responseMessage">The response message.</param>
            <param name="messageWriter">The message writer, if null this will fall back to writing a raw XML error to the stream.</param>
            <param name="encoding">The encoding to while writing the error.</param>
            <param name="responseStream">The response stream to write the error to.</param>
            <param name="messageWriterBuilder">MessageWriterBuilder to use in case a new ODataMessageWriter needs to be constructed.</param>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.HandleTargetInvocationException(System.Reflection.TargetInvocationException)">
            <summary>Handles the specified <paramref name='exception'/>.</summary>
            <param name='exception'>Exception to handle</param>
            <remarks>The caller should re-throw the original exception if this method returns normally.</remarks>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.ProcessBenignException(System.Exception,System.Data.Services.IDataService)">
            <summary>
            Check to see if the given excpetion is a benign one such as statusCode = 304.  If yes we return an action that can
            serialize the exception into a stream.  Other wise we return null.
            </summary>
            <param name="exception">Exception to be processed</param>
            <param name="service">Data service instance</param>
            <returns>An action that can serialize the exception into a stream.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.GetErrorResponseContentType(System.String,System.Version)">
            <summary>
            Gets the content type for error serialization based on the accept header and version.
            </summary>
            <param name="requestAcceptHeader">The accept header value.</param>
            <param name="responseVersion">The response version.</param>
            <returns>The content type to use for the error response.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.GetEncodingForError(System.String)">
            <summary>
            Gets the encoding for error serialization based on the accept charset header.
            </summary>
            <param name="requestAcceptCharsetHeader">The request accept charset header.</param>
            <returns>The encoding to use.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.CreateHandler(System.Data.Services.IDataService,System.Data.Services.AstoriaRequestMessage,System.Exception,System.Version)">
            <summary>
            Creates an error handler for the given exception.
            </summary>
            <param name="service">The service.</param>
            <param name="requestMessage">The request message.</param>
            <param name="exception">The exception.</param>
            <param name="defaultResponseVersion">The default/minimum response version.</param>
            <returns>The newly created error handler.</returns>
        </member>
        <member name="M:System.Data.Services.ErrorHandler.WriteErrorWithFallbackForXml(Microsoft.Data.OData.ODataMessageWriter,System.Text.Encoding,System.IO.Stream,System.Data.Services.HandleExceptionArgs,Microsoft.Data.OData.ODataError,System.Data.Services.MessageWriterBuilder)">
            <summary>
            Writes the error with fallback logic for XML cases where the writer is in an error state and a new writer must be created.
            </summary>
            <param name="messageWriter">The message writer.</param>
            <param name="encoding">The encoding to use for the error if we have to fallback.</param>
            <param name="responseStream">The response stream to write to in the fallback case.</param>
            <param name="args">The args for the error.</param>
            <param name="error">The error to write.</param>
            <param name="messageWriterBuilder">MessageWriterBuilder to use if a new ODataMessageWriter needs to be constructed.</param>
        </member>
        <member name="T:System.Data.Services.ExpandSegment">
            <summary>
            Provides a description of a segment in an $expand query option for a WCF Data Service.
            </summary>
            <remarks>
            INTERNAL
            Expand providers may replace segments to indicate a different expansion shape. However, they are
            unable to set the MaxResultsExpected. The value for the instances created by external providers
            will always be Int32.MaxValue, but the value enforced by the serializers will be the one declared
            by the data service in the configuration.
            
            When the configuration supports a more granular value, we should overload the constructor to make
            the MaxResultsExpected property settable as well. 
            </remarks>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.container">
            <summary>Container to which the segment belongs; possibly null.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.filter">
            <summary>Filter expression for this segment on an $expand path.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.name">
            <summary>Name for this segment on an $expand path.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.expandedProperty">
            <summary>Property being expanded.</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.maxResultsExpected">
            <summary>
            The maximum number of results expected for this property; Int32.MaxValue if no limit is expected.
            </summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.orderingInfo">
            <summary>Collection of ordering information for this segment, used for paging</summary>
        </member>
        <member name="F:System.Data.Services.ExpandSegment.targetResourceType">
            <summary>Target resource type of the segment.</summary>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)">
            <summary>Initializes an <see cref="T:System.Data.Services.ExpandSegment" /> object with the specified property name and a filtering expression, possibly null.</summary>
            <param name="name">The name of the segment to be expanded.</param>
            <param name="filter">The filter option in the query to which the expand segment applies.</param>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression,System.Int32,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.OrderingInfo)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ExpandSegment"/> instance.</summary>
            <param name="name">Segment name.</param>
            <param name="filter">Filter expression for segment, possibly null.</param>
            <param name="maxResultsExpected">
            Expand providers may choose to return at most MaxResultsExpected + 1 elements to allow the
            data service to detect a failure to meet this constraint.
            </param>
            <param name="container">Container to which the segment belongs; possibly null.</param>
            <param name="targetResourceType">Target resource type on which the expansion needs to happen.</param>
            <param name="expandedProperty">Property expanded by this expand segment</param>
            <param name="orderingInfo">Collection of ordering information for this segment, used for paging</param>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})">
            <summary>A Boolean value that indicates whether any segments in the specified <paramref name="path"/> have a filter.</summary>
            <returns>True if any of the segments in the path has a filter; false otherwise.</returns>
            <param name="path">The enumeration of segments to check for filters.</param>
        </member>
        <member name="M:System.Data.Services.ExpandSegment.CheckFilterType(System.Linq.Expressions.Expression)">
            <summary>Checks that the specified filter is of the right type.</summary>
            <param name="filter">Filter to check.</param>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.Filter">
            <summary>The filter option in the query to which the expand segment applies.</summary>
            <returns>An expression that specifies the filter on target data.</returns>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.HasFilter">
            <summary>A Boolean value that indicates whether the expand statement is used with a filter expression.</summary>
            <returns>True or false.</returns>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.MaxResultsExpected">
            <summary>Gets the maximum number of results expected.</summary>
            <returns>The integer value that indicates maximum number of results.</returns>
            <remarks>
            Expand providers may choose to return at most MaxResultsExpected + 1 elements to allow the
            data service to detect a failure to meet this constraint.
            </remarks>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.Name">
            <summary>The name of the property to be expanded.</summary>
            <returns>A string value containing the name of the property.</returns>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.ExpandedProperty">
            <summary>Gets the property to be expanded.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.OrderingInfo">
            <summary>Collection of ordering information for this segment, used for paging</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.Container">
            <summary>Gets the container to which this segment belongs; possibly null.</summary>
        </member>
        <member name="P:System.Data.Services.ExpandSegment.TargetResourceType">
            <summary>The resource type for which <see cref="P:System.Data.Services.ExpandSegment.ExpandedProperty"/> needs to be projected.</summary>
            <remarks>Making this internal since we do not want to support this feature on IExpandProvider
            which is sort of deprecated.</remarks>
        </member>
        <member name="T:System.Data.Services.ExpandSegmentCollection">
            <summary>
            Provides a description of a path in an $expand query option
            for a WCF Data Service.
            </summary>
        </member>
        <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor">
            <summary>Creates a collection of expand segments for a query.</summary>
        </member>
        <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)">
            <summary>Initializes a new collection of expand segments that is empty and has the specified initial capacity.</summary>
            <param name="capacity">The number of expand segments that the new collection can initially store.</param>
        </member>
        <member name="P:System.Data.Services.ExpandSegmentCollection.HasFilter">
            <summary>Boolean value that indicates whether segments to be expanded include a filter clause.</summary>
            <returns>Boolean value that indicates whether segments to be expanded include a filter clause. </returns>
        </member>
        <member name="T:System.Data.Services.HandleExceptionArgs">
            <summary>Use this class to customize how exceptions are handled.</summary>
        </member>
        <member name="M:System.Data.Services.HandleExceptionArgs.#ctor(System.Exception,System.Boolean,System.String,System.Boolean)">
            <summary>Initalizes a new <see cref="T:System.Data.Services.HandleExceptionArgs"/> instance.</summary>
            <param name="exception">The <see cref="P:System.Data.Services.HandleExceptionArgs.Exception"/> being handled.</param>
            <param name="responseWritten">Whether the response has already been written out.</param>
            <param name="contentType">The MIME type used to write the response.</param>
            <param name="verboseResponse">Whether a verbose response is appropriate.</param>
        </member>
        <member name="M:System.Data.Services.HandleExceptionArgs.CreateODataError">
            <summary>Creates an ODataError instance describing the error.</summary>
            <returns>A new ODataError instance describing the error.</returns>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.Exception">
            <summary>Gets or sets the exception that will be processed and returned in the response.</summary>
            <returns>The exception that will be processed and returned in the response.</returns>
            <remarks>This property may be null.</remarks>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseContentType">
            <summary>Gets the response content type.</summary>
            <returns>The string value that indicates the response format.</returns>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseWritten">
            <summary>Gets a value indicating whether the response has been written. </summary>
            <returns>Boolean value that indicates whether response has been written.</returns>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors">
            <summary>Gets or sets a Boolean value that indicates whether verbose errors will be returned.</summary>
            <returns>The Boolean value that indicates whether verbose errors will be returned.</returns>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode">
            <summary>Gets the status code that will be sent back in the HTTP header section of the response when an error occurs on the data service.</summary>
            <returns>An integer value of the HTTP response status code. </returns>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.CustomAnnotations">
            <summary>
            Collection of custom values that will be written in the error payload as instance annotations.
            </summary>
            <remarks>
            These values will only be serialized in JSON.
            </remarks>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.InstanceAnnotations">
            <summary>
            Collection of custom values that will be written in the error payload as instance annotations.
            </summary>
            <remarks>
            These values will only be serialized in JSON and if any instance annotation is added to the InstanceAnnotations collection,
            the CustomAnnotations property is ignored during serialization, 
            </remarks>
        </member>
        <member name="P:System.Data.Services.HandleExceptionArgs.ResponseAllowHeader">
            <summary>The value for the 'Allow' response header.</summary>
        </member>
        <member name="T:System.Data.Services.HttpContextServiceHost">
            <summary>
            Provides access to the environment for a DataService, including information about the current request, based
            on the current WebOperationContext.
            </summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.incomingMessageBody">
            <summary>Message sent to server.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.operationContext">
            <summary>The WCF-based operation context.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.errorFound">
            <summary>Whether an error was found when processing this request.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.absoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="F:System.Data.Services.HttpContextServiceHost.absoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new System.Data.Services.HttpContextServiceHost instance.
            </summary>
            <param name='messageBody'>Incoming message body to process.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#GetQueryStringItem(System.String)">
            <summary>Gets the value for the specified item in the request query string.</summary>
            <param name="item">Item to return.</param>
            <returns>
            The value for the specified item in the request query string;
            null if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>
            Method to handle a data service exception during processing.
            </summary>
            <param name="args">Exception handling description.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.GetQueryStringItem(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the value of a given item from the query string item collection.
            </summary>
            <param name="item">Name of the item to get from the query string.</param>
            <param name="collection">Collection of query string item/value pairs.</param>
            <returns>Value of the query item, or null if it is not present.</returns>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.VerifyQueryParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifies that all query parameters are valid.
            </summary>
            <param name="collection">Collection of query string item/value pairs.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.VerifyQueryParameters">
            <summary>Verifies that query parameters are valid.</summary>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.MustNotReturnMessageBody(System.Net.HttpStatusCode)">
            <summary>
            Check to see if the given status code expects an empty message-body.
            </summary>
            <param name="statusCode">Http status code</param>
            <returns>True if the message-body must be empty for the given status code, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.UpdateHeaderOrRemoveHeaderIfNull(System.Net.WebHeaderCollection,System.Net.HttpResponseHeader,System.String)">
            <summary>
            Updates the header remove header if null.
            </summary>
            <param name="headerCollection">The header collection.</param>
            <param name="responseHeader">The response header.</param>
            <param name="headerValue">The header value.</param>
        </member>
        <member name="M:System.Data.Services.HttpContextServiceHost.UpdateHeaderOrRemoveHeaderIfNull(System.Net.WebHeaderCollection,System.String,System.String)">
            <summary>
            Updates the header remove header if null.
            </summary>
            <param name="headerCollection">The header collection.</param>
            <param name="responseHeader">The response header.</param>
            <param name="headerValue">The header value.</param>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestAcceptCharSet">
            <summary>
            Gets the character set encoding that the client requested,
            possibly null.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseContentType">
            <summary>Gets or sets the HTTP MIME type of the output stream.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestContentType">
            <summary>Gets the HTTP MIME type of the input stream.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestAccept">
            <summary>
            Gets a comma-separated list of client-supported MIME Accept types.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestHttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestIfMatch">
            <summary>Gets the value of the If-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestIfNoneMatch">
            <summary>Gets the value of the If-None-Match header from the request made</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestMaxVersion">
            <summary>Gets the value for the MaxDataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestVersion">
            <summary>Gets the value for the DataServiceVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#AbsoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseCacheControl">
            <summary>Gets or sets the Cache-Control header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseETag">
            <summary>Gets/Sets the value of the ETag header on the outgoing response</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseLocation">
            <summary>Gets or sets the Location header on the response.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseStatusCode">
            <summary>
            Gets/Sets the status code for the request made.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> to be written to send a response
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#ResponseVersion">
            <summary>Gets or sets the value for the DataServiceVersion response header.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost#RequestStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> from which the request data can be read from
            to the client.
            </summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost2#RequestHeaders">
            <summary>Dictionary of all request headers from the host.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.System#Data#Services#IDataServiceHost2#ResponseHeaders">
            <summary>Enumerates all response headers that has been set.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.ErrorFound">
            <summary>Whether an error was found when processing this request.</summary>
        </member>
        <member name="P:System.Data.Services.HttpContextServiceHost.HostHeader">
            <summary>The value for the RequestMessage header in the request, possibly null.</summary>
        </member>
        <member name="T:System.Data.Services.ContentTypeUtil">
            <summary>Provides helper methods for processing HTTP requests.</summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.EncodingUtf8NoPreamble">
            <summary>UTF-8 encoding, without the BOM preamble.</summary>
            <remarks>
            While a BOM preamble on UTF8 is generally benign, it seems that some MIME handlers under IE6 will not 
            process the payload correctly when included.
            
            Because the data service should include the encoding as part of the Content-Type in the response,
            there should be no ambiguity as to what encoding is being used.
            
            For further information, see http://www.unicode.org/faq/utf_bom.html#BOM.
            </remarks>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaTypesForEntityOrFeedV2">
            <summary>
            Allowable Media Types for an Entity or Feed in V2.
            </summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaTypesForOtherV2">
            <summary>
            Allowable Media Types for something besides an Entity or Feed in V2.
            </summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaTypesForEntityOrFeedV3">
            <summary>
            Allowable Media Types for Entities or Feeds in V3.
            </summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaTypesForOtherV3">
            <summary>
            Allowable Media Types for something other than Entities or Feeds in V3.
            </summary>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.SelectMimeType(System.String,System.String[])">
            <summary>Selects an acceptable MIME type that satisfies the Accepts header.</summary>
            <param name="acceptTypesText">Text for Accepts header.</param>
            <param name="availableTypes">
            Types that the server is willing to return, in descending order 
            of preference.
            </param>
            <returns>The best MIME type for the client</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.SelectRequiredMimeType(System.String,System.String[],System.String)">
            <summary>Gets the appropriate MIME type for the request, throwing if there is none.</summary>
            <param name='acceptTypesText'>Text as it appears in an HTTP Accepts header.</param>
            <param name='exactContentType'>Preferred content type to match if an exact media type is given - this is in descending order of preference.</param>
            <param name='inexactContentType'>Preferred fallback content type for inexact matches.</param>
            <returns>One of exactContentType or inexactContentType.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.EncodingFromAcceptCharset(System.String)">
            <summary>Gets the best encoding available for the specified charset request.</summary>
            <param name="acceptCharset">
            The Accept-Charset header value (eg: "iso-8859-5, unicode-1-1;q=0.8").
            </param>
            <returns>An Encoding object appropriate to the specifed charset request.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.SelectResponseMediaType(System.String,System.Boolean,System.Version)">
            <summary>
            Selects a response format for the requestMessage's request and sets the appropriate response header.
            </summary>
            <param name="acceptTypesText">A comma-delimited list of client-supported MIME accept types.</param>
            <param name="entityTarget">Whether the target is an entity.</param>
            <param name="effectiveMaxResponseVersion">The effective max response version.</param>
            <returns>The selected media type.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.CompareMimeType(System.String,System.String)">
            <summary>
            Does a ordinal ignore case comparision of the given mime types.
            </summary>
            <param name="mimeType1">mime type1.</param>
            <param name="mimeType2">mime type2.</param>
            <returns>returns true if the mime type are the same.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.IsResponseMediaTypeJsonLight(System.String,System.Boolean,System.Version)">
            <summary>
            Determines whether the response media type would be JSON light for the given accept-header text.
            </summary>
            <param name="acceptTypesText">The text from the request's accept header.</param>
            <param name="entityTarget">Whether the target is an entity.</param>
            <param name="effectiveMaxResponseVersion">The effective max response version.</param>
            <returns>True if the response type is Json Light.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.IsResponseMediaTypeJsonLight(System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Determines whether the response media type would be JSON light for the request.
            </summary>
            <param name="dataService">The data service instance to determine the response media type.</param>
            <param name="isEntryOrFeed">true if the target of the request is an entry or a feed, false otherwise.</param>
            <returns>true if the response type is Json Light; false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.IsNotJson(System.String)">
            <summary>
            Determines whether the response content type is a JSON-based format.
            </summary>
            <param name="responseContentType">The response content-type.</param>
            <returns>
              <c>true</c> if the content-type is JSON; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadContentType(System.String,System.String@,System.Text.Encoding@)">
            <summary>Reads a Content-Type header and extracts the MIME type/subtype and encoding.</summary>
            <param name="contentType">The Content-Type header.</param>
            <param name="mime">The MIME type in standard type/subtype form, without parameters.</param>
            <param name="encoding">Encoding (possibly null).</param>
            <returns>parameters of content type</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.EncodingFromName(System.String)">
            <summary>Gets the named encoding if specified.</summary>
            <param name="name">Name (possibly null or empty).</param>
            <returns>
            The named encoding if specified; the encoding for HTTP missing 
            charset specification otherwise.
            </returns>
            <remarks>
            See http://tools.ietf.org/html/rfc2616#section-3.4.1 for details.
            </remarks>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.CreateParsingException(System.String)">
            <summary>Creates a new exception for parsing errors.</summary>
            <param name="message">Message for error.</param>
            <returns>A new exception that can be thrown for a parsing error.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.GetAvailableMediaTypes(System.Version,System.Boolean)">
            <summary>
            Returns the list of available media types.
            </summary>
            <param name="effectiveMaxResponseVersion">The effective max response version of the request.</param>
            <param name="isEntityOrFeed">true if the response will contain an entity or feed.</param>
            <returns>A list of recognized media types.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.IsHttpElementSeparator(System.Char)">
            <summary>
            Verfies whether the specified character is a valid separator in
            an HTTP header list of element.
            </summary>
            <param name="c">Character to verify.</param>
            <returns>true if c is a valid character for separating elements; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadLiteral(System.String,System.Int32,System.String)">
            <summary>
            "Reads" a literal from the specified string by verifying that
            the exact text can be found at the specified position.
            </summary>
            <param name="text">Text within which a literal should be checked.</param>
            <param name="textIndex">Index in text where the literal should be found.</param>
            <param name="literal">Literal to check at the specified position.</param>
            <returns>true if the end of string is found; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.DigitToInt32(System.Char)">
            <summary>
            Converts the specified character from the ASCII range to a digit.
            </summary>
            <param name="c">Character to convert.</param>
            <returns>
            The Int32 value for c, or -1 if it is an element separator.
            </returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MimeTypesFromAcceptHeader(System.String)">
            <summary>Returns all MIME types from the specified (non-blank) <paramref name='text' />.</summary>
            <param name='text'>Non-blank text, as it appears on an HTTP Accepts header.</param>
            <returns>An enumerable object with media type descriptions.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadQualityValue(System.String,System.Int32@,System.Int32@)">
            <summary>
            Reads the numeric part of a quality value substring, normalizing it to 0-1000
            rather than the standard 0.000-1.000 ranges.
            </summary>
            <param name="text">Text to read qvalue from.</param>
            <param name="textIndex">Index into text where the qvalue starts.</param>
            <param name="qualityValue">After the method executes, the normalized qvalue.</param>
            <remarks>
            For more information, see RFC 2616.3.8.
            </remarks>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.AcceptCharsetParts(System.String)">
            <summary>
            Enumerates each charset part in the specified Accept-Charset header.
            </summary>
            <param name="headerValue">Non-null and non-empty header value for Accept-Charset.</param>
            <returns>
            A (non-sorted) enumeration of CharsetPart elements, which include
            a charset name and a quality (preference) value, normalized to 0-1000.
            </returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadMediaTypeAndSubtype(System.String,System.Int32@,System.String@,System.String@)">
            <summary>Reads the type and subtype specifications for a MIME type.</summary>
            <param name='text'>Text in which specification exists.</param>
            <param name='textIndex'>Pointer into text.</param>
            <param name='type'>Type of media found.</param>
            <param name='subType'>Subtype of media found.</param>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadMediaType(System.String)">
            <summary>Reads a media type definition as used in a Content-Type header.</summary>
            <param name="text">Text to read.</param>
            <returns>The <see cref="T:System.Data.Services.ContentTypeUtil.MediaType"/> defined by the specified <paramref name="text"/></returns>
            <remarks>All syntactic errors will produce a 400 - Bad Request status code.</remarks>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadToken(System.String,System.Int32@)">
            <summary>
            Reads a token on the specified text by advancing an index on it.
            </summary>
            <param name="text">Text to read token from.</param>
            <param name="textIndex">Index for the position being scanned on text.</param>
            <returns>true if the end of the text was reached; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.SkipWhitespace(System.String,System.Int32@)">
            <summary>
            Skips whitespace in the specified text by advancing an index to
            the next non-whitespace character.
            </summary>
            <param name="text">Text to scan.</param>
            <param name="textIndex">Index to begin scanning from.</param>
            <returns>true if the end of the string was reached, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadMediaTypeParameter(System.String,System.Int32@,System.Data.Services.ContentTypeUtil.MediaParameter[]@)">
            <summary>Read a parameter for a media type/range.</summary>
            <param name="text">Text to read from.</param>
            <param name="textIndex">Pointer in text.</param>
            <param name="parameters">Array with parameters to grow as necessary.</param>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.ReadQuotedParameterValue(System.String,System.String,System.Int32@)">
            <summary>
            Reads Mime type parameter value for a particular parameter in the Content-Type/Accept headers.
            </summary>
            <param name="parameterName">Name of parameter.</param>
            <param name="headerText">Header text.</param>
            <param name="textIndex">Parsing index in <paramref name="headerText"/>.</param>
            <returns>String representing the value of the <paramref name="parameterName"/> parameter.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.IsHttpSeparator(System.Char)">
            <summary>
            Determines whether the specified character is a valid HTTP separator.
            </summary>
            <param name="c">Character to verify.</param>
            <returns>true if c is a separator; false otherwise.</returns>
            <remarks>
            See RFC 2616 2.2 for further information.
            </remarks>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.IsHttpToken(System.Char)">
            <summary>
            Determines whether the specified character is a valid HTTP header token character.
            </summary>
            <param name="c">Character to verify.</param>
            <returns>true if c is a valid HTTP header token character; false otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.FallbackEncoding">
            <summary>Encoding to fall back to an appropriate encoding is not available.</summary>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.MissingEncoding">
            <summary>Encoding implied by an unspecified encoding value.</summary>
            <remarks>See http://tools.ietf.org/html/rfc2616#section-3.4.1 for details.</remarks>
        </member>
        <member name="T:System.Data.Services.ContentTypeUtil.CharsetPart">
            <summary>Provides a struct to encapsulate a charset name and its relative desirability.</summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.CharsetPart.Charset">
            <summary>Name of the charset.</summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.CharsetPart.Quality">
            <summary>Charset quality (desirability), normalized to 0-1000.</summary>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.CharsetPart.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new CharsetPart with the specified values.
            </summary>
            <param name="charset">Name of charset.</param>
            <param name="quality">Charset quality (desirability), normalized to 0-1000.</param>
        </member>
        <member name="T:System.Data.Services.ContentTypeUtil.MediaParameter">
            <summary>Class to store media parameter information.</summary>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaParameter.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of MediaParameter.
            </summary>
            <param name="name">Name of the parameter.</param>
            <param name="value">Value of the parameter.</param>
            <param name="isQuoted">True if the value of the parameter is quoted, otherwise false.</param>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaParameter.GetOriginalValue">
            <summary>
            Gets the original value of the parameter.
            </summary>
            <returns>the original value of the parameter.</returns>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.MediaParameter.Name">
            <summary>Gets the name of the parameter.</summary>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.MediaParameter.Value">
            <summary>Value of the parameter.</summary>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.MediaParameter.IsQuoted">
            <summary>true if the value is quoted, otherwise false.</summary>
        </member>
        <member name="T:System.Data.Services.ContentTypeUtil.MediaType">
            <summary>Use this class to represent a media type definition.</summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaType.parameters">
            <summary>Parameters specified on the media type.</summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaType.subType">
            <summary>Sub-type specification (for example, 'plain').</summary>
        </member>
        <member name="F:System.Data.Services.ContentTypeUtil.MediaType.type">
            <summary>Type specification (for example, 'text').</summary>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaType.#ctor(System.String,System.String,System.Data.Services.ContentTypeUtil.MediaParameter[])">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.ContentTypeUtil.MediaType"/> read-only instance.
            </summary>
            <param name="type">Type specification (for example, 'text').</param>
            <param name="subType">Sub-type specification (for example, 'plain').</param>
            <param name="parameters">Parameters specified on the media type.</param>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaType.GetMatchingParts(System.String)">
            <summary>Gets a number of non-* matching types, or -1 if not matching at all.</summary>
            <param name="candidate">Candidate MIME type to match.</param>
            <returns>The number of non-* matching types, or -1 if not matching at all.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaType.GetMatchingParts(System.Data.Services.ContentTypeUtil.MediaType)">
            <summary>Gets a number of non-* matching types, or -1 if not matching at all.</summary>
            <param name="candidate">Candidate MIME type to match.</param>
            <returns>The number of non-* matching types, or -1 if not matching at all.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaType.GetParameterValue(System.String)">
            <summary>
            Searches for the parameter with the given name and returns its value.
            </summary>
            <param name="parameterName">name of the parameter whose value needs to be returned.</param>
            <returns>returns the value of the parameter with the given name. Returns null, if the parameter is not found.</returns>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaType.SelectQualityValue">
            <summary>Selects a quality value for the specified type.</summary>
            <returns>The quality value, in range from 0 through 1000.</returns>
            <remarks>See http://tools.ietf.org/html/rfc2616#section-14.1 for further details.</remarks>
        </member>
        <member name="M:System.Data.Services.ContentTypeUtil.MediaType.SelectEncoding">
            <summary>
            Selects the encoding appropriate for this media type specification
            (possibly null).
            </summary>
            <returns>
            The encoding explicitly defined on the media type specification, or
            the default encoding for well-known media types.
            </returns>
            <remarks>
            As per http://tools.ietf.org/html/rfc2616#section-3.7, the type, 
            subtype and parameter name attributes are case-insensitive.
            </remarks>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.MediaType.MimeType">
            <summary>Returns the MIME type in standard type/subtype form, without parameters.</summary>
        </member>
        <member name="P:System.Data.Services.ContentTypeUtil.MediaType.Parameters">
            <summary>media type parameters</summary>
        </member>
        <member name="T:System.Data.Services.IExpandProvider">
            <summary>
            This interface declares the methods required to support the $expand
            query option for a WCF Data Service.
            </summary>
        </member>
        <member name="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
             <summary>Applies expansions to the specified <paramref name="queryable"/> parameter.</summary>
             <returns>An <see cref="T:System.Collections.IEnumerable"/> object of the same type as the supplied <paramref name="queryable"/> object that includes the specified <paramref name="expandPaths"/>.</returns>
             <param name="queryable">The <see cref="T:System.Linq.IQueryable`1"/> object to expand.</param>
             <param name="expandPaths">A collection of <see cref="T:System.Data.Services.ExpandSegmentCollection"/> paths to expand. </param>
             <remarks>
             This method may modify the <paramref name="expandPaths"/> to indicate which expansions
             are included.
            
             The returned <see cref="T:System.Collections.IEnumerable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/>
             interface to provide enumerable objects for the expansions; otherwise, the expanded
             information is expected to be found directly in the enumerated objects.
             </remarks>
        </member>
        <member name="T:System.Data.Services.IExpandedResult">
            <summary>
            This interface declares the methods required to support enumerators for results and for
            associated segments on a WCF Data Service $expand query option.
            </summary>
        </member>
        <member name="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)">
            <summary>Gets the value for a named property of the result.</summary>
            <returns>The value of the property.</returns>
            <param name="name">The name of the property for which to get enumerable results.</param>
            <remarks>
            If the element returned in turn has properties which are expanded out-of-band
            of the object model, then the result will also be of type <see cref="T:System.Data.Services.IExpandedResult"/>,
            and the value will be available through <see cref="P:System.Data.Services.IExpandedResult.ExpandedElement"/>.
            </remarks>
        </member>
        <member name="P:System.Data.Services.IExpandedResult.ExpandedElement">
            <summary>Gets the element with expanded properties.</summary>
            <returns>The object in a property expanded by <see cref="T:System.Data.Services.IExpandedResult" />.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:System.Data.Services.Internal.ProjectedWrapper" -->
        <member name="T:System.Data.Services.IProjectedResult">
            <summary>
            This interface declares the methods required to support getting values
            from projected results for $select queries
            </summary>
        </member>
        <member name="M:System.Data.Services.IProjectedResult.GetProjectedPropertyValue(System.String)">
            <summary>Gets the value for named property for the result.</summary>
            <param name="propertyName">Name of property for which to get the value.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.IProjectedResult.ResourceTypeName">
            <summary>The full name of the <see cref="T:System.Data.Services.Providers.ResourceType"/> which represents the type
            of this result.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.precreatedProjectedWrapperTypes">
            <summary>Array of predefined projected wrappers for small number of properties. When we need to project
            more properties than these allow we will use the <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany"/>.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.projectedPropertyNames">
            <summary>Array of projected propery names used for fast lookup based on the projected property index.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.resourceTypeName">
            <summary>The full name of the type</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.propertyNameList">
            <summary>Text list of property names, in comma-separated format.</summary>
            <remarks>The position of each property name determines the index of the projected property
            which holds the value of that property.
            Some slot may be empty denoting that the projected property is not used for this instance.</remarks>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.propertyNames">
            <summary>Parsed list property names.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.GetProjectedPropertyValue(System.String)">
            <summary>Gets the value of the named property for the result.</summary>
            <returns>The value for the named property of the result.</returns>
            <param name="propertyName">Name of property for which to get the value.</param>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.GetProjectedWrapperType(System.Int32)">
            <summary>Returns the type of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper"/> with the specified number of projected properties.</summary>
            <param name="projectedPropertyCount">The number of properties to project in the wrapper.</param>
            <returns>The type of the projected wrapper to use (note that it might have room for more properties!)</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.Bind(System.Linq.Expressions.Expression[],System.Type)">
            <summary>Creates an array of <see cref="T:System.Linq.Expressions.MemberBinding"/> objects which bind the projected properties
            to the expressions passed in <paramref name="bindingExpressions"/>.</summary>
            <param name="bindingExpressions">Array of expressions to bind to properties on the projected wrapper.
            The expression at index 0 will be bound to the ResourceTypeName property.
            The expression at index 1 will be bound to the PropertyNameList property.
            The expression at index 2 + i will be bound to the ith projected property.</param>
            <param name="projectedWrapperType">The type of the projected wrapper to use. You should get this
            by calling the <see cref="M:System.Data.Services.Internal.ProjectedWrapper.GetProjectedWrapperType(System.Int32)"/> method.</param>
            <returns>An array of bindings which bind the specified expression to the properties on the projected wrapper.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.ProcessResultEnumeration(System.Object)">
            <summary>If the specified resource is <see cref="T:System.Collections.IEnumerable"/> this method
            will returned a wrapped instance which will turn all special "null" instances of ProjectedWrapper
            in the enumeration results into the true null values. Otherwise this method simply
            returns the resource untouched.</summary>
            <param name="resource">The resource to wrap.</param>
            <returns>The original resource or wrapped resource if it was <see cref="T:System.Collections.IEnumerable"/>.</returns>
            <remarks>Note that we don't expect that the enumeration of results might return result
            which itself will be enumeration (nested enumerations). We handle this case through the
            ExpandedWrapper instance instead.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.ProcessResultInstance(System.Object)">
            <summary>Helper method which checks the specified resource and if it is the special
            "null" ProjectedWrapper value it will turn it into a true null. Otherwise it returns the original value.</summary>
            <param name="resource">The resource to check for nullness.</param>
            <returns>The original value, or null if the value was representing null value.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.UnwrapEnumerator(System.Collections.IEnumerator)">
            <summary>Unwraps <see cref="T:System.Collections.IEnumerator"/> which might be wrapped to report null values correctly.
            If the input is not wrapped it returns the original enumerator.</summary>
            <param name="enumerator">The enumerator to unwrap.</param>
            <returns>The unwrapped enumerator.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.WrapQueryable(System.Linq.IQueryable)">
            <summary>Returns a wrapping <see cref="T:System.Linq.IQueryable"/> which will turn all special "null" instances
            of ProjectedWrapper in the enumeration results into true null values.</summary>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable"/> to wrap.</param>
            <returns>Newly created wrapped for the specified <paramref name="queryable"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the specified property by its index.</summary>
            <returns>The value for the property.</returns>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.BindResourceTypeAndPropertyNameList(System.Type,System.Linq.Expressions.MemberBinding[],System.Linq.Expressions.Expression[])">
            <summary>Binds the ResourceTypeName and PropertyNameList properties to the first two expressions.</summary>
            <param name="projectedWrapperType">The type of the projected wrapper to bind to.</param>
            <param name="bindings">Items 0 and 1 will be filled with the bindings in this array.</param>
            <param name="bindingExpressions">The expressions to bind - only items 0 and 1 are used.</param>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.BindToProjectedProperty(System.Type,System.Int32,System.Linq.Expressions.Expression)">
            <summary>Binds specified expression to a projected propety of a given index.</summary>
            <param name="projectedWrapperType">The type of the projected wrapper to bind to.</param>
            <param name="propertyIndex">The index of the projected property to bind to.</param>
            <param name="expression">The expression to bind to the property.</param>
            <returns>The newly create binding expression.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.BindToProjectedWrapperMany(System.Linq.Expressions.Expression[],System.Int32,System.Linq.Expressions.MemberBinding[],System.Int32)">
            <summary>Binds projected epxressions to the <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany"/> object.</summary>
            <param name="bindingExpressions">Array of expressions to bind.</param>
            <param name="expressionStartIndex">Index of the first expression in the <paramref name="bindingExpressions"/> to bind.</param>
            <param name="bindings">Array to fill with the bindings.</param>
            <param name="bindingStartIndex">Index of the first slot in <paramref name="bindings"/> to fill.</param>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.ResourceTypeName">
            <summary>Gets the full name of the <see cref="T:System.Data.Services.Providers.ResourceType" /> that represents the type of this result.</summary>
            <returns>The full name of the type.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.PropertyNameList">
            <summary>Gets a list of property names as text in a comma-separated format.</summary>
            <returns>List of comma-separated names.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper.QueryableWrapper">
            <summary>Wrapper around <see cref="T:System.Linq.IQueryable"/> which replaces special "null" instances
            of ProjectedWrapper in the results with true null values.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper.EnumerableWrapper">
            <summary>Wrapper around <see cref="T:System.Collections.IEnumerable"/> which replaces special "null" instances
            of ProjectedWrapper in the results with true null values.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.EnumerableWrapper.enumerable">
            <summary>The <see cref="T:System.Collections.IEnumerable"/> this object is wrapping.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumerableWrapper.#ctor(System.Collections.IEnumerable)">
            <summary>Constructor.</summary>
            <param name="enumerable">The enumerable to wrap.</param>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumerableWrapper.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets a new enumerator.</summary>
            <returns>The newly created <see cref="T:System.Collections.IEnumerator"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumerableWrapper.GetEnumerator">
            <summary>Gets a new enumerator.</summary>
            <returns>The newly created <see cref="T:System.Collections.IEnumerator"/>.</returns>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.QueryableWrapper.queryable">
            <summary>The <see cref="T:System.Linq.IQueryable"/> this object is wrapping.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.QueryableWrapper.#ctor(System.Linq.IQueryable)">
            <summary>Constructor.</summary>
            <param name="queryable">The queryable to wrap.</param>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.QueryableWrapper.ElementType">
            <summary>The type of the single element which is returned as a result of the query.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.QueryableWrapper.Expression">
            <summary>The expression tree for this query.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.QueryableWrapper.Provider">
            <summary>The query provider - not support as it should never be called.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper">
            <summary>Wrapper around <see cref="T:System.Collections.IEnumerator"/> which replaces special "null" instances
            of ProjectedWrapper in the results with true null values.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.enumerator">
            <summary>The <see cref="T:System.Collections.IEnumerator"/> this object is wrapping.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.#ctor(System.Collections.IEnumerator)">
            <summary>Constructor.</summary>
            <param name="enumerator">The enumerator to wrap.</param>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.MoveNext">
            <summary>Moves the enumerator to the next result.</summary>
            <returns>true if next result is available, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.Reset">
            <summary>Resets the enumerator.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.Dispose">
            <summary>Disposes the object.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.Current">
            <summary>Returns the current result on which the enumerator is positioned.</summary>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper.EnumeratorWrapper.InnerEnumerator">
            <summary>Returns the inner enumerator thic object is wrapping.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper0">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper0.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper1">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper1.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper1.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper2">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper2.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper2.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper2.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper3">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper3.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper4">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper4.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty3">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper5">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper5.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty3">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty4">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper6">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper6.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty3">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty4">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty5">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper7">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper7.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty3">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty4">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty5">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty6">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapper8">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapper8.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty3">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty4">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty5">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty6">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty7">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapperMany">
            <summary>Provides a wrapper over result element with the ability to project a subset of properties.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapperMany.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the specified property by its index.</summary>
            <returns>The value for the property.</returns>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty0">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty1">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty2">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty3">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty4">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty5">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty6">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty7">
            <summary>Gets or sets the property to project.</summary>
            <returns>The property to project.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.Next">
            <summary>Gets or sets another instance of <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany" /> which contains the set of the next eight projected properties, and possibly another link.</summary>
            <returns>The next set of properties.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ProjectedWrapperManyEnd">
            <summary>Instance of this class is assigned to the last <see cref="P:System.Data.Services.Internal.ProjectedWrapperMany.Next"/> in the list.</summary>
            <remarks>This trick is necessary for Entity Framework to work correctly, as it can't project null into the Next property.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ProjectedWrapperManyEnd.InternalGetProjectedPropertyValue(System.Int32)">
            <summary>Gets the value for the property specified by its index.</summary>
            <param name="propertyIndex">Index of the property for which to get the value.</param>
            <returns>The value for the property.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.PropertyAccessVisitor">
            <summary>Expression visitor class which provides recognission of property access</summary>
            <remarks>This class understands all the different ways WCF Data Services can use
            to access a property value in the generated query.
            The class is meant to be inherited for expression tree processing where
            property accesses are interesting.
            Note that it assumes that the expression tree looks the way WCF Data Services generate it.
            Noticable that all the GetValue method calls get the property parameter as a 
            <see cref="T:System.Linq.Expressions.ConstantExpression"/> node. This may mean that if there were some rewrites applied
            to the tree, the class may not recognize the property accesses anymore.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.PropertyAccessVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>MethodCallExpression visit method</summary>
            <param name="m">The MethodCallExpression expression to visit</param>
            <returns>The visited MethodCallExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.Internal.PropertyAccessVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            MemberExpression visit method
            </summary>
            <param name="m">The MemberExpression expression to visit</param>
            <returns>The visited MemberExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.Internal.PropertyAccessVisitor.ProcessPropertyAccess(System.String,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@)">
            <summary>Dervied class will override them method to process any property accesses found in the tree.</summary>
            <param name="propertyName">The name of the property being accessed.</param>
            <param name="operandExpression">The expression on which the property is being accessed.
            The implementation may choose to return a different expression through this ref parameter.
            If the method returns true, the <paramref name="accessExpression"/> is null and the method
            changed this parameter, the caller will replace the operand in the original property
            access with the new expression provided in this parameter. The way the property is accessed
            and its name remains the same.</param>
            <param name="accessExpression">The entire expression of the property access.
            The implementation may choose to return a different expression through this ref parameter.
            If the method returns true and this parameter is not null the caller will replace the entire
            property access expression with the new one passed in this parameter.</param>
            <returns>If the method returns false it means that it is not interested in this property access,
            and the processing of the tree will continue by examining the children of the property access expression.
            If the method returns true the caller looks at the returned value of <paramref name="accessExpression"/>.
            If it is not-null it will replace the entire property access expression with it.
            If it's null it will just replace the operand of the property access with the <paramref name="operandExpression"/>.
            If the implementation wants to skip this property access without modification it should return true
            and not modify the ref parameters.</returns>
            <remarks>If the method returns true the caller will not continue walking the children of the property
            access expression. It's the responsibility of the implementation to do so if it requires such
            functionality.</remarks>
        </member>
        <member name="T:System.Data.Services.IgnorePropertiesAttribute">
            <summary>Attribute to be annotated on types with ETags.</summary>
        </member>
        <member name="F:System.Data.Services.IgnorePropertiesAttribute.propertyNames">
            <summary>Name of the properties that form the ETag.</summary>
        </member>
        <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> class. </summary>
            <param name="propertyName">A string value that contains the property or properties to be attributed.</param>
        </member>
        <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> class. </summary>
            <param name="propertyNames">A string value that contains the property or properties to be attributed.</param>
        </member>
        <member name="M:System.Data.Services.IgnorePropertiesAttribute.GetProperties(System.Type,System.Boolean,System.Reflection.BindingFlags)">
            <summary>
            Validate and get the list of properties specified by this attribute on the given type.
            </summary>
            <param name="type">clr type on which this attribute must have defined.</param>
            <param name="inherit">whether we need to inherit this attribute or not.
            For context types,we need to, since we can have one context dervied from another, and we want to ignore all the properties on the base ones too.
            For resource types, we don't need to, since we don't want derived types to know about ignore properties of the base type. Also
            from derived type, you cannot change the definition of the base type.</param>
            <param name="bindingFlags">binding flags to be used for validating property names.</param>
            <returns>list of property names specified on IgnoreProperties on the given type.</returns>
        </member>
        <member name="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames">
            <summary>Gets the property name or names to controlled by the <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> attribute.</summary>
        </member>
        <member name="T:System.Data.Services.Int32EqualityComparer">
            <summary>This class implements IEqualityComparer for System.In32.</summary>
            <remarks>
            Using this class rather than EqualityComparer&lt;T&gt;.Default 
            saves from JIT'ing it in each AppDomain.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Int32EqualityComparer.Equals(System.Int32,System.Int32)">
            <summary>Checks whether two numbers are equal.</summary>
            <param name='x'>First number.</param><param name='y'>Second number.</param>
            <returns>true if x equals y; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Int32EqualityComparer.GetHashCode(System.Int32)">
            <summary>Gets a hash code for the specified number.</summary>
            <param name='obj'>Value.</param>
            <returns>The hash code for the specified value.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`1">
            <summary>Provides a base class implementing IExpandedResult over projections.</summary>
            <typeparam name="TExpandedElement">Type of element whose properties are expanded.</typeparam>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.description">
            <summary>Text description of properties, in comma-separated format.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.referenceDescription">
            <summary>Text description of reference properties, in comma-separated format.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.expandedElement">
            <summary>Element whose properties are being expanded.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.propertyNames">
            <summary>Parsed property names.</summary>
        </member>
        <member name="F:System.Data.Services.Internal.ExpandedWrapper`1.referencePropertyNames">
            <summary>names of properties that are Reference properties</summary>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.GetExpandedPropertyValue(System.String)">
            <summary>Returns the value of the expanded property.</summary>
            <returns>The value of the property.</returns>
            <param name="name">The name of the property. </param>
            <remarks>
            If the element returned in turn has properties which are expanded out-of-band
            of the object model, then the result will also be of type <see cref="T:System.Data.Services.IExpandedResult"/>,
            and the value will be available through <see cref="P:System.Data.Services.Internal.ExpandedWrapper`1.ExpandedElement"/>.
            A special case is the handling of $skiptoken property. In case the $skiptoken property does not
            exist on the current wrapper object, instead of throw-ing we return null which will
            be an indication to the caller that the property does not exist.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Returns a property object of the expanded property.</summary>
            <returns>The property value.</returns>
            <param name="nameIndex">The index of the property. </param>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.Description">
            <summary>Gets or sets the description for the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" />.</summary>
            <returns>The description of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" />.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.ReferenceDescription">
            <summary>Gets or sets the reference description, which used to display the wrapper.</summary>
            <returns>The reference description used to display the wrapper.</returns>
            <remarks>If unset, assume there are none.</remarks>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.ExpandedElement">
            <summary>Gets or sets the element with expanded properties.</summary>
            <returns>The object in a property expanded by <see cref="T:System.Data.Services.IExpandedResult" />.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.System#Data#Services#IExpandedResult#ExpandedElement">
            <summary>The element with expanded properties.</summary>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`2">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`2.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`2.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`3">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`3.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`4">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`4.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`5">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`5.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`6">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`6.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`7">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`7.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`8">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`8.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty6">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`9">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`9.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty6">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty7">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`10">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`10.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty6">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty7">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty8">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`11">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <typeparam name="TProperty9">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`11.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty6">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty7">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty8">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty9">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`12">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <typeparam name="TProperty9">Type of projected property.</typeparam>
            <typeparam name="TProperty10">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`12.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty6">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty7">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty8">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty9">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty10">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.ExpandedWrapper`13">
            <summary>Provides a wrapper over an element expanded with projections.</summary>
            <typeparam name="TExpandedElement">Type of expanded element.</typeparam>
            <typeparam name="TProperty0">Type of projected property.</typeparam>
            <typeparam name="TProperty1">Type of projected property.</typeparam>
            <typeparam name="TProperty2">Type of projected property.</typeparam>
            <typeparam name="TProperty3">Type of projected property.</typeparam>
            <typeparam name="TProperty4">Type of projected property.</typeparam>
            <typeparam name="TProperty5">Type of projected property.</typeparam>
            <typeparam name="TProperty6">Type of projected property.</typeparam>
            <typeparam name="TProperty7">Type of projected property.</typeparam>
            <typeparam name="TProperty8">Type of projected property.</typeparam>
            <typeparam name="TProperty9">Type of projected property.</typeparam>
            <typeparam name="TProperty10">Type of projected property.</typeparam>
            <typeparam name="TProperty11">Type of projected property.</typeparam>
            <remarks>This class supports the WCF Data Services infrastructure and is not meant to be used directly from your code.</remarks>
        </member>
        <member name="M:System.Data.Services.Internal.ExpandedWrapper`13.InternalGetExpandedPropertyValue(System.Int32)">
            <summary>Gets the value for the named property for the result.</summary>
            <param name="name">Name of property for which to get enumerable results.</param>
            <returns>The value for the named property of the result.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty0">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty1">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty2">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty3">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty4">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty5">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty6">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty7">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty8">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty9">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty10">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty11">
            <summary>Get or sets the property to expand.</summary>
            <returns>The property to expand.</returns>
        </member>
        <member name="T:System.Data.Services.SkipTokenAndETagParser">
            <summary>Provides a class used to parse a skip-token or etag.</summary>
        </member>
        <member name="M:System.Data.Services.SkipTokenAndETagParser.TryParseNullableTokens(System.String,System.Collections.Generic.IList{System.Object}@)">
            <summary>Attempts to parse nullable values (only positional values, no name-value pairs) from the specified text.</summary>
            <param name='text'>Text to parse (not null).</param>
            <param name='values'>After invocation, the parsed skiptoken/etag values as strings.</param>
            <returns>
            true if the given values were parsed; false if there was a 
            syntactic error.
            </returns>
            <remarks>
            The returned collection contains only string values. They must be converted later.
            </remarks>
        </member>
        <member name="T:System.Data.Services.MimeTypeAttribute">
            <summary>
            Use this attribute on a DataService service operation method
            or a data object property to indicate than the type returned is 
            of a specific MIME type.
            </summary>
        </member>
        <member name="F:System.Data.Services.MimeTypeAttribute.memberName">
            <summary>Name of the attributed method or property.</summary>
        </member>
        <member name="F:System.Data.Services.MimeTypeAttribute.mimeType">
            <summary>MIME type for the attributed method or property.</summary>
        </member>
        <member name="M:System.Data.Services.MimeTypeAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.MimeTypeAttribute" /> class. </summary>
            <param name="memberName">The name of the attribute.</param>
            <param name="mimeType">The MIME type of the attribute.</param>
        </member>
        <member name="P:System.Data.Services.MimeTypeAttribute.MemberName">
            <summary>Gets the name of the attribute.</summary>
            <returns>A string value that contains the name of the attribute. </returns>
        </member>
        <member name="P:System.Data.Services.MimeTypeAttribute.MimeType">
            <summary>Gets the MIME type of a request.</summary>
            <returns>A string that contains the MIME type.</returns>
        </member>
        <member name="T:System.Data.Services.Internal.NeedSkipTokenVisitor">
            <summary>
            Visitor to evaluate if skip tokens are needed for a given <see cref="T:System.Data.Services.Providers.OrderingInfo"/>
            </summary>
        </member>
        <member name="F:System.Data.Services.Internal.NeedSkipTokenVisitor.rt">
            <summary>Resource type for which we are evaluating ordering expressions</summary>
        </member>
        <member name="F:System.Data.Services.Internal.NeedSkipTokenVisitor.property">
            <summary>Resource property to which the ordering expression corresponds</summary>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.#ctor">
            <summary>Initializes a new <see cref="T:System.Data.Services.Internal.NeedSkipTokenVisitor"/> instance.</summary>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.#ctor(System.Data.Services.Providers.ResourceType)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Internal.NeedSkipTokenVisitor"/> instance.
            </summary>
            <param name="rt">Resource type for which we are evaluating ordering expressions</param>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.IsSkipTokenRequired(System.Data.Services.Providers.OrderingInfo)">
            <summary>
            Finds out if the given <paramref name="orderingInfo"/> required a skip token 
            expression in the expansion
            </summary>
            <param name="orderingInfo">Input orderingInfo.</param>
            <returns>true if skip token expression is needed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.CollectSkipTokenProperties(System.Data.Services.Providers.OrderingInfo,System.Data.Services.Providers.ResourceType)">
            <summary>
            Obtains a collection of resource properties that are needed for skip token generation
            </summary>
            <param name="orderingInfo">Input orderingInfo.</param>
            <param name="rt">Resource type for which to collect the skip token properties</param>
            <returns>Collection of resource properties used in $skiptoken</returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Override the <see cref="T:System.Linq.Expressions.ExpressionVisitor"/> method to decide if we need skip token expression in the expansion
            </summary>
            <param name="exp">Input expression</param>
            <returns>Output expression which is the same as input expression for this visitor</returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            Override for member access visitor
            </summary>
            <param name="m">Member access expression</param>
            <returns>Same expressions as <paramref name="m"/></returns>
        </member>
        <member name="M:System.Data.Services.Internal.NeedSkipTokenVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Override for parameter expression
            </summary>
            <param name="p">Parameter expression</param>
            <returns>Same parameter as <paramref name="p"/></returns>
        </member>
        <member name="P:System.Data.Services.Internal.NeedSkipTokenVisitor.NeedSkipToken">
            <summary>
            True of skiptoken is required for this instance, false otherwise
            </summary>
        </member>
        <member name="P:System.Data.Services.Internal.NeedSkipTokenVisitor.Property">
            <summary>
            Resource property to which the ordering expression corresponds
            </summary>
        </member>
        <member name="T:System.Data.Services.AstoriaRequestMessage">
            <summary>
            IODataRequestMessage interface implementation.
            </summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.host">
            <summary>Reference to the IDataServiceHost object we are wrapping</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.acceptableContentTypeSelector">
            <summary>Delegation object to figure out the acceptable content types based on $format and accept header.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestAccept">
            <summary>Gets a comma-separated list of client-supported MIME Accept types.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestAcceptCharSet">
            <summary>Gets the string with the specification for the character set encoding that the client requested, possibly null.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestIfMatch">
            <summary>Gets the value of the If-Match header from the request made</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestIfNoneMatch">
            <summary>Gets the value of the If-None-Match header from the request made</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestMinVersion">
            <summary>Gets the value for the MinDataServiceVersion request header.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestVersion">
            <summary>Gets the value for the DataServiceVersion request header.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestVersionString">
            <summary>The value of the DataServiceVersion header as a string.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.httpVerb">
            <summary>
            Get the enum representing the http method name.
            We have this for perf reason since enum comparison is faster than string comparison.
            </summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestHttpMethod">
            <summary>Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.absoluteRequestUri">
            <summary>Gets the absolute URI to the resource upon which to apply the request.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.absoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestStream">
            <summary>Gets the <see cref="T:System.IO.Stream"/> from which the input must be read to the client.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestHeaders">
            <summary>Request headers</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestAndServiceUrisAreReadOnly">
            <summary>Whether or not the request and service URI have been marked as read-only.</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaRequestMessage.requestVersionHeadersInitialized">
            <summary>true if this.InitializeRequestVersionHeaders() has been called; false otherwise.</summary>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.#ctor(System.Data.Services.IDataServiceHost)">
            <summary>
            Creates a new instance of AstoriaRequestMessage.
            </summary>
            <param name="host">IDataServiceHost instance to access all the request headers.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.#ctor(System.Data.Services.IDataServiceHost,System.Data.Services.IAcceptableContentTypeSelector)">
            <summary>
            Creates a new instance of AstoriaRequestMessage. This is meant to be a constructor for unit tests only. 
            </summary>
            <param name="host">IDataServiceHost instance to access all the request headers.</param>
            <param name="selector">Object to select acceptable content types.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetHeader(System.String)">
            <summary>
            Returns the value of the given request header.
            </summary>
            <param name="headerName">Name of the request header.</param>
            <returns>Returns the value of the given request header.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.SetHeader(System.String,System.String)">
            <summary>
            Sets the value of the given request header. Since on Astoria Server we are reading requests and
            all headers are initialized at construction time, we don't implement this method.
            </summary>
            <param name="headerName">Name of the request header.</param>
            <param name="headerValue">Value for the header to be set.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetStream">
            <summary>
            Returns the stream to which request payload needs to be written.
            </summary>
            <returns>Returns the stream to which request payload needs to be written.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.ResolveUrl(System.Uri,System.Uri)">
            <summary>
            Method to implement a custom URL resolution scheme.
            This method returns null if no custom resolution is desired.
            If the method returns a non-null URL that value will be used without further validation.
            </summary>
            <param name="baseUri">The (optional) base URI to use for the resolution.</param>
            <param name="payloadUri">The URI read from the payload.</param>
            <returns>
            A <see cref="T:System.Uri"/> instance that reflects the custom resolution of the method arguments
            into a URL or null if no custom resolution is desired; in that case the default resolution is used.
            </returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.ValidateAndCast``1(System.Object)">
            <summary>Checks whether the given object instance is of type T.</summary>
            <param name="instance">object instance.</param>
            <typeparam name="T">type which we need to cast the given instance to.</typeparam>
            <returns>Returns strongly typed instance of T, if the given object is an instance of type T.</returns>
            <exception cref="T:System.InvalidOperationException">If the given object is not of Type T.</exception>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.CacheHeaders">
            <summary>
            Copies over the headers that we cache from the host into this classes fields.
            This method should be called after we fire the events that let users alter request headers.
            </summary>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetAcceptableContentTypes">
            <summary>
            Gets a comma-separated list of client-supported MIME Accept types.
            </summary>
            <returns>A comma-seperated list of content types the client can accept.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetQueryStringItem(System.String)">
            <summary>Gets the value for the specified item in the request query string.</summary>
            <param name="item">Item to return.</param>
            <returns>
            The value for the specified item in the request query string;
            null if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.ProcessException(System.Data.Services.HandleExceptionArgs)">
            <summary>Method to handle a data service exception during processing.</summary>
            <param name="args">Exception handling description.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.InitializeRequestVersionHeaders(System.Version)">
            <summary>
            update the request version header, if it is not specified.
            </summary>
            <param name="maxProtocolVersion">protocol version as specified in the config.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.VerifyQueryParameters">
            <summary>Verifies that query parameters are valid.</summary>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetMinDataServiceVersionFromWrappedHost">
            <summary>
            Extracts the MinDSV header information from the wrapped host.
            </summary>
            <returns>Returns the minimum data service version if the MinDataServiceVersion header is present; null if the header is not on the request.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetCustomHeaderIfAvailable(System.String)">
            <summary>
            Gets the value of custom header if IDSH2 is implemented, otherwise returns null.
            </summary>
            <param name="headerName">Name of the custom header.</param>
            <returns>The header value if IDSH is implemented, or null otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.MakeRequestAndServiceUrisReadOnly">
            <summary>
            Makes the AbsoluteServiceUri and AbsoluteRequestUri properties to be read-only. Should only be called immediately after the OnStartProcessingRequest method returns.
            </summary>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.ValidateVersionHeader(System.String,System.String)">
            <summary>
            Validate the given header value and return the Version instance equivalent to the string header value.
            If the version header is not specified, then this method returns the max known version.
            </summary>
            <param name="headerName">name of the request header.</param>
            <param name="headerValue">value of the request header.</param>
            <returns>Version instance containing the version header information.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.KnownDataServiceVersionsToString(System.Version)">
            <summary>
            Converts the list of known data service version to a comma's separated string.
            <paramref name="maxRequestVersionAllowed"/> restricts the values in the result string.
            </summary>
            <param name="maxRequestVersionAllowed">Restricts the values in the result string</param>
            <returns>Comma separated known version list.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetMaxRequestVersionAllowed(System.Version)">
            <summary>
            Returns the maximum allowed request version.
            </summary>
            <param name="maxProtocolVersion">The max protocol version specified in the service.</param>
            <returns>The maximum allowed request version.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.GetMinDataServiceVersion(System.Version)">
            <summary>
            Extracts and sets the MinDSV from the request header.
            </summary>
            <param name="maxProtocolVersion">protocol version as specified in the config.</param>
            <returns>Returns the minimum data service version that the client can understand.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.ValidateAndCacheAbsoluteRequestUri(System.Uri,System.Boolean)">
            <summary>
            Validates that the given URI is non-null and absolute, then saves it as the absolute request URI.
            </summary>
            <param name="value">The absolute request uri to validate and cache.</param>
            <param name="validateQueryString">Whether or not to validate that the query string has not changed from the host's value.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaRequestMessage.ValidateAndCacheAbsoluteServiceUri(System.Uri)">
            <summary>
            Validates that the given URI is non-null and absolute, then saves it as the absolute service URI.
            </summary>
            <param name="value">The absolute service uri to validate and cache.</param>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.Headers">
            <summary>Gets all the request headers.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.Url">
            <summary>The URL of the request.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.Method">
            <summary>The method of the request.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.ContentType">
            <summary>
            The Content-Type header, this property allows the caller to override the value comming from the host.
            </summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.HttpVerb">
            <summary>
            Get the enum representing the http method name.
            </summary>
            <param name="httpMethodName">http method used for the request.</param>
            <returns>enum representing the http method name.</returns>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.AbsoluteRequestUri">
            <summary>Gets the absolute resource upon which to apply the request.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.RequestHttpMethod">
            <summary>Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.RequestVersion">
            <summary>Gets the value for the RequestVersion request header.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.RequestMinVersion">
            <summary>
            Gets the value for the MinDataServiceVersion request header. 
            If the header is not specified or if MPV less than 3.0, it returns the min known version.
            </summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.RequestMaxVersion">
            <summary>Gets the value for the MaxDataServiceVersion request header. If the header is not specified, it returns the max known version.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.RequestStream">
            <summary>Gets the <see cref="T:System.IO.Stream"/> from which the input must be read to the client.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.RequestHeaders">
            <summary>Request headers</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.HttpContextServiceHost">
            <summary>If the wrapped host is a HttpContextServiceHost, returns the host</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaRequestMessage.BatchServiceHost">
            <summary>If the wrapped host is a BatchServiceHost, returns the batch host</summary>
        </member>
        <member name="T:System.Data.Services.Providers.OpenTypeMethods">
            <summary>Use this class to perform late-bound operations on open properties.</summary>    
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.AddMethodInfo">
            <summary>MethodInfo for Add.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.AndAlsoMethodInfo">
            <summary>MethodInfo for AndAlso.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.ConvertMethodInfo">
            <summary>MethodInfo for Convert.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.DivideMethodInfo">
            <summary>MethodInfo for Divide.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.EqualMethodInfo">
            <summary>MethodInfo for Equal.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.GreaterThanMethodInfo">
            <summary>MethodInfo for GreaterThan.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqualMethodInfo">
            <summary>MethodInfo for GreaterThanOrEqual.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.LessThanMethodInfo">
            <summary>MethodInfo for LessThan.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqualMethodInfo">
            <summary>MethodInfo for LessThanOrEqual.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.ModuloMethodInfo">
            <summary>MethodInfo for Modulo.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.MultiplyMethodInfo">
            <summary>MethodInfo for Multiply.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.NegateMethodInfo">
            <summary>MethodInfo for Negate.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.NotMethodInfo">
            <summary>MethodInfo for Not.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.NotEqualMethodInfo">
            <summary>MethodInfo for NotEqual.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.OrElseMethodInfo">
            <summary>MethodInfo for OrElse.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.SubtractMethodInfo">
            <summary>MethodInfo for Subtract.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.TypeIsMethodInfo">
            <summary>MethodInfo for TypeIs.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OpenTypeMethods.GetValueOpenPropertyMethodInfo">
            <summary>MethodInfo for object OpenTypeMethods.GetValue(this object value, string propertyName).</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.GetValue(System.Object,System.String)">
            <summary>Gets a value from the specified property of a specified object.</summary>
            <returns>The requested value; null if the value cannot be determined.</returns>
            <param name="value">Object from which to get the property value.</param>
            <param name="propertyName">Name of property from which to get the value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Add(System.Object,System.Object)">
            <summary>Adds two values.</summary>
            <returns>The result of the arithmetic operation.</returns>
            <param name="left">First value to add.</param>
            <param name="right">Second value to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.AndAlso(System.Object,System.Object)">
            <summary>Performs a logical and operation between two expressions.</summary>
            <returns>The result of the logical and operation.</returns>
            <param name="left">Left value.</param>
            <param name="right">Right value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Divide(System.Object,System.Object)">
            <summary>Divides two values.</summary>
            <returns>The divided value.</returns>
            <param name="left">The first value (dividend).</param>
            <param name="right">The second value (divisor).</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Equal(System.Object,System.Object)">
            <summary>Determines whether the specified objects are considered equal.</summary>
            <returns>true when both objects are equal; otherwise, false.</returns>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThan(System.Object,System.Object)">
            <summary>Determines whether the value of one object is greater than another object.</summary>
            <returns>true if the value of the first object is greater than that of the second object; otherwise, false.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(System.Object,System.Object)">
            <summary>Determines whether the value of one object is greater than or equal to another object.</summary>
            <returns>true when the value of the first object is greater than or equal to that of the second object; otherwise, false.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThan(System.Object,System.Object)">
            <summary>Determines whether the value of one object is less than another object.</summary>
            <returns>true if the value of the first object is less than that of the second object; otherwise, false.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(System.Object,System.Object)">
            <summary>Determines whether the value of one object is less than or equal to another object.</summary>
            <returns>true if the value of the first object is less than or equal to that of the second object; otherwise, false.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Modulo(System.Object,System.Object)">
            <summary>Calculates the arithmetic remainder of dividing one value by a second value. </summary>
            <returns>The remainder value.</returns>
            <param name="left">The first value (dividend).</param>
            <param name="right">The second value (divisor).</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Multiply(System.Object,System.Object)">
            <summary>Multiplies two values.</summary>
            <returns>The product of the two values.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.NotEqual(System.Object,System.Object)">
            <summary>Performs a logical comparison of the two values to determine if they are not equal.</summary>
            <returns>true if both objects are not equal; otherwise, false.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.OrElse(System.Object,System.Object)">
            <summary>Performs a logical OR operation on two values.</summary>
            <returns>The result of the logical OR operation.</returns>
            <param name="left">The first value.</param>
            <param name="right">The second value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Subtract(System.Object,System.Object)">
            <summary>Subtracts two values.</summary>
            <returns>The result of the arithmetic operation.</returns>
            <param name="left">First value in the subtraction.</param>
            <param name="right">Second value in the subtraction.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Negate(System.Object)">
            <summary>Returns the result of multiplying the specified value by negative one.</summary>
            <returns>The product of <paramref name="value" /> multiplied by negative one.</returns>
            <param name="value">The value to negate.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Not(System.Object)">
            <summary>Performs a bitwise (logical) complement operation on the supplied value.</summary>
            <returns>A bitwise complement of the supplied value.</returns>
            <param name="value">Value to logically complement.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>Converts a value to the specified type.</summary>
            <returns>The converted value.</returns>
            <param name="value">Value to convert.</param>
            <param name="type">Resource type for the conversion.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>Checks the type of a specified value.</summary>
            <returns>true if the value is of the specified resource type; otherwise, false.</returns>
            <param name="value">The value to check.</param>
            <param name="type">Resource type for which to check.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Concat(System.Object,System.Object)">
            <summary>Concatenates two string values.</summary>
            <returns>A new instance that is the concatenated string.</returns>
            <param name="first">The first string.</param>
            <param name="second">The second string.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.EndsWith(System.Object,System.Object)">
            <summary>Determines whether the end of one string matches another string.</summary>
            <returns>true when <paramref name="targetString" /> ends with <paramref name="substring" />; otherwise, false.</returns>
            <param name="targetString">The string being compared.</param>
            <param name="substring">The string to compare to.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.IndexOf(System.Object,System.Object)">
            <summary>Returns the index of a substring in the target string.</summary>
            <returns>The index of the location of <paramref name="substring" /> in the <paramref name="targetString" />.</returns>
            <param name="targetString">The target string.</param>
            <param name="substring">The substring to find.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Length(System.Object)">
            <summary>Gets the number of characters in the supplied string object. </summary>
            <returns>The length of the string value.</returns>
            <param name="value">The string to be checked.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Replace(System.Object,System.Object,System.Object)">
            <summary>Replaces one substring with a second substring in a target string.</summary>
            <returns>A new string with the substring replaced with the new substring.</returns>
            <param name="targetString">The string with the substring to replace.</param>
            <param name="substring">The substring to be replaced.</param>
            <param name="newString">The new substring.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.StartsWith(System.Object,System.Object)">
            <summary>Checks whether the target string starts with the substring.</summary>
            <returns>true if the target string starts with the given substring; otherwise, false.</returns>
            <param name="targetString">The string being compared.</param>
            <param name="substring">The substring that the <paramref name="targetString" /> might start with.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object)">
            <summary>Returns the substring after the specified starting index location.</summary>
            <returns>The substring.</returns>
            <param name="targetString">The string from which to return the substring.</param>
            <param name="startIndex">The starting index for the substring.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object,System.Object)">
            <summary>Returns the substring of a specific length after the specified starting index location.</summary>
            <returns>The substring.</returns>
            <param name="targetString">The string from which to return the substring.</param>
            <param name="startIndex">The starting index for the substring.</param>
            <param name="length">The length of the substring.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.SubstringOf(System.Object,System.Object)">
            <summary>Determines whether a substring occurs in another string.</summary>
            <returns>true if <paramref name="substring" /> occurs in <paramref name="targetString" />; otherwise, false.</returns>
            <param name="substring">The substring to locate.</param>
            <param name="targetString">The string to search.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.ToLower(System.Object)">
            <summary>Returns a copy of a string converted to lowercase.</summary>
            <returns>A new string value with only lowercase.</returns>
            <param name="targetString">The string to convert.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.ToUpper(System.Object)">
            <summary>Returns a copy of a string converted to uppercase.</summary>
            <returns>A new string value with only uppercase characters.</returns>
            <param name="targetString">The string to convert.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Trim(System.Object)">
            <summary>Removes all leading and trailing white-space characters from a string.</summary>
            <returns>The trimmed string.</returns>
            <param name="targetString">The string to trim.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Year(System.Object)">
            <summary>Returns the year value of the given <see cref="T:System.DateTime" /> instance.</summary>
            <returns>The year value of the given <see cref="T:System.DateTime" /> instance.</returns>
            <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Month(System.Object)">
            <summary>Returns the month value of the given <see cref="T:System.DateTime" /> instance.</summary>
            <returns>The month value of the given <see cref="T:System.DateTime" /> instance.</returns>
            <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Day(System.Object)">
            <summary>Returns the day value of the given <see cref="T:System.DateTime" /> instance.</summary>
            <returns>The day value of the given <see cref="T:System.DateTime" /> instance.</returns>
            <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Hour(System.Object)">
            <summary>Returns the hour value of the given <see cref="T:System.DateTime" /> instance.</summary>
            <returns>The hour value of the given <see cref="T:System.DateTime" /> instance.</returns>
            <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Minute(System.Object)">
            <summary>Returns the minute value of the given <see cref="T:System.DateTime" /> instance.</summary>
            <returns>The minute value of the given <see cref="T:System.DateTime" /> instance.</returns>
            <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Second(System.Object)">
            <summary>Returns the second value of the given <see cref="T:System.DateTime" /> instance.</summary>
            <returns>The second value of the given <see cref="T:System.DateTime" /> instance.</returns>
            <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Ceiling(System.Object)">
            <summary>Returns the ceiling of the given value.</summary>
            <returns>The ceiling value for the given value.</returns>
            <param name="value">A <see cref="T:System.Decimal" /> or <see cref="T:System.Double" /> object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Floor(System.Object)">
            <summary>Returns the floor of the given value.</summary>
            <returns>Returns the floor value for the given object.</returns>
            <param name="value">The <see cref="T:System.Decimal" /> or <see cref="T:System.Double" /> object to evaluate.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Round(System.Object)">
            <summary>Rounds the supplied value.</summary>
            <returns>The rounded value.</returns>
            <param name="value">A <see cref="T:System.Decimal" /> or <see cref="T:System.Double" /> to round.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.Distance(System.Object,System.Object)">
            <summary>Returns the distance between the specified objects.</summary>
            <returns>The distance between the specified objects.</returns>
            <param name="left">The first object.</param>
            <param name="right">The second object.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.AddExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that adds two values with no overflow checking.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The added value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.AndAlsoExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates a call expression that represents a conditional AND operation that evaluates the second operand only if it has to.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The conditional expression; null if the expressions aren't of the right type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.DivideExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that divides two values.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The divided value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.EqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether two values are equal.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left equals right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThanExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is greater than the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is greater than right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is greater than or equal to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is greater than or equal to right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThanExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is less than the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is less than right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether the left value is less than or equal to the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is less than or equal to right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.ModuloExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that calculates the remainder of dividing the left value by the right value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The remainder value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.MultiplyExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that multiplies two values with no overflow checking.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The multiplication value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.OrElseExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates a call expression that represents a conditional OR operation that evaluates the second operand only if it has to.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The conditional expression; null if the expressions aren't of the right type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.NotEqualExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that checks whether two values are not equal.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>true if left is does not equal right; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.SubtractExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Creates an expression that subtracts the right value from the left value.</summary>
            <param name='left'>Left value.</param><param name='right'>Right value.</param>
            <returns>The subtraction value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.NegateExpression(System.Linq.Expressions.Expression)">
            <summary>Creates an expression that negates (arithmetically) the specified value.</summary>
            <param name='expression'>Value expression.</param>
            <returns>The negated value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.NotExpression(System.Linq.Expressions.Expression)">
            <summary>Creates an expression that negates (logically) the specified value.</summary>
            <param name='expression'>Value expression.</param>
            <returns>The negated value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.IsOpenPropertyExpression(System.Linq.Expressions.Expression)">
            <summary>
            Checks whether the specified <paramref name="expression"/> is part of an open property expression.
            </summary>
            <param name="expression">Non-null <see cref="T:System.Linq.Expressions.Expression"/> to check.</param>
            <returns>true if <paramref name="expression"/> is based on an open property; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.IsOpenExpression(System.Linq.Expressions.Expression)">
            <summary>Checks if the given input expression refers to open types.</summary>
            <param name="input">Input expression.</param>
            <returns>true if the input is an open expression, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.StripObjectConvert(System.Linq.Expressions.Expression)">
            <summary>Strips all Expression.Convert(object) calls from the input expression.</summary>
            <param name="input">Input expression.</param>
            <returns>First non-Convert expression inside Converts that converts to non-object type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OpenTypeMethods.ExpressionAsObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the specified <paramref name="expression"/> with a 
            type assignable to System.Object.
            </summary>
            <param name="expression">Expression to convert.</param>
            <returns>
            The specified <paramref name="expression"/> with a type assignable 
            to System.Object.
            </returns>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionUtils">
            <summary>Utility methods to work with the Expression type.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.NullLiteral">
            <summary>Constant for "null" literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.falseLiteral">
            <summary>Constant for "false" literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableWhereMethodInfo">
            <summary>
            MethodInfo for Queryable.Where
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableOfTypeMethodInfo">
            <summary>
            MethodInfo for Queryable.OfType
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableSelectMethodInfo">
            <summary>
            MethodInfo for Queryable.Select
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableSelectManyMethodInfo">
            <summary>
            MethodInfo for Queryable.SelectMany
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableOrderByMethodInfo">
            <summary>
            MethodInfo for Queryable.OrderBy
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableOrderByDescendingMethodInfo">
            <summary>
            MethodInfo for Queryable.OrderByDescending
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableThenByMethodInfo">
            <summary>
            MethodInfo for Queryable.ThenBy
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableThenByDescendingMethodInfo">
            <summary>
            MethodInfo for Queryable.ThenByDescending
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableTakeMethodInfo">
            <summary>
            MethodInfo for Queryable.Take
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableSkipMethodInfo">
            <summary>
            MethodInfo for Queryable.Skip
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.queryableLongCountMethodInfo">
            <summary>
            MethodInfo for Queryable.LongCount
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableWhereMethodInfo">
            <summary>
            MethodInfo for Enumerable.Where
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableOfTypeMethodInfo">
            <summary>
            MethodInfo for Enumerable.OfType
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableSelectMethodInfo">
            <summary>
            MethodInfo for Enumerable.Select
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableSelectManyMethodInfo">
            <summary>
            MethodInfo for Enumerable.SelectMany
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableOrderByMethodInfo">
            <summary>
            MethodInfo for Enumerable.OrderBy
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableOrderByDescendingMethodInfo">
            <summary>
            MethodInfo for Enumerable.OrderByDescending
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableThenByMethodInfo">
            <summary>
            MethodInfo for Enumerable.ThenBy
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableThenByDescendingMethodInfo">
            <summary>
            MethodInfo for Enumerable.ThenByDescending
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableTakeMethodInfo">
            <summary>
            MethodInfo for Enumerable.Take
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableSkipMethodInfo">
            <summary>
            MethodInfo for Enumerable.Skip
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableCastMethodInfo">
            <summary>
            MethodInfo for Enumerable.Cast
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableAllMethodInfo">
            <summary>
            MethodInfo for Enumerable.All
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableAnyWithNoPredicateMethodInfo">
            <summary>
            MethodInfo for Enumerable.Any()
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableAnyWithPredicateMethodInfo">
            <summary>
            MethodInfo for Enumerable.Any(predicate)
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.enumerableEmptyMethodInfo">
            <summary>
            MethodInfo for Enumerable.Empty
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionUtils.createQueryMethodInfo">
            <summary>
            MethodInfo for IQueryProvider.CreateQuery
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.IsNullConstant(System.Linq.Expressions.Expression)">
            <summary>Checks whether <paramref name="expression"/> is a null constant.</summary>
            <param name="expression">Expression to check.</param>
            <returns>true if <paramref name="expression"/> is a null constant; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnsurePredicateExpressionIsBoolean(System.Linq.Expressions.Expression)">
            <summary>Prepare the given expression for passing as a predicate to a filter function 
             i.e. Queryable.Where()/Enumerable.Any()/Enumerable.All().
            </summary>
            <param name="expr">Input expression.</param>
            <returns>Expression converted to boolean expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableEmpty(System.Type)">
            <summary>
            Returns a method call expression to the Empty method
            </summary>
            <param name="targetType">Target type</param>
            <returns>Expression calling the Empty method</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.AddNullPropagationIfNeeded(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>Rewrites an expression to propagate null values if necessary.</summary>
            <param name='element'>Expression to check for null.</param>
            <param name='notNullExpression'>Expression to yield if <paramref name='element' /> does not yield null.</param>
            <returns>The possibly rewriteen <paramref name='notNullExpression' />.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.ComposePropertyNavigation(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Boolean,System.Boolean)">
            <summary>
            Composes a property navigation with the appropriate filter lamba, as appropriate.
            </summary>
            <param name="expression">Member access expression to compose.</param>
            <param name="filterLambda">Lambda expression used for the filter.</param>
            <param name="propagateNull">Whether null propagation is required on the <paramref name="expression"/>.</param>
            <param name="isSingleResult">Whether <paramref name="expression"/> represent a single resource navigation.</param>
            <returns>The composed expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.ElementType(System.Linq.Expressions.Expression)">
            <summary>
            Returns the element type of the expression.
            </summary>
            <param name="source">Source expression.</param>
            <returns>Returns the element type of the expression.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableWhere(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.Where() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="predicate">Predicate to pass to Queryable.Where().</param>
            <returns>New expression with Queryable.Where() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableSelect(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.Select() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="selector">Selector to pass to Queryable.Select().</param>
            <returns>New expression with Queryable.Select() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableSelectMany(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.SelectMany() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="selector">Selector to pass to Queryable.SelectMany().</param>
            <returns>New expression with Queryable.SelectMany() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableOfType(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Applies Queryable.OfType() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="targetType">Target type to pass to Queryable.OfType().</param>
            <returns>New expression with Queryable.OfType() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableOrderBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.OrderBy() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Queryable.OrderBy().</param>
            <returns>New expression with Queryable.OrderBy() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableOrderByDescending(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.OrderByDescending() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Queryable.OrderByDescending().</param>
            <returns>New expression with Queryable.OrderByDescending() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableThenBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.ThenBy() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Queryable.ThenBy().</param>
            <returns>New expression with Queryable.ThenBy() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableThenByDescending(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Queryable.ThenByDescending() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Queryable.ThenByDescending().</param>
            <returns>New expression with Queryable.ThenByDescending() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableTake(System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Applies Queryable.Take() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="count">Take count.</param>
            <returns>New expression with Queryable.Take() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableSkip(System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Applies Queryable.Skip() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="count">Skip count.</param>
            <returns>New expression with Queryable.Skip() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.QueryableLongCount(System.Linq.Expressions.Expression)">
            <summary>
            Applies Queryable.LongCount() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <returns>New expression with Queryable.LongCount() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.CreateQuery(System.Linq.Expressions.Expression,System.Linq.IQueryProvider)">
            <summary>
            Invokes the generic version of CreateQuery on the <paramref name="provider"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="provider"><see cref="T:System.Linq.IQueryProvider"/> instance.</param>
            <returns><see cref="T:System.Linq.IQueryable"/> instance.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableWhere(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.Where() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="predicate">Predicate to pass to Enumerable.Where().</param>
            <returns>New expression with Enumerable.Where() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableSelect(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.Select() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="selector">Selector to pass to Enumerable.Select().</param>
            <returns>New expression with Enumerable.Select() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableSelectMany(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.SelectMany() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="selector">Selector to pass to Enumerable.SelectMany().</param>
            <returns>New expression with Enumerable.SelectMany() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableOfType(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Applies Enumerable.OfType() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="targetType">Target type to pass to Enumerable.OfType().</param>
            <returns>New expression with Enumerable.OfType() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableOrderBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.OrderBy() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Enumerable.OrderBy().</param>
            <returns>New expression with Enumerable.OrderBy() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableOrderByDescending(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.OrderByDescending() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Enumerable.OrderByDescending().</param>
            <returns>New expression with Enumerable.OrderByDescending() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableThenBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.ThenBy() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Enumerable.ThenBy().</param>
            <returns>New expression with Enumerable.ThenBy() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableThenByDescending(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.ThenByDescending() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="keySelector">KeySelector to pass to Enumerable.ThenByDescending().</param>
            <returns>New expression with Enumerable.ThenByDescending() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableTake(System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Applies Enumerable.Take() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="count">Take count.</param>
            <returns>New expression with Enumerable.Take() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableSkip(System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Applies Enumerable.Skip() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression.</param>
            <param name="count">Skip count.</param>
            <returns>New expression with Enumerable.Skip() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableCast(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Applies Enumerable.Cast to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression</param>
            <param name="targetType">Target type</param>
            <returns>Expression with Enumerable.Cast() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableAll(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.All to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression</param>
            <param name="predicate">Predicate to pass to Enumerable.All()</param>
            <returns>Expression with Enumerable.All() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableAny(System.Linq.Expressions.Expression)">
            <summary>
            Applies Enumerable.Any to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression</param>
            <returns>Expression with Enumerable.Any() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.EnumerableAny(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Applies Enumerable.Any() to <paramref name="source"/>.
            </summary>
            <param name="source">Source expression</param>
            <param name="predicate">Predicate to pass to Enumerable.Any()</param>
            <returns>Expression with Enumerable.Any() applied.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.Where(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Compose Where() to expression
            </summary>
            <param name="genericMethodInfo">Where MethodInfo</param>
            <param name="source">Source expression</param>
            <param name="predicate">Predicate expression</param>
            <returns>Expression with Where()</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.SelectMany(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Compose SelectMany() to expression
            </summary>
            <param name="genericMethodInfo">SelectMany MethodInfo</param>
            <param name="source">Source expression</param>
            <param name="selector">Selector expression</param>
            <returns>Expression with SelectMany()</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.CallMethodWithTypeParam(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Call generic method
            </summary>
            <param name="genericMethodInfo">MethodInfo</param>
            <param name="source">Source expression</param>
            <param name="targetType">Target type</param>
            <returns>New expression with method call.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.CallMethodWithSelector(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Call generic method
            </summary>
            <param name="genericMethodInfo">MethodInfo</param>
            <param name="source">Source expression</param>
            <param name="selector">selector expression</param>
            <returns>New expression with method call.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.CallMethodWithCount(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Call generic method
            </summary>
            <param name="genericMethodInfo">MethodInfo</param>
            <param name="source">Source expression</param>
            <param name="count">Take count</param>
            <returns>New expression with method call.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.CallMethodWithNoParam(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
            <summary>
            Call generic method
            </summary>
            <param name="genericMethodInfo">MethodInfo</param>
            <param name="source">Source expression</param>
            <returns>New expression with method call.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.CallMethodWithPredicate(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Call generic method
            </summary>
            <param name="genericMethodInfo">MethodInfo</param>
            <param name="source">Source expression</param>
            <param name="predicate">Predicate to pass to the method</param>
            <returns>New expression with method call.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.ReplaceParameterTypeForLambda(System.Linq.Expressions.LambdaExpression,System.Type)">
            <summary>Replaced the type of input parameter with the given <paramref name="targetType"/></summary>
            <param name="input">Input lambda expression.</param>
            <param name="targetType">Type of the new parameter that will be replaced.</param>
            <returns>New lambda expression with parameter of new type.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionUtils.GetMethodInfoFromLambdaBody``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Helper method to get the MethodInfo from the body of the given lambda expression.
            </summary>
            <typeparam name="TResult">Result type of <paramref name="lambda"/>.</typeparam>
            <param name="lambda">Lambda expression.</param>
            <returns>Returns the MethodInfo from the body of the given lambda expression.</returns>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableWhereMethodInfo">
            <summary>
            MethodInfo for Queryable.Where
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableOfTypeMethodInfo">
            <summary>
            MethodInfo for Queryable.OfType
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableSelectMethodInfo">
            <summary>
            MethodInfo for Queryable.Select
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableSelectManyMethodInfo">
            <summary>
            MethodInfo for Queryable.SelectMany
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableOrderByMethodInfo">
            <summary>
            MethodInfo for Queryable.OrderBy
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableOrderByDescendingMethodInfo">
            <summary>
            MethodInfo for Queryable.OrderByDescending
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableThenByMethodInfo">
            <summary>
            MethodInfo for Queryable.ThenBy
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableThenByDescendingMethodInfo">
            <summary>
            MethodInfo for Queryable.ThenByDescending
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableTakeMethodInfo">
            <summary>
            MethodInfo for Queryable.Take
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableSkipMethodInfo">
            <summary>
            MethodInfo for Queryable.Skip
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.QueryableLongCountMethodInfo">
            <summary>
            MethodInfo for Queryable.LongCount
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableWhereMethodInfo">
            <summary>
            MethodInfo for Enumerable.Where
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableOfTypeMethodInfo">
            <summary>
            MethodInfo for Enumerable.OfType
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableSelectMethodInfo">
            <summary>
            MethodInfo for Enumerable.Select
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableSelectManyMethodInfo">
            <summary>
            MethodInfo for Enumerable.SelectMany
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableOrderByMethodInfo">
            <summary>
            MethodInfo for Enumerable.OrderBy
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableOrderByDescendingMethodInfo">
            <summary>
            MethodInfo for Enumerable.OrderByDescending
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableThenByMethodInfo">
            <summary>
            MethodInfo for Enumerable.ThenBy
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableThenByDescendingMethodInfo">
            <summary>
            MethodInfo for Enumerable.ThenByDescending
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableTakeMethodInfo">
            <summary>
            MethodInfo for Enumerable.Take
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableSkipMethodInfo">
            <summary>
            MethodInfo for Enumerable.Skip
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableCastMethodInfo">
            <summary>
            MethodInfo for Enumerable.Cast
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableAllMethodInfo">
            <summary>
            MethodInfo for Enumerable.All
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableAnyWithNoPredicateMethodInfo">
            <summary>
            MethodInfo for Enumerable.Any()
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableAnyWithPredicateMethodInfo">
            <summary>
            MethodInfo for Enumerable.Any(predicate)
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.EnumerableEmptyMethodInfo">
            <summary>
            MethodInfo for Enumerable.Empty
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionUtils.CreateQueryMethodInfo">
            <summary>
            MethodInfo for IQueryProvider.CreateQuery
            </summary>
        </member>
        <member name="T:System.Data.Services.ProcessRequestArgs">
            <summary>Use this class to look at the request uri and doing some custom validation.</summary>
        </member>
        <member name="M:System.Data.Services.ProcessRequestArgs.#ctor(System.Data.Services.DataServiceOperationContext)">
            <summary>Initalizes a new <see cref="T:System.Data.Services.ProcessRequestArgs"/> instance.</summary>
            <param name="operationContext">Context about the current operation being processed.</param>
        </member>
        <member name="P:System.Data.Services.ProcessRequestArgs.RequestUri">
            <summary>Gets the URI of an HTTP request to be process.</summary>
            <returns>A <see cref="T:System.Uri" /> that contains the URI of the request to be processed.</returns>
        </member>
        <member name="P:System.Data.Services.ProcessRequestArgs.ServiceUri">
            <summary>The absolute base URI of the service.</summary>
        </member>
        <member name="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation">
            <summary>Gets a Boolean value that indicates whether the HTTP request to the data service is a batch operation.</summary>
            <returns>The Boolean value that indicates whether the HTTP request to the data service is a batch operation. </returns>
        </member>
        <member name="P:System.Data.Services.ProcessRequestArgs.OperationContext">
            <summary>Gets the context that contains information about the current operation being processed.</summary>
            <returns>An <see cref="T:System.Data.Services.DataServiceOperationContext" /> object that contains information about the current operation. </returns>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceActionParameter">
            <summary>Use this type to represent a parameter on a service action.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.OperationParameter">
            <summary>Use this type to represent a parameter on an operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameter.EmptyOperationParameterCollection">
            <summary>Empty parameter collection.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameter.name">
            <summary>Parameter name.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameter.type">
            <summary>Parameter type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationParameter.isReadOnly">
            <summary>true if the operation parameter is set to readonly i.e. fully initialized and validated.
            No more changes can be made, after this is set to readonly.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OperationParameter.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary> Initializes a new <see cref="T:System.Data.Services.Providers.OperationParameter" />. </summary>
            <param name="name">Name of parameter.</param>
            <param name="parameterType">resource type of parameter value.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OperationParameter.SetReadOnly">
            <summary> Sets this service operation parameter to readonly. </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationParameter.Name">
            <summary>Name of parameter.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationParameter.ParameterType">
            <summary>Type of parameter values.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationParameter.CustomState">
            <summary> PlaceHolder to hold custom state information about service operation parameter. </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationParameter.IsReadOnly">
            <summary> Returns true, if this parameter has been set to read only. Otherwise returns false. </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceActionParameter.EmptyServiceActionParameterCollection">
            <summary>Empty parameter collection.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceActionParameter.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary> Initializes a new <see cref="T:System.Data.Services.Providers.ServiceActionParameter" />. </summary>
            <param name="name">Name of parameter.</param>
            <param name="parameterType">resource type of parameter value.</param>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperation">
            <summary>Use this class to represent a custom service operation.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.Operation">
            <summary>Use this class to represent a custom service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.bindingParameter">
            <summary>The binding parameter to this function/action; null if this function/action is top-level or this operation is not a function or action.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.operationParameterBindingKind">
            <summary>The kind of the operation parameter binding - (Never, Sometimes, Always)</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.returnType">
            <summary>Return type of the operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.method">
            <summary>Protocol (for example HTTP) method the service operation responds to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.operationParameters">
            <summary>In-order parameters for this operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.resultKind">
            <summary>Kind of result expected from this operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.name">
            <summary>name of the service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.resourceSet">
            <summary>Entity set from which entities are read, if applicable.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.resultSetPathExpression">
            <summary>Path expression to calculate the result resource set of the function if the function returns an entity or a collection of entity.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.kind">
            <summary>The kind of the current service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.mimeType">
            <summary>MIME type specified on primitive results, possibly null.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.Operation.isReadOnly">
            <summary>Is true, if the service operation is set to readonly i.e. fully initialized and validated. No more changes can be made,
            after the service operation is set to readonly.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.#ctor(System.String,System.Data.Services.Providers.ServiceOperationResultKind,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceSetPathExpression,System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.OperationParameter},System.Data.Services.Providers.OperationParameterBindingKind,System.Data.Services.Providers.OperationKind)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Providers.Operation"/> instance.
            </summary>
            <param name="name">name of the operation.</param>
            <param name="resultKind">Kind of result expected from this operation.</param>
            <param name="returnType">Return type of the operation.</param>
            <param name="resultSet">EntitySet of the result expected from this operation, must be null if <paramref name="resultSetPathExpression"/> is not null.</param>
            <param name="resultSetPathExpression">Path expression to calculate the result set of the operation, must be null if <paramref name="resultSet"/> is not null.</param>
            <param name="method">Protocol (for example HTTP) method the service operation responds to.</param>
            <param name="parameters">In-order parameters for this operation.</param>
            <param name="operationParameterBindingKind">the kind of the operation parameter binding (Never, Sometimes, Always).</param>
            <param name="kind">The kind of the current service operation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.SetReadOnly">
            <summary> Set this service operation to readonly. </summary>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.GetResultKindFromReturnType(System.Data.Services.Providers.ResourceType,System.Boolean)">
            <summary>
            Returns the <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind"/> based on the <paramref name="returnType"/> of the operation.
            </summary>
            <param name="returnType">The return type of the operation.</param>
            <param name="isComposable">true if further composition is allowed after calling this operation; false otherwise.</param>
            <returns>Returns the <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind"/> based on the <paramref name="returnType"/> of the operation.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.EnsureReadOnly">
            <summary>
            Ensures the operation has been marked read-only.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.ValidateConstructorArguments(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceSetPathExpression,System.String,System.Data.Services.Providers.OperationParameterBindingKind,System.Data.Services.Providers.OperationKind)">
            <summary>
            Validates arguments to the constructor.
            </summary>
            <param name="operationName">Name of the operation.</param>
            <param name="returnType">Return type of the operation.</param>
            <param name="resultSet">EntitySet of the result expected from this operation, must be null if <paramref name="resultSetPathExpression"/> is not null.</param>
            <param name="resultSetPathExpression">Path expression to calculate the result set of the operation, must be null if <paramref name="resultSet"/> is not null.</param>
            <param name="method">Protocol (for example HTTP) method the service operation responds to.</param>
            <param name="operationParameterBindingKind">the kind of the operation parameter binding (Never, Sometimes, Always).</param>
            <param name="kind">The kind of the current service operation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.ValidateParameters(System.Data.Services.Providers.OperationParameterBindingKind,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.OperationParameter})">
            <summary>
            Validates the input parameters and convert it to a read only collection of parameters.
            </summary>
            <param name="operationParameterBindingKind">the kind of the operation parameter binding (Never, Sometimes, Always).</param>
            <param name="parameters">In-order parameters for this operation.</param>
            <returns>A read only collection of parameters.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.Operation.ThrowIfSealed">
            <summary>
            Throws an InvalidOperationException if this service operation is already set to readonly.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.Method">
            <summary>Protocol (for example HTTP) method the service operation responds to.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.MimeType">
            <summary>MIME type specified on primitive results, possibly null.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.Name">
            <summary>Name of the service operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.CustomState">
            <summary> PlaceHolder to hold custom state information about service operation. </summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.IsReadOnly">
            <summary> Returns true, if this service operation has been set to read only. Otherwise returns false. </summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.ResourceSet">
            <summary>Entity set from which entities are read (possibly null).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationParameters">
            <summary>Returns all the parameters for the given service operations.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationResultKind">
            <summary>Kind of result expected from this operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationResultType">
            <summary>Element type of the operation result. If the return type is a collection type,
            this is the item type of the return type; otherwise this is the same as return type.</summary>
            <example>
            For example if the operation returns an IEnumerable&lt;string&gt;, the return type would be of type
            Collection(Edm.String) and this property would be of type Edm.String.
            </example>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationReturnType">
            <summary>Return type of the operation. Note that if this property is a collection type, the ResultType
            property is the item type of this property; otherwise the ResultType property is the same as this property.</summary>
            <example>
            For example if the operation returns an IQueryable&lt;Customer&gt;, this property would be of type Collection(Customer)
            and the ResultType property would be of type Customer.
            </example>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationResultSetPathExpression">
            <summary>Path expression to calculate the result resource set of the function if the function returns an entity or a collection of entity.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationBindingParameter">
            <summary>
            The binding parameter to this function/action; null if this function/action is top-level or this operation is not a function or action.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.OperationParameterBindingKind">
            <summary>
            The kind of the operation parameter binding - (Never, Sometimes, Always).
            </summary>
            <remarks>If the first parameter of the operation is a binding parameter then the value must be set to OperationParameterBindingKind.Sometimes or 
            OperationParameterBindingKind.Always. If the first parameter is not a binding parameter then the value must be set to OperationParameterBindingKind.Never. 
            If the value is set to OperationParameterBindingKind.Always then the IDataServiceActionProvider.AdvertiseServiceAction method will not be called 
            for the action and the action will be always advertised by the default convention.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.Operation.Kind">
            <summary>
            The kind of the current service operation
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperation.parameters">
            <summary>In-order parameters for this operation.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperation.#ctor(System.String,System.Data.Services.Providers.ServiceOperationResultKind,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceOperationParameter})">
            <summary>Creates a new instance of the service operation.</summary>
            <param name="name">Name of the service operation.</param>
            <param name="resultKind">
              <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind" /> that is the kind of result expected from this operation.</param>
            <param name="resultType">
              <see cref="T:System.Data.Services.Providers.ResourceType" /> that is the result of the operation.</param>
            <param name="resultSet">
              <see cref="T:System.Data.Services.Providers.ResourceSet" /> that is the result of the operation.</param>
            <param name="method">Protocol method to which the service operation responds.</param>
            <param name="parameters">Ordered collection of <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" /> objects that are parameters for the operation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperation.GetReturnTypeFromResultType(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ServiceOperationResultKind)">
            <summary>
            Gets the return type of the operation.
            </summary>
            <param name="resultType">Type of element of the method result. This is the item type of the return type if the return type is a collection type.</param>
            <param name="resultKind">Kind of result expected from this operation.</param>
            <returns>Returns the return type of the operation.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.Parameters">
            <summary>Collection of in-order parameters for the service operation.</summary>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" /> objects.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.ResultKind">
            <summary>The kind of result that is expected by this service operation.</summary>
            <returns><see cref="T:System.Data.Services.Providers.ServiceOperationResultKind" /> that is the kind of result expected from this operation.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceOperation.ResultType">
            <summary>Type of results returned by this service operation.</summary>
            <returns>Type of the results as a <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
            <remarks>If the return type is a collection type, this is the item type of the return type; otherwise this is the same as return type.</remarks>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceActionProviderWrapper">
            <summary>
            Wrapper class for IDataServiceActionProvider interface.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.EmptyServiceOperationWrapperEnumeration">
            <summary>
            An empty array of ServiceOperationWrapper.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.EmptyServiceOperationWrapperList">
            <summary>
            An empty list of ServiceOperationWrapper.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.provider">
            <summary>
            The provider wrapper to use for finding other providers, caching operations, etc.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.maxProtocolVersion">
            <summary>
            The max prototol version of the service.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.getOperationContext">
            <summary>
            Delegate to retrieve the current operation operation context. Note that we do not cache the operation context itself because it can change in $batch cases.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.actionProvider">
            <summary>
            Action provider instance, or null if one was not found.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.actionResolver">
            <summary>
            Action resolution provider instance, or null if one was not found.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.attemptedToLoadActionProvider">
            <summary>
            Set to true when we attempted to load the action provider the first time so we don't try to load it repeatedly when the interface is not implemented.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.serviceActionByResourceTypeCache">
            <summary>
            Maps a resource type to a collection of actions bindable to that resource type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.serviceActionByResourceTypeHierarchyCache">
            <summary>
            Maps a base resource type to a collection of actions bindable to any of the resource types in that type hierarchy.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.#ctor(System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions,System.Data.Services.Common.DataServiceProtocolVersion,System.Func{System.Data.Services.DataServiceOperationContext})">
            <summary>
            Constructs the wrapper class for IDataServiceActionProvider
            </summary>
            <param name="provider">The provider.</param>
            <param name="maxProtocolVersion">The max protocol version of the service.</param>
            <param name="getOperationContext">A delegate to retrieve the current operation context when invoking a provider API.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.Create(System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions,System.Data.Services.Common.DataServiceProtocolVersion,System.Func{System.Data.Services.DataServiceOperationContext})">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper"/>.
            </summary>
            <param name="provider">The data service provider wrapper.</param>
            <param name="maxProtocolVersion">The max protocol version of the service.</param>
            <param name="getOperationContext">A delegate to retrieve the current operation context when invoking a provider API.</param>
            <returns>A new instance of <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.Create(System.Data.Services.IDataService)">
            <summary>
            Creates a new instance of <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper"/>.
            </summary>
            <param name="dataService">The data service.</param>
            <returns>A new instance of <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.CreateInvokableFromSegment(System.Data.Services.SegmentInfo)">
            <summary>
            Get the <see cref="T:System.Data.Services.Providers.IDataServiceInvokable"/> from the given <paramref name="actionSegment"/>.
            </summary>
            <param name="actionSegment">SegmentInfo instance for the service action.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.IDataServiceInvokable"/> from the given <paramref name="actionSegment"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.ResolveActionResult(System.Data.Services.SegmentInfo)">
            <summary>
            Updates the RequestEnumerable of <paramref name="actionSegment"/> with the actual results from the invokable.
            </summary>
            <param name="actionSegment">SegmentInfo instance for the service action.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.GetServiceActions">
            <summary>
            Returns all service actions in the provider.
            </summary>
            <returns>An enumeration of all service actions.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.TryResolveServiceAction(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Tries to find the <see cref="T:System.Data.Services.Providers.ServiceAction"/> for the given <paramref name="serviceActionName"/>.
            </summary>
            <param name="serviceActionName">The name of the service action to resolve. This must be the non-fully-qualified action name.
              Call DataServiceProviderWrapper.GetNameFromContainerQualifiedName() before calling this method.</param>
            <param name="bindingType">The binding type of the action, or null if it is unknown.</param>
            <returns>Returns the service action instance if the resolution is successful; null otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.CreateInvokable(System.Data.Services.Providers.OperationWrapper,System.Linq.Expressions.Expression[])">
            <summary>
            Builds up an instance of <see cref="T:System.Data.Services.Providers.IDataServiceInvokable"/> for the given <paramref name="serviceAction"/> with the provided <paramref name="parameterTokens"/>.
            </summary>
            <param name="serviceAction">The service action to invoke.</param>
            <param name="parameterTokens">The parameter tokens required to invoke the service action.</param>
            <returns>An instance of <see cref="T:System.Data.Services.Providers.IDataServiceInvokable"/> to invoke the action with.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.GetActionsBoundToAnyTypeInHierarchy(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the set of actions bound to any type in the hierearchy, and caches the results.
            </summary>
            <param name="resourceType">The starting type of the hierarchy.</param>
            <returns>The operations bound to any type in the hierearchy.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.GetServiceActionsByBindingParameterType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets a collection of actions having <paramref name="bindingParameterType"/> or any of it's base types as the binding parameter type.
            </summary>
            <param name="bindingParameterType">Instance of the binding parameter resource type (<see cref="T:System.Data.Services.Providers.ResourceType"/>) in question.</param>
            <returns>A list of actions having <paramref name="bindingParameterType"/> as the binding parameter type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.AdvertiseServiceAction(System.Data.Services.Providers.OperationWrapper,System.Object,System.Boolean,Microsoft.Data.OData.ODataAction@)">
            <summary>
            Determines whether a given <paramref name="serviceAction"/> should be advertised as bindable to the given <paramref name="resourceInstance"/>.
            </summary>
            <param name="serviceAction">Service action to be advertised.</param>
            <param name="resourceInstance">Instance of the resource to which the service action is bound.</param>
            <param name="resourceInstanceInFeed">true if the resource instance to be serialized is inside a feed; false otherwise. The value true
            suggests that this method might be called many times during serialization since it will get called once for every resource instance inside
            the feed. If it is an expensive operation to determine whether to advertise the service action for the <paramref name="resourceInstance"/>,
            the provider may choose to always advertise in order to optimize for performance.</param>
            <param name="actionToSerialize">The <see cref="T:Microsoft.Data.OData.ODataAction"/> to be serialized. The server constructs 
            the version passed into this call, which may be replaced by an implementation of this interface.
            This should never be set to null unless returning false.</param>
            <returns>true if the service action should be advertised; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.GetServiceActionsBySpecificBindingParameterTypes(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceType})">
            <summary>
            Gets the set of actions bound to any of the given binding parameter types.
            </summary>
            <param name="bindingParameterTypes">The binding parameter types.</param>
            <returns>The operations bound to any of the specified types.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.GetServiceActionsBySpecificBindingParameterType(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.OperationCache)">
            <summary>
            Gets the set of actions bound to the specific parameter type, either from the cache or by calling the provider.
            </summary>
            <param name="bindingParameterType">The binding parameter type.</param>
            <param name="existingOperations">The cache of known actions, used to detect duplicates.</param>
            <returns>The operations bound to the specific type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.TryLoadActionProvider">
            <summary>
            Tries to load an implementation of IDataServiceActionProvider from the service. Return true if successful; false otherwise.
            </summary>
            <returns>true if successfully loaded an implementation of IDataServiceActionProvider; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.ValidateCanAdvertiseServiceAction(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ServiceAction,System.Data.Services.Providers.OperationCache)">
            <summary>
            Validates if a service action is advertisable.
            </summary>
            <param name="resourceType">Resource type to which the service action is bound to.</param>
            <param name="serviceAction">Service action to be validated for advertisement.</param>
            <param name="existingOperations">The current set of actions. Used to avoid duplicate actions.</param>
            <returns>Validated service operation to be advertised. Null, if the service operation is not suppose to be advertised.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.TryResolveServiceActionFromProvider(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ServiceAction@)">
            <summary>
            Tries to resolve the action by invoking TryResolveServiceAction on the underlying provider.
            This is a lower-level call which does not cache results. Caching should be provided by the caller.
            </summary>
            <param name="serviceActionName">The name of the service action taken from a segment of the URI.</param>
            <param name="bindingType">The current binding type of the action, or null if there is no binding type.</param>
            <param name="action">The action if one is returned from the provider.</param>
            <returns>Whether or not the provider returned an action for the given inputs.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceActionProviderWrapper.IsImplemented">
            <summary>
            Gets a value indicating whether the action provider is implemented on the service.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceActionProviderWrapper.ServiceActionByResourceTypeCache">
            <summary>
            Maps a resource type to a collection of actions bindable to that resource type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceActionProviderWrapper.ServiceActionByResourceTypeHierarchyCache">
            <summary>
            Maps a base resource type to a collection of actions bindable to any of the resource types in that type hierarchy.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceActionProviderWrapper.ActionProvider">
            <summary>
            Gets the IDataServiceActionProvider instance.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceActionProviderWrapper.OperationContext">
            <summary>
            Gets the current operation context. Note that we do not cache the operation context because it can change in $batch cases, and this property may return a different instance.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions">
            <summary>
            Interface to allow substitution of <see cref="T:System.Data.Services.Providers.DataServiceProviderWrapper"/> for unit testing <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper"/>.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions.ValidateOperation(System.Data.Services.Providers.ServiceAction)">
            <summary>
            Validates if the service operation should be visible and is read only. If the service operation
            rights are set to None the service operation should not be visible.
            </summary>
            <param name="operation">Operation to be validated.</param>
            <returns>Validated service operation, null if the service operation is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions.AddOperationToEdmModel(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Add the given service operation to the model.
            </summary>
            <param name="operationWrapper">ServiceOperationWrapper instance to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions.TryGetCachedOperationWrapper(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.OperationWrapper@)">
            <summary>
            Tries to find a cached wrapper for an operation with the given name and binding parameter type.
            </summary>
            <param name="operationName">The operation name.</param>
            <param name="bindingType">The operation's binding parameter's type, or null.</param>
            <param name="wrapper">The wrapper, if found.</param>
            <returns>Whether or not a wrapper was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions.GetService``1">
            <summary>
            Retrieve an implementation of a data service interface (ie. IUpdatable, IExpandProvider,etc)
            </summary>
            <typeparam name="T">The type representing the requested interface</typeparam>
            <returns>An object implementing the requested interface, or null if not available</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions.GetAllTypesInHierarchy(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets all the types in the types's hierarchy. This includes both the base types, the derived types, and the starting type.
            </summary>
            <param name="startingType">The starting type.</param>
            <returns>The types derived from or base of the starting type.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper">
            <summary>
            Default implementation of <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper.IDataServiceProviderWrapperForActions"/> which delegates directly to <see cref="T:System.Data.Services.Providers.DataServiceProviderWrapper"/>.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.provider">
            <summary>
            The provider wrapper.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.#ctor(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper"/>.
            </summary>
            <param name="provider">The provider wrapper.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.ValidateOperation(System.Data.Services.Providers.ServiceAction)">
            <summary>
            Validates if the service operation should be visible and is read only. If the service operation
            rights are set to None the service operation should not be visible.
            </summary>
            <param name="operation">Operation to be validated.</param>
            <returns>Validated service operation, null if the service operation is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.AddOperationToEdmModel(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Add the given service operation to the model.
            </summary>
            <param name="operationWrapper">ServiceOperationWrapper instance to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.TryGetCachedOperationWrapper(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.OperationWrapper@)">
            <summary>
            Tries to find a cached wrapper for an operation with the given name and binding parameter type.
            </summary>
            <param name="operationName">The operation name.</param>
            <param name="bindingType">The operation's binding parameter's type, or null.</param>
            <param name="wrapper">The wrapper, if found.</param>
            <returns>Whether or not a wrapper was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.GetService``1">
            <summary>
            Retrieve an implementation of a data service interface (ie. IUpdatable, IExpandProvider,etc)
            </summary>
            <typeparam name="T">The type representing the requested interface</typeparam>
            <returns>An object implementing the requested interface, or null if not available</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceActionProviderWrapper.DefaultProviderWrapper.GetAllTypesInHierarchy(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets all the types in the types's hierarchy. This includes both the base types, the derived types, and the starting type.
            </summary>
            <param name="startingType">The starting type.</param>
            <returns>The types derived from or base of the starting type.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceInvokable">
            <summary>
            This interface declares the methods required to support invoking of an operation.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceInvokable.Invoke">
            <summary> Invokes the underlying operation. </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceInvokable.GetResult">
            <summary> Gets the result of the call to Invoke. </summary>
            <returns>The result of the call to Invoke.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceActionProvider">
            <summary>
            This interface declares the methods required to support ServiceActions.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceActionProvider.GetServiceActions(System.Data.Services.DataServiceOperationContext)">
            <summary>Return a collection of <see cref="T:System.Data.Services.Providers.ServiceActions" /> instances that represent the service actions implemented by the WCF Data Service. </summary>
            <returns>An enumeration of all service actions.</returns>
            <param name="operationContext">The data service operation context instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceActionProvider.TryResolveServiceAction(System.Data.Services.DataServiceOperationContext,System.String,System.Data.Services.Providers.ServiceAction@)">
            <summary>Attempts to retrieve the <see cref="T:System.Data.Services.Providers.ServiceAction" /> instance for the specified service action. </summary>
            <returns>true if the resolution is successful; false otherwise.</returns>
            <param name="operationContext">The data service operation context instance.</param>
            <param name="serviceActionName">The name of the service action to resolve.</param>
            <param name="serviceAction">Returns the service action instance if the resolution is successful; null otherwise.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceActionProvider.GetServiceActionsByBindingParameterType(System.Data.Services.DataServiceOperationContext,System.Data.Services.Providers.ResourceType)">
            <summary> Gets a collection of service actions that match the specified binding parameter type. </summary>
            <returns>A collection of <see cref="T:System.Data.Service.Providers.ServiceAction" /> instances. </returns>
            <param name="operationContext">The data service operation context instance.</param>
            <param name="bindingParameterType">The binding parameter resource type (<see cref="T:System.Data.Services.Providers.ResourceType" />) in question.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceActionProvider.CreateInvokable(System.Data.Services.DataServiceOperationContext,System.Data.Services.Providers.ServiceAction,System.Object[])">
            <summary> Creates an instance of <see cref="T:System.Data.Services.Providers.IDataServiceInvokable" /> for the specified service action. </summary>
            <returns>An instance of <see cref="T:System.Data.Services.Providers.IDataServiceInvokable" /></returns>
            <param name="operationContext">The data service operation context instance.</param>
            <param name="serviceAction">The T:System.Data.Services.Providers.ServiceAction instance that represents the service action to invoke.</param>
            <param name="parameterTokens">The parameters required to invoke the service action.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceActionProvider.AdvertiseServiceAction(System.Data.Services.DataServiceOperationContext,System.Data.Services.Providers.ServiceAction,System.Object,System.Boolean,Microsoft.Data.OData.ODataAction@)">
            <summary>
            Determines whether a given <paramref name="serviceAction"/> should be advertised as bindable to the given <paramref name="resourceInstance"/>.
            </summary>
            <param name="operationContext">The data service operation context instance.</param>
            <param name="serviceAction">Service action to be advertised.</param>
            <param name="resourceInstance">Instance of the resource to which the service action is bound.</param>
            <param name="resourceInstanceInFeed">true if the resource instance to be serialized is inside a feed; false otherwise. The value true
            suggests that this method might be called many times during serialization since it will get called once for every resource instance inside
            the feed. If it is an expensive operation to determine whether to advertise the service action for the <paramref name="resourceInstance"/>,
            the provider may choose to always advertise in order to optimize for performance.</param>
            <param name="actionToSerialize">The <see cref="T:Microsoft.Data.OData.ODataAction"/> to be serialized. The server constructs 
            the version passed into this call, which may be replaced by an implementation of this interface.
            This should never be set to null unless returning false.</param>
            <returns>true if the service action should be advertised; false otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceExecutionProvider">
            <summary>
            Default internal implementation of IDataServiceExecutionProvider.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceExecutionProvider">
            <summary>
            Interface to be implemented by providers who want to support actions and functions.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceExecutionProvider.Execute(System.Linq.Expressions.Expression,System.Data.Services.DataServiceOperationContext)">
            <summary>
            Invokes an expression that represents the full request.
            </summary>
            <param name="requestExpression"> An expression that includes calls to
            one or more MethodInfo or one or more calls to 
            IDataServiceUpdateProvider2.InvokeAction(..) or 
            IDataServiceQueryProvider2.InvokeFunction(..)</param>
            <param name="context"> Current context.</param>
            <returns> The result of the invoked expression.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProvider.Execute(System.Linq.Expressions.Expression,System.Data.Services.DataServiceOperationContext)">
            <summary>
            Invokes an expression that represents the full request.
            </summary>
            <param name="requestExpression"> An expression that includes calls to
            one or more MethodInfo or one or more calls to 
            IDataServiceUpdateProvider2.InvokeAction(..) or 
            IDataServiceQueryProvider2.InvokeFunction(..)</param>
            <param name="operationContext"> Current context. </param>
            <returns>The result of the invoked expression.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderState">
            <summary>
            An internal enumeration to track the differnt states of the metadata caching and materialization.
            We use a tri-state enumeration instead of a boolean flag since the URI parser will
            look up entity sets and service operations which don't require the full metadata
            but will require the entity containers.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderState.Incremental">
            <summary>Incremental materialization state.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderState.Full">
            <summary>Full materialization state.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceExecutionProviderMethods">
            <summary>Data service methods that can be inside the expression that is passed to the IDataServiceExecutionProvider interface.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceExecutionProviderMethods.OfTypeMethodInfo">
            <summary>MethodInfo for TypeIs.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceExecutionProviderMethods.SetContinuationTokenMethodInfo">
            <summary>MethodInfo for SetContinuationToken.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceExecutionProviderMethods.ApplyProjectionsMethodInfo">
            <summary>MethodInfo for ApplyProjections.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceExecutionProviderMethods.CreateServiceActionInvokableMethodInfo">
            <summary>MethodInfo for IDataServiceActionProvider.CreateInvokable().</summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderMethods.OfType``2(System.Linq.IQueryable{``0},System.Data.Services.Providers.ResourceType)">
            <summary>
            Filters the given <paramref name="query"/> based on the <paramref name="resourceType"/>.
            </summary>
            <typeparam name="TSource">Type of the IQueryable instance passed in <paramref name="query"/>.</typeparam>
            <typeparam name="TResult">Type representing the resource type passed in <paramref name="resourceType"/>.</typeparam>
            <param name="query">IQueryable instance.</param>
            <param name="resourceType">ResourceType based on which IQueryable needs to be filtered.</param>
            <returns>an IQueryable instance filtered by ResourceType.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderMethods.SetContinuationToken``1(System.Data.Services.Providers.IDataServicePagingProvider,System.Linq.IQueryable{``0},System.Data.Services.Providers.ResourceType,System.Object[])">
            <summary>
            Forwards the call to the SetContinuationToken method on <paramref name="pagingProvider"/> to give the
            continuation token ($skiptoken) from the request URI, parsed into primitive values, to the provider.
            </summary>
            <typeparam name="TElement">Element type of the query.</typeparam>
            <param name="pagingProvider">An instance of <see cref="T:System.Data.Services.Providers.IDataServicePagingProvider"/>.</param>
            <param name="query">Query for which continuation token is being provided.</param>
            <param name="resourceType">Resource type of the result on which skip token is to be applied.</param>
            <param name="continuationToken">Continuation token parsed into primitive typed values.</param>
            <returns>Returns <paramref name="query"/> after calling SetContinuationToken.</returns>
            <remarks>This method simply forwards the call to IDataServicePagingProvider.SetContinuationToken(). This
            method is added because IDataServicePagingProvider.SetContinuationToken() returns void and this method
            returns <paramref name="query"/> so that we can call SetContinuationToken() in the expression tree
            without using the Block expression, to make the expression tree simpler to visit.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderMethods.ApplyProjections(System.Object,System.Linq.IQueryable,System.Object,System.Boolean)">
            <summary>Applies expansions and projections to the specified <paramref name="source"/>.</summary>
            <param name="projectionProvider">IProjectionProvider instance.</param>
            <param name="source"><see cref="T:System.Linq.IQueryable"/> object to expand and apply projections to.</param>
            <param name="rootProjectionNode">The root node of the tree which describes
            the projections and expansions to be applied to the <paramref name="source"/>.</param>
            <param name="epmRelevantForCurrentFormat">Determine if the current Response format needs epm values.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> object, with the results including 
            the expansions and projections specified in <paramref name="rootProjectionNode"/>. 
            </returns>
            <remarks>
            The returned <see cref="T:System.Linq.IQueryable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/> interface 
            to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="rootProjectionNode"/>.OrderingInfo then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            If projections are required, the provider may choose to return <see cref="T:System.Linq.IQueryable"/>
            which returns instances of <see cref="T:System.Data.Services.IProjectedResult"/>. In that case property values are determined
            by calling the <see cref="M:System.Data.Services.IProjectedResult.GetProjectedPropertyValue(System.String)"/> method instead of
            accessing properties of the returned object directly.
            If both expansion and projections are required, the provider may choose to return <see cref="T:System.Linq.IQueryable"/>
            of <see cref="T:System.Data.Services.IExpandedResult"/> which in turn returns <see cref="T:System.Data.Services.IProjectedResult"/> from its
            <see cref="P:System.Data.Services.IExpandedResult.ExpandedElement"/> property.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderMethods.CreateServiceActionInvokable(System.Data.Services.DataServiceOperationContext,System.Data.Services.Providers.IDataServiceActionProvider,System.Data.Services.Providers.ServiceAction,System.Object[])">
            <summary>
            Builds up an instance of <see cref="T:System.Data.Services.Providers.IDataServiceInvokable"/> for the given <paramref name="serviceAction"/> with the provided <paramref name="parameterTokens"/>.
            </summary>
            <param name="operationContext">The data service operation context instance.</param>
            <param name="actionProvider">The IDataServiceActionProvider instance.</param>
            <param name="serviceAction">The service action to invoke.</param>
            <param name="parameterTokens">The parameter tokens required to invoke the service action.</param>
            <returns>An instance of <see cref="T:System.Data.Services.Providers.IDataServiceInvokable"/> to invoke the action with.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.ExpressionEvaluator">
            <summary>
            Class to evaluate the expression we would pass to the execution provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpressionEvaluator.CreateNewArrayMethodInfo">
            <summary>MethodInfo for CreateNewArray.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.Evaluate(System.Linq.Expressions.Expression)">
            <summary>
            Evaluates the given expression.
            </summary>
            <param name="exp">Expression to evaluate.</param>
            <returns>Final result of the evaluation.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Main visit method for ALinqExpressionVisitor
            </summary>
            <param name="exp">The expression to visit</param>
            <returns>The visited expression </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            UnaryExpression visit method
            </summary>
            <param name="u">The UnaryExpression expression to visit</param>
            <returns>The visited UnaryExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            MethodCallExpression visit method
            </summary>
            <param name="m">The MethodCallExpression expression to visit</param>
            <returns>The visited MethodCallExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            LambdaExpression visit method
            </summary>
            <param name="lambda">The LambdaExpression to visit</param>
            <returns>The visited LambdaExpression</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            NewArrayExpression visit method
            </summary>
            <param name="na">The NewArrayExpression to visit</param>
            <returns>The visited NewArrayExpression</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpressionEvaluator.CreateNewArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new array wrapped in a ConstantExpression.
            </summary>
            <typeparam name="TElement">Element type of the array.</typeparam>
            <param name="elements">Elements to initialize the array with.</param>
            <returns>ConstantExpression containing the newly created array.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceExecutionProviderWrapper">
            <summary>
            Wrapper class for IDataServiceExecutionProvider interface.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.dataService">
            <summary>
            Data service instance
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.executionProvider">
            <summary>
            Execution provider instance
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.#ctor(System.Data.Services.IDataService)">
            <summary>
            Constructs the wrapper class for IDataServiceExecutionProvider
            </summary>
            <param name="dataService">The IDataService associated with this execution provider.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.GetSingleResultFromRequest(System.Data.Services.SegmentInfo)">
            <summary>
            Get the single result from the given segment info
            </summary>
            <param name="segmentInfo">segmentInfo which contains the request query</param>
            <returns>query result as returned by the IQueryable query</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.GetResultEnumerableFromRequest(System.Data.Services.SegmentInfo)">
            <summary>
            Invokes the given request expression and return the resulting IEnumerable.
            </summary>
            <param name="segmentInfo">Request segment</param>
            <returns>Result enumeration</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Passes the expression along to the execution provider, which invokes it. 
            </summary>
            <seealso cref="T:System.Data.Services.Providers.IDataServiceExecutionProvider"/>
            <param name="requestExpression"> An expression that includes calls to
            one or more MethodInfo or one or more calls to 
            IDataServiceUpdateProvider2.InvokeAction(..) or 
            IDataServiceQueryProvider2.InvokeFunction(..)</param>
            <returns>The object the invoked expression returns.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceExecutionProviderWrapper.ExecutionProvider">
            <summary>
            Gets the default DataServiceExecutionProvider.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty"/> implementation supporting setting of the association end.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.declaringType">
            <summary>The declaring type of the navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.name">
            <summary>The name of the navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.type">
            <summary>The type of the navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.partner">
            <summary>The destination end of this navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.isPrinciple">
            <summary>The destination end of this navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.deleteAction">
            <summary>The on-delete action of the navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.dependentProperties">
            <summary>The dependent properties of the referential constraint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.#ctor(Microsoft.Data.Edm.Library.EdmEntityType,System.Data.Services.Providers.ResourceProperty,Microsoft.Data.Edm.IEdmTypeReference)">
            <summary>
            Constructor.
            </summary>
            <param name="declaringType">The declaring type of the navigation property.</param>
            <param name="property">The resource property to create the navigation property from.</param>
            <param name="type">The type of the navigation property.</param>
            <remarks>This constructor assumes that the entity set for this service operation has already be created.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.FixUpNavigationProperty(Microsoft.Data.Edm.IEdmNavigationProperty,System.Boolean,Microsoft.Data.Edm.EdmOnDeleteAction)">
            <summary>
            Matches the navigation property with its partner and fills in missing information.
            </summary>
            <param name="partnerProperty">The navigation property that corresponds to the opposite end of this navigation properties association.</param>
            <param name="isPrincipleEnd">A value indicating whether this navigation property is on the principle end of a referential constraint.</param>
            <param name="propertyDeleteAction">The action to execute on the deletion of this end of a bidirectional association.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.SetDependentProperties(System.Collections.Generic.IList{Microsoft.Data.Edm.IEdmStructuralProperty})">
            <summary>
            Dependent properties of this navigation property.
            </summary>
            <param name="properties">The dependent properties</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.ResourceProperty">
            <summary>
            The <see cref="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.ResourceProperty"/> this edm property was created from.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.Partner">
            <summary>
            Gets the destination end of this navigation property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.OnDelete">
            <summary>
            Gets the action to execute on the deletion of this end of a bidirectional association.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.DependentProperties">
            <summary>
            Gets the dependent properties of this navigation property, returning null if this is the principal end or if there is no referential constraint.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.IsPrincipal">
            <summary>
            Gets whether this navigation property originates at the principal end of an association.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.ContainsTarget">
            <summary>
            Gets a value indicating whether the navigation target is contained inside the navigation source.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.Type">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.DeclaringType">
            <summary>
            Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmNavigationProperty.Name">
            <summary>
            Gets the name of this navigation property.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmComplexType">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmComplexType"/> implementation that supports delay-loading of properties and remembers the <see cref="P:System.Data.Services.Providers.MetadataProviderEdmComplexType.ResourceType"/> it was based on.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmComplexType.#ctor(System.String,System.Data.Services.Providers.ResourceType,Microsoft.Data.Edm.IEdmComplexType,System.Boolean,System.Action{System.Data.Services.Providers.EdmComplexTypeWithDelayLoadedProperties})">
            <summary>
            Initializes a new instance of the MetadataProviderEdmEntityType class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="resourceType">The resource type this edm type is based on.</param>
            <param name="baseType">The base type of this entity type.</param>
            <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
            <param name="propertyLoadAction">An action that is used to create the properties for this type.</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmComplexType.ResourceType">
            <summary>
            The resource-type that this type was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmEntityType">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> implementation that supports delay-loading of properties and remembers the <see cref="P:System.Data.Services.Providers.MetadataProviderEdmEntityType.ResourceType"/> it was based on.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntityType.#ctor(System.String,System.Data.Services.Providers.ResourceType,Microsoft.Data.Edm.IEdmEntityType,System.Boolean,System.Boolean,System.Action{System.Data.Services.Providers.EdmEntityTypeWithDelayLoadedProperties})">
            <summary>
            Initializes a new instance of the MetadataProviderEdmEntityType class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="resourceType">The resource type this edm type is being created from.</param>
            <param name="baseType">The base type of this entity type.</param>
            <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
            <param name="isOpen">Denotes if the type is open.</param>
            <param name="propertyLoadAction">An action that is used to create the properties for this type.</param>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntityType.ResourceType">
            <summary>
            The resource-type that this type was created from.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmFunctionImport">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport"/> implementation backed by an IDSMP metadata provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.DefaultIsBindable">
            <summary>Default value for the IsBindable property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.DefaultIsComposable">
            <summary>Default value of the IsComposable property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.DefaultIsSideEffecting">
            <summary>Default value for the IsSideEffecting property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.model">
            <summary>The model this instance belongs to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.container">
            <summary>The container this instance belongs to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.operation">
            <summary>
            The resource operation underlying this function import.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.parameters">
            <summary>
            The parameters of the service operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.isSideEffecting">
            <summary>
            Value indicating whether this function import has side-effects;
            cannot be true if <see cref="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.isComposable"/> is true.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.isComposable">
            <summary>
            Value indicating whether this functon import can be composed inside expressions.
            <see cref="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.isComposable"/> cannot be true if <see cref="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.isSideEffecting"/> is true.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.isBindable">
            <summary>
            Value indicating whether this function import can be used as 
            an extension method for the type of the first parameter of this function import.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.entitySetPath">
            <summary>
            Gets the entity set path of the function import.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.#ctor(System.Data.Services.Providers.MetadataProviderEdmModel,System.Data.Services.Providers.MetadataProviderEdmEntityContainer,System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Constructor.
            </summary>
            <param name="model">The model this instance belongs to.</param>
            <param name="container">The container this instance belongs to.</param>
            <param name="operation">The resource operation underlying this function import.</param>
            <remarks>This constructor assumes that the entity set for this service operation has already be created.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.FindParameter(System.String)">
            <summary>
            Method to find a parameter of the function import by name.
            </summary>
            <param name="name">The name of the parameter to find.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmFunctionParameter"/> with the given name or null if no such parameter is found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.CreateReturnTypeReference">
            <summary>
            Creates an edm type reference for the return type of this operation.
            </summary>
            <returns>The return type reference.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsSideEffecting">
            <summary>
            Gets a value indicating whether this function import has side-effects.
            <see cref="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsSideEffecting"/> cannot be set to true if <see cref="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsComposable"/> is set to true.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsComposable">
            <summary>
            Gets a value indicating whether this functon import can be composed inside expressions.
            <see cref="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsComposable"/> cannot be set to true if <see cref="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsSideEffecting"/> is set to true.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.IsBindable">
            <summary>
            Gets whether value indicating whether this function import can be used as an extension method for the type of the first parameter of this function import.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.EntitySet">
            <summary>
            The entity set underlying the result of the function import or null
            if no such entity set exists.
            </summary>
            <remarks>The property assumes that the entity set has already been created and cached by the model so we can look it up here.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.Parameters">
            <summary>
            An enumerable of all parameters of the function import.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.ReturnType">
            <summary>
            The <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/> of the return type of the service
            operation or null if no return type exists.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.Name">
            <summary>
            The name of the function import.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.ContainerElementKind">
            <summary>
            The container element kind; EdmContainerElementKind.FunctionImport for function imports.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.Container">
            <summary>
            Gets the container of this function import.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmFunctionImport.ServiceOperation">
            <summary>
            The resource service operation underlying this function import.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmEntityContainer">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmEntityContainer"/> implementation backed by an IDSMP metadata provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.model">
            <summary>The model this instance belongs to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.containerNamespace">
            <summary>
            The name of the entity container.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.containerName">
            <summary>
            The name of the entity container.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.entitySetCache">
            <summary>The cache of entity sets.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.functionImportCache">
            <summary>The cache of function imports.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.#ctor(System.Data.Services.Providers.MetadataProviderEdmModel,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="model">The model this instance belongs to.</param>
            <param name="containerName">The name of the entity container.</param>
            <param name="entityContainerSchemaNamespace">The namespace of the schema this entity container should be made part of during serialization.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.FindEntitySet(System.String)">
            <summary>
            Searches for an entity set with the given name in this entity container and returns null if no such set exists.
            </summary>
            <param name="name">The name of the element being found.</param>
            <returns>The requested entity set, or null if the entity set does not exist.</returns>
            <remarks>
            Cache state: EntityContainers required. We only support looking up entity sets once
                all entity containers have been completely populated and cached.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.FindFunctionImports(System.String)">
            <summary>
            Searches for function imports with the given name in this entity container and returns an empty enumerable
            if no such function import exists.
            </summary>
            <param name="name">The name of the function import being found.</param>
            <returns>A group of the requested function imports, or an empty enumerable if no such function import exists.</returns>
            <remarks>
            Cache state: EntityContainers required. We only support looking up an function imports once
                all entity containers have been completely populated and cached.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.AddEntitySet(System.String,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Adds an entity set backed by the <paramref name="resourceSet"/> to the entity container.
            </summary>
            <param name="entitySetName">The name of the entity set.</param>
            <param name="resourceSet">The resource set backing the entity set to be created.</param>
            <returns>an instance of IEdmEntitySet that just got added.</returns>
            <remarks>
            This method will also create the association sets and associations for the entity set.
            Materialization state: EntityContainers required. No change in materialization state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.EnsureFunctionImport(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Add a function import to the entity container.
            </summary>
            <param name="serviceOperation">The service operation to add to the entity container.</param>
            <returns>The newly added or cached function import instance.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.Elements">
            <summary>
            Gets a collection of the elements of this entity container.
            </summary>
            <remarks>
            Cache state: EntityContainers required. We only support enumerating the elements once
                the entity container has been completely populated which is the case when all entity containers
                have been cached.
            </remarks>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.SchemaElementKind">
            <summary>
            Gets the schema kind of this element.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.Namespace">
            <summary>
            Gets the namespace of this element.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmEntityContainer.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderUtils">
            <summary>
            Helper methods for the IDSMP-to-EdmLib bridge.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.DataServiceEdmVersionMap">
            <summary>
            Maps a given data service version with the highest supported Edm version.
            New entry should be created for each new WCF DS version.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.PropertyNameIncludesReservedODataCharacters">
            <summary>
            Validation rule used when serializing metadata documents that ensures that property names don't include
            characters that are reserved in OData.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.Version1Dot0">
            <summary>Version number for CSDL 1.0.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.Version1Dot1">
            <summary>Version number for CSDL 1.1.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.Version1Dot2">
            <summary>Version number for CSDL 1.2.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.Version2Dot0">
            <summary>Version number for CSDL 2.0.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.Version3Dot0">
            <summary>Version number for CSDL 3.0.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.xmlWriterSettingsForElementAnnotations">
            <summary>Xml writer settings for writing element annotations.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderUtils.InvalidCharactersInPropertyNames">
            <summary>The set of characters that are invalid in property names.</summary>
            <remarks>Keep this array in sync with ValidationUtils.InvalidCharactersInPropertyNames in ODataLib.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetEntitySetName(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Compute the entity set name from the resource set.
            </summary>
            <param name="resourceSet">Resource set instance whose name needs to be returned.</param>
            <returns>Local name of the entity set.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetAssociationName(System.Data.Services.Providers.ResourceAssociationSet)">
            <summary>
            Given the association set, generate the association name.
            </summary>
            <param name="associationSet">The association set to generate the association name for.</param>
            <returns>The generated association name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetAssociationEndName(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the string key to look up an association from the namespace.
            </summary>
            <param name="resourceType">The resource type contributing to the association name.</param>
            <param name="resourceProperty">The navigation property contributing to the association name.</param>
            <returns>The lookup key to find the association by name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ToVersion(System.Data.Services.Providers.MetadataEdmSchemaVersion)">
            <summary>Returns the version number given an <see cref="T:System.Data.Services.Providers.MetadataEdmSchemaVersion"/>.</summary>
            <param name="schemaVersion">EDM schema version.</param>
            <returns>Version number corresponding to the <paramref name="schemaVersion"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetMultiplicity(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Computes the multiplicity of a navigation property.
            </summary>
            <param name="property">The navigation to compute the multiplicity for.</param>
            <returns>The <see cref="T:Microsoft.Data.Edm.EdmMultiplicity"/> value of the multiplicity.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertMultiplicity(System.String)">
            <summary>
            Converts the string representation of a multiplicity to the corresponding enumeration value.
            </summary>
            <param name="multiplicity">The string representation of the multiplicity to convert.</param>
            <returns>The <see cref="T:Microsoft.Data.Edm.EdmMultiplicity"/> representation of the <paramref name="multiplicity"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreatePrimitiveTypeReference(System.Data.Services.Providers.ResourceType)">
            <summary>
            Creates a primitive type reference for the specified <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type to create a primitive type reference for.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveTypeReference"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>This method will remove all processed facets from the annotations.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreatePrimitiveTypeReference(System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Creates a primitive type reference for the specified <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type to create a primitive type reference for.</param>
            <param name="annotations">The optional annotations for the resource type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveTypeReference"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>This method will remove all processed facets from the annotations.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetAndRemoveDefaultValue(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Get the value of the default value annotation (if present).
            </summary>
            <param name="annotations">The annotations that optionally hold the default value annotation.</param>
            <returns>The string representation of the default value if present; otherwise null.</returns>
            <remarks>This method will remove the default value annotation from the annotations if found.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetAndRemoveNullableFacet(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Get the value of the nullable annotation (if present).
            </summary>
            <param name="annotations">The annotations that optionally hold the nullability annotation.</param>
            <returns>The boolean value of the nullable facet if it is present; otherwise returns null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertEntityPropertyMappings(System.Data.Services.Providers.MetadataProviderEdmModel,System.Data.Services.Providers.ResourceType,Microsoft.Data.Edm.Library.EdmEntityType)">
            <summary>
            Converts the entity property mappings on the resource type and adds them to the entity type.
            </summary>
            <param name="model">The model containing the annotations.</param>
            <param name="resourceType">The resource type with the entity property mappings to convert.</param>
            <param name="entityType">The entity type to add the converted mappings to.</param>
            <remarks>Materialization state: none required. Materialization state will not change.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertCustomAnnotations(System.Data.Services.Providers.MetadataProviderEdmModel,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},Microsoft.Data.Edm.IEdmElement)">
            <summary>
            Convert the custom resource annotations to serializable EDM annotations.
            </summary>
            <param name="model">The model containing the annotations.</param>
            <param name="customAnnotations">The list of custom annotations to convert.</param>
            <param name="target">The target <see cref="T:Microsoft.Data.Edm.IEdmElement"/> to add the converted annotations to.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertCustomAnnotations(System.Data.Services.Providers.MetadataProviderEdmModel,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Converts custom annotations in to IEdmImediateValueAnnotations
            </summary>
            <param name="model">The model containing the annotations.</param>
            <param name="customAnnotations">The list of custom annotations to convert.</param>
            <returns>The converted annotations.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.FixUpNavigationPropertyWithAssociationSetData(Microsoft.Data.Edm.IEdmNavigationProperty,Microsoft.Data.Edm.IEdmNavigationProperty,System.Boolean,System.Collections.Generic.List{Microsoft.Data.Edm.IEdmStructuralProperty},Microsoft.Data.Edm.EdmOnDeleteAction,Microsoft.Data.Edm.EdmMultiplicity)">
            <summary>
            Updates a navigation property with information that will create associations and association sets
            </summary>
            <param name="navigationProperty">The navigation property to update.</param>
            <param name="partner">The partner of the navigation property.</param>
            <param name="isPrinciple">A value indicating whether this navigation property is the principle end of the association.</param>
            <param name="dependentProperties">Dependent properties of the association.</param>
            <param name="deleteAction">Action to execute on the deletion of this end of a bidirectional relationship.</param>
            <param name="opposingMultiplicity">Multiplicity of the other end of a relationship.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ShouldDisablePrimitivePropertyNullValidation(System.Data.Services.Providers.ResourceProperty,Microsoft.Data.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Checks if null value validation should be disallowed for primitive properties.
            </summary>
            <param name="resourceProperty">The primitive property</param>
            <param name="primitiveTypeReference">The primitive type reference to check for </param>
            <returns>True if null validation should be disabled.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetResourceType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets an instance of <see cref="T:System.Data.Services.Providers.ResourceType"/> for the given <see cref="T:Microsoft.Data.Edm.IEdmType"/>, assuming it was originally created from the resource type.
            </summary>
            <param name="edmType">The edm type to get the resource type for.</param>
            <returns>The resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetResourceType(Microsoft.Data.OData.Query.SemanticAst.TypeSegment)">
            <summary>
            Gets an instance of <see cref="T:System.Data.Services.Providers.ResourceType"/> for the given <see cref="T:Microsoft.Data.OData.Query.SemanticAst.TypeSegment"/>.
            </summary>
            <param name="typeSegment">The type segment to get the resource type for.</param>
            <returns>The resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreateElementAnnotationStringRepresentation(System.Xml.Linq.XElement)">
            <summary>
            Creates the string representation of an element annotation represented as <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="xmlElement">The <see cref="T:System.Xml.Linq.XElement"/> to convert to string.</param>
            <returns>The string representation of the <paramref name="xmlElement"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertAttributeAnnotationValue(System.Object)">
            <summary>
            Converts the value for an attribute annotation to the corresponding serializable string value
            </summary>
            <param name="annotationValue">The value of the annotation to convert.</param>
            <returns>The string representation of the <paramref name="annotationValue"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetPrimitiveTypeReferenceFromTypeAndFacets(System.Type,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Returns the primitive type reference for the given Clr type using facet annotations if available.
            </summary>
            <param name="clrType">The Clr type to resolve.</param>
            <param name="annotations">The optional annotations for the type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>The primitive type reference for the given Clr type including (optional) facets.</returns>
            <remarks>This method will remove all processed facets from the annotations.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ApplyFacetAnnotations(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Applies (optional) facet annotations to the primitive type reference.
            </summary>
            <param name="primitiveTypeReference">The type reference to apply the facets to.</param>
            <param name="annotations">The optional annotations for the type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>The primitive type reference including (optional) facets.</returns>
            <remarks>This method will remove all processed facets from the annotations.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreateBinaryTypeReference(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Create a binary type reference.
            </summary>
            <param name="primitiveTypeReference">The primitive type reference.</param>
            <param name="nullableFacet">true if the type reference should be nullable; otherwise false.</param>
            <param name="annotations">The (optional) annotations with facets for the type reference.</param>
            <returns>The created type reference.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreateStringTypeReference(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Create a string type reference.
            </summary>
            <param name="primitiveTypeReference">The primitive type reference.</param>
            <param name="nullableFacet">true if the type reference should be nullable; otherwise false.</param>
            <param name="annotations">The (optional) annotations with facets for the type reference.</param>
            <returns>The created type reference.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreateDecimalTypeReference(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Create a decimal type reference.
            </summary>
            <param name="primitiveTypeReference">The primitive type reference.</param>
            <param name="nullableFacet">true if the type reference should be nullable; otherwise false.</param>
            <param name="annotations">The (optional) annotations with facets for the type reference.</param>
            <returns>The created type reference.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreateTemporalTypeReference(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Create a temporal type reference.
            </summary>
            <param name="primitiveTypeReference">The primitive type reference.</param>
            <param name="nullableFacet">true if the type reference should be nullable; otherwise false.</param>
            <param name="annotations">The (optional) annotations with facets for the type reference.</param>
            <returns>The created type reference.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.CreateSpatialTypeReference(Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Create a spatial type reference.
            </summary>
            <param name="primitiveTypeReference">The primitive type reference.</param>
            <param name="nullableFacet">true if the type reference should be nullable; otherwise false.</param>
            <param name="annotations">The (optional) annotations with facets for the type reference.</param>
            <returns>The created type reference.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetFixedLengthAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets the 'FixedLength' annotation if it exists.
            </summary>
            <param name="annotations">The annotations to check.</param>
            <returns>The value of the annotation or a default value if the annotation is not specified.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetMaxLengthAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Boolean@)">
            <summary>
            Gets the 'MaxLength' annotation if it exists.
            </summary>
            <param name="annotations">The annotations to check.</param>
            <param name="isMaxMaxLength">true if the annotation has the special 'Max' value; otherwise false.</param>
            <returns>The value of the annotation or a default value if the annotation is not specified.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetIsUnicodeAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets the 'IsUnicode' annotation if it exists.
            </summary>
            <param name="annotations">The annotations to check.</param>
            <returns>The value of the annotation or a default value if the annotation is not specified.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetCollationAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets the 'Collation' annotation if it exists.
            </summary>
            <param name="annotations">The annotations to check.</param>
            <returns>The value of the annotation or a default value if the annotation is not specified.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetPrecisionAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets the 'Precision' annotation if it exists.
            </summary>
            <param name="annotations">The annotations to check.</param>
            <returns>The value of the annotation or a default value if the annotation is not specified.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.GetScaleAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets the 'Precision' annotation if it exists.
            </summary>
            <param name="annotations">The annotations to check.</param>
            <returns>The value of the annotation or a default value if the annotation is not specified.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.TryFindAndRemoveAnnotation(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.Object@)">
            <summary>
            Find an annotation with the specified key and return its value as object.
            </summary>
            <param name="annotations">The annotations to search.</param>
            <param name="key">The name of the annotation to search for.</param>
            <param name="value">The value of the annotation with the specified key; 'null' if no annotation is found.</param>
            <returns>true if an annotation with the specified key was found and removed; otherwise false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.TryConvertAnnotationValue``1(System.Object,``0@)">
            <summary>
            Tries to convert an annotation value to the specified target type.
            </summary>
            <typeparam name="T">The target type to convert the <paramref name="annotationValue"/> to.</typeparam>
            <param name="annotationValue">The annotation value to convert.</param>
            <param name="convertedValue">The converted annotation value or 'null' if no conversion was possible.</param>
            <returns>true if the value could be converted to the target type; otherwise false.</returns>
            <remarks>We only support the target types needed by the facets; this is not a general purpose conversion method.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertAnnotationValue``1(System.Object,System.String)">
            <summary>
            Converts an annotation value to the specified target type.
            </summary>
            <typeparam name="T">The target type to convert the <paramref name="annotationValue"/> to.</typeparam>
            <param name="annotationValue">The annotation value to convert.</param>
            <param name="facetName">The name of the facet for which the value is converted; for error reporting only.</param>
            <returns>The converted annotation value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderUtils.ConvertDefaultValue(System.Object)">
            <summary>
            Converts an annotation value to a string representation for the default value facet.
            </summary>
            <param name="annotationValue">The annotation value to convert.</param>
            <returns>The converted annotation value.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.CollectionResourceType">
            <summary>Use this class to represent a DataService type representing a collection property of primitive or complex types.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceType">
            <summary>Use this class to represent a DataService type (primitive, complex or entity).</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EmptyProperties">
            <summary> empty list of properties </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.PrimitiveStringResourceType">
            <summary>Primitive string resource type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.resourceTypeKind">
            <summary> ResourceTypeKind for the type that this structure represents </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.type">
            <summary> Reference to clr type that this resource represents </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.baseType">
            <summary> Reference to base resource type </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.name">
            <summary> name of the resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.fullName">
            <summary> full name of the resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.namespaceName">
            <summary> Namespace for this type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.abstractType">
            <summary>Whether this type is abstract.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.lockPropertiesLoad">
            <summary>lock object.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.isOpenType">
            <summary>Whether the resource type has open properties.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.canReflectOnInstanceType">
            <summary>Whether the corresponding instance type actually represents this node's CLR type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.propertiesDeclaredOnThisType">
            <summary> List of properties declared in this type (includes properties only defined in this type, not in the base type) </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.allProperties">
            <summary> List of all properties for this type (includes properties defined in the base type also) </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.keyProperties">
            <summary> list of key properties for this type</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.etagProperties">
            <summary> list of etag properties for this type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.propertyInfosDeclaredOnThisType">
            <summary>If ResourceProperty.CanReflectOnInstanceTypeProperty is true, we cache the PropertyInfo object.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.epmInfo">
            <summary>EpmInfo for this <see cref="T:System.Data.Services.Providers.ResourceType"/></summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.basesHaveEpmInfo">
            <summary>Indicates whether one of the base class of this resource type has EpmInfo.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.isReadOnly">
            <summary>is true, if the type is set to readonly.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.isMediaLinkEntry">
            <summary>True if the resource type includes a default stream </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.isLoadPropertiesMethodCalled">
            <summary>True if the virtual load properties is already called, otherwise false.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.epmInfoInitialized">
            <summary>Used to mark the fact that EpmInfo for the resource type has been initialized.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.metadataVersion">
            <summary>Version of the resource type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.schemaVersion">
            <summary>Schema version of the resource type.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Boolean)">
            <summary>Creates an instance of a data service <see cref="T:System.Data.Services.Providers.ResourceType" />.</summary>
            <param name="instanceType">CLR type that represents the format inside the WCF Data Services?runtime.</param>
            <param name="resourceTypeKind">
              <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> of the resource type.</param>
            <param name="baseType">Base type of the resource type as string.</param>
            <param name="namespaceName">Namespace name of the resource type as string.</param>
            <param name="name">Name of the given resource type as string.</param>
            <param name="isAbstract">Boolean value that indicates whether the resource type is an abstract type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.String,System.String)">
            <summary>
            Constructs a new instance of Resource type for the either given clr primitive type or collection type.
            This constructor must be called only for primitive or collection types.
            </summary>
            <param name="type">The instance type of the resource type.</param>
            <param name="resourceTypeKind"> kind of the resource type</param>
            <param name="namespaceName">namespace of the type.</param>
            <param name="name">name of the type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a new instance of Astoria type using the specified clr type
            </summary>
            <param name="type">clr type from which metadata needs to be pulled </param>
            <param name="baseType">base type of the resource type</param>
            <param name="namespaceName">Namespace name of the given resource type.</param>
            <param name="name">name of the given resource type.</param>
            <param name="isAbstract">whether the resource type is an abstract type or not.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetPrimitiveResourceType(System.Type)">
            <summary>Gets a resource type that represent a primitive type when given a <see cref="T:System.Type" /> object.</summary>
            <returns>The resource type.</returns>
            <param name="type">The <see cref="T:System.Type" /> type from which to get the primitive type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetCollectionResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets a <see cref="T:System.Data.Services.Providers.CollectionResourceType" /> representing a collection of the specified <paramref name="itemType" /> items.</summary>
            <returns>A <see cref="T:System.Data.Services.Providers.CollectionResourceType" /> representing a collection of the specified <paramref name="itemType" /> items.</returns>
            <param name="itemType">The type of item in the collection.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetEntityCollectionResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Gets a <see cref="T:System.Data.Services.Providers.EntityCollectionResourceType" /> representing a collection of the specified <paramref name="itemType" /> items.</summary>
            <returns>A <see cref="T:System.Data.Services.Providers.MultiValueResourceType" /> object representing a collection of the specified <paramref name="itemType" /> items.</returns>
            <param name="itemType">The <see cref="T:System.Data.Services.Providers.ResourceType" /> of a single item in the collection.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddProperty(System.Data.Services.Providers.ResourceProperty)">
            <summary>Adds the property supplied by the <paramref name="property" /> parameter to the type.</summary>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty" /> property to be added.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute(System.Data.Services.Common.EntityPropertyMappingAttribute)">
            <summary>
            Adds an <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> for the resource type.
            </summary>
            <param name="attribute">Given <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/></param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.SetReadOnly">
            <summary>Sets the resource type to read-only.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.CompareReferences(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType)">
            <summary>
            Compares whether the given 2 resource types references are equal.
            </summary>
            <param name="resourceType1">First resource type instance.</param>
            <param name="resourceType2">Second resource type instance.</param>
            <returns>true if the both the parameters refer to the same instance, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to be flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttributeInternal(System.Data.Services.Common.EntityPropertyMappingAttribute,System.Boolean)">
            <summary>
            Adds an <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> for the resource type.
            </summary>
            <param name="attribute">Given <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/></param>
            <param name="isEFProvider">True if the provider is a EF provider, otherwise false.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.EnsureEpmInfoAvailability">
            <summary>By initializing the EpmInfo for the resource type, ensures that the information is available for de-serialization.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.RemoveKeyProperties">
            <summary>
            Changes the key property to non key property and removes it from the key properties list
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.TryResolvePropertyName(System.String)">
            <summary>Tries to find the property for the specified name.</summary>
            <param name="propertyName">Name of property to resolve.</param>
            <returns>Resolved property; possibly null.</returns>
            <remarks>This will search ALL properties declared on the type.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.TryResolvePropertyName(System.String,System.Data.Services.Providers.ResourcePropertyKind)">
            <summary>Tries to find the property for the specified name, excluding the specific kinds of property.</summary>
            <param name="propertyName">Name of property to resolve.</param>
            <param name="exceptKind">The property kind to filter out.</param>
            <remarks>NamedStream is a special kind of property that should be excluded when querying properties declared on a type. The exception is when the scenario specifically asks for ALL properties.</remarks>
            <returns>Resolved property; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.TryResolvePropertiesDeclaredOnThisTypeByName(System.String)">
            <summary>Tries to find the property declared on this type for the specified name.</summary>
            <param name="propertyName">Name of property to resolve.</param>
            <returns>Resolved property; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.TryResolvePropertiesDeclaredOnThisTypeByName(System.String,System.Data.Services.Providers.ResourcePropertyKind)">
            <summary>Tries to find the property declared on this type for the specified name.</summary>
            <param name="propertyName">Name of property to resolve.</param>
            <param name="exceptKind">The property kind to filter out.</param>
            <returns>Resolved property; possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetMinimumResponseVersion(System.Data.Services.IDataService,System.Data.Services.Providers.ResourceSetWrapper,System.Boolean)">
            <summary>
            Determines the minimum version that can be used for this specific type.
            
            EPM versioning is not part of MinimumPayloadVersion because
            it is dependent on the response mimeType
            
            Note: if you don't know the specific type only the set, you will need to find the maximum of this
                  for all types in the hierarchy for the set type see ResourceSetWrapper.MinimumPayloadVersion
            </summary>
            <param name="service">The data service instance</param>
            <param name="resourceSet">The set that the type belongs to.</param>
            <param name="considerEpmInVersion">True if EPM should be included in the version calculation.</param>
            <returns>The minimum version that can be used for a payload of this specific type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetMinimumProtocolVersion(System.Boolean)">
            <summary>
            For protocol version, we just need to check for the features that the type uses, and return the minimum
            protocol version for the type.
            </summary>
            <param name="considerEpmInVersion">whether to consider epm mapping features or not.</param>
            <returns>minimum protocol version that is required for this resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.IsAssignableFrom(System.Data.Services.Providers.ResourceType)">
            <summary>
            Checks if the given type is assignable to this type. In other words, if this type
            is a subtype of the given type or not.
            </summary>
            <param name="subType">resource type to check.</param>
            <returns>true, if the given type is assignable to this type. Otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetPropertyInfo(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the property info for the resource property
            </summary>
            <param name="resourceProperty">Resource property instance to get the property info</param>
            <returns>Returns the propertyinfo object for the specified resource property.</returns>
            <remarks>The method searchies this type as well as all its base types for the property.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetPropertyValue(System.Data.Services.Providers.ResourceProperty,System.Object)">
            <summary>
            Get the value of the given property
            </summary>
            <param name="resourceProperty">Resource property instance to get the property info</param>
            <param name="target">Instance of the declaring type.</param>
            <returns>the value of the property from the target.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.BaseTypesAndSelf">
            <summary>
            Gets an enumeration containing this type and all its base types.
            </summary>
            <returns>This type and all its base types.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.LoadPropertiesDeclaredOnThisType">
            <summary>Returns a list of properties declared by this resource type. </summary>
            <returns>The list of properties declared on this type.</returns>
            <remarks>
            This method gives a chance to lazy load the properties of a resource type, instead of loading them upfront. 
            This property will be called once and only once, whenever ResourceType.Properties or ResourceType.PropertiesDeclaredOnThisType property is accessed.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ResourcePropertyComparison(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Compares two resource property instances, sorting them so keys are first,
            and are alphabetically ordered in case-insensitive ordinal order.
            </summary>
            <param name="a">First property to compare.</param>
            <param name="b">Second property to compare.</param>
            <returns>
            Less than zero if a sorts before b; zero if equal; greater than zero if a sorts
            after b.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.EpmPropertyExistsInDeclaredProperties(System.Data.Services.Common.EntityPropertyMappingAttribute,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Providers.ResourceProperty})">
            <summary>
            Does given property in the attribute exist in this type or one of it's base types
            </summary>
            <param name="epmAttr">Attribute which has PropertyName</param>
            <param name="declaredProperties">The declaredProperties of the type that has the attribute applied.</param>
            <returns>true if property exists in current type, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.CreateReadOnlyDeclaredPropertiesCollection">
            <summary>
            Create the ReadOnly collection of Properties declared explicitly on this type
            </summary>
            <returns>A readonly collection of properties declared explicitly on this type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.MarkEpmInfoInitialized(System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Providers.ResourceProperty})">
            <summary>Marks the EpmInfo as initialized and verifies that it's valid.</summary>
            <param name="declaredProperties">The declaredProperties of the current type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.InitializeProperties">
            <summary>
            Initializes all properties for the resource type, to be used by Properties getter.
            </summary>
            <returns>Collection of properties exposed by this resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.CreateReadOnlyPropertiesCollection">
            <summary>
            Creates a ReadOnly colleciton of all the properties visible on this type.
            </summary>
            <returns>ReadOnly colleciton of all the properties visible on this type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetResourcePropertyInfo(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the property info for the resource property
            </summary>
            <param name="resourceProperty">Resource property instance to get the property info</param>
            <returns>Returns the propertyinfo object for the specified resource property.</returns>
            <remarks>The method searchies this type as well as all its base types for the property.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetPropertyInfoDecaredOnThisType(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the property info for the resource property declared on this type
            </summary>
            <param name="resourceProperty">Resource property instance to get the property info</param>
            <returns>Returns the propertyinfo object for the specified resource property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddPropertyToResourceTypePropertyInfoCache(System.Data.Services.Providers.ResourceProperty,System.Reflection.PropertyInfo)">
            <summary>
            Adds A resourcepropertyInfo instance to the internal propertyInfosDeclaredOnThisType dictionary.
            </summary>
            <param name="resourceProperty">The resource property to add to the dictionary</param>
            <param name="propertyInfo">The propertyInfo handle to the instance property represented by the <paramref name="resourceProperty"/> </param>
            <returns>A resourcepropertyInfo instance that allows access to the instance property</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.BuildDynamicEpmInfo(System.Data.Services.Providers.ResourceType,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Providers.ResourceProperty})">
            <summary>Given a resource type, builds the EntityPropertyMappingInfo for each of the dynamic entity property mapping attribute</summary>
            <param name="currentResourceType">Resouce type for which EntityPropertyMappingAttribute discovery is happening</param>
            <param name="actualTypeDeclaredProperties">The declaredProperties of the this type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ThrowIfSealed">
            <summary>
            Checks if the resource type is sealed. If not, it throws an InvalidOperationException.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.AddPropertyInternal(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Validate the given <paramref name="property"/> and adds it to the list of properties for this type
            </summary>
            <param name="property">property which needs to be added.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.GetPropertiesDeclaredOnThisType">
            <summary>
            Calls the virtual LoadPropertiesDeclaredOnThisType method, if its not already called and then
            adds the properties returned by the method to the list of properties for this type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ValidateType(System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Services.Providers.ResourceProperty})">
            <summary>
            This method is called only when the Properties property is called and the type is already set to read-only.
            This method validates all the properties w.r.t to the base type and calls SetReadOnly on all the properties.
            </summary>
            <param name="declaredProperties">The declaredProperties of the current type.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.InitializeMetadataAndSchemaVersionForPrimitiveType">
            <summary>
            Initialize metadata and schema version for this primitive resource type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.InitializeMetadataAndSchemaVersionForCollectionType">
            <summary>
            Initialize metadata and schema version for this collection resource type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.InitializeMetadataAndSchemaVersionForEntityCollectionType">
            <summary>
            Initialize metadata and schema version for this entity collection resource type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.InitializeMetadataAndSchemaVersionForComplexOrEntityType">
            <summary>
            Initialize metadata and schema version for this resource type.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ComputeMetadataAndSchemaVersionForPropertyCollection(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty},System.Collections.Generic.HashSet{System.Data.Services.Providers.ResourceType},System.Data.Services.Providers.MetadataEdmSchemaVersion@)">
            <summary>
            Computes metadata and schema version for the given property collection.
            </summary>
            <param name="propertyCollection">List of resource properties whose metadata version needs to be calculated.</param>
            <param name="visitedComplexTypes">List of complex types visited.</param>
            <param name="propertySchemaVersion">Returns the schema version of the resource property collection.</param>
            <returns>The metadata version of the resource property collection.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsMediaLinkEntry">
            <summary>Gets or sets a Boolean value that is true if the resource type includes a default stream.</summary>
            <returns>true if the resource type includes a default stream; otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.InstanceType">
            <summary>Reference to the CLR type that this resource represents.</summary>
            <returns>The instance type as a <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.BaseType">
            <summary>Gets a reference to base resource type, if any.</summary>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the base type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ResourceTypeKind">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> for the type.</summary>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> for the type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.Properties">
            <summary>Gets a list of properties declared on this type that includes only properties defined on the type, not in the base type.</summary>
            <returns>The <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.PropertiesDeclaredOnThisType">
            <summary>Gets the list of properties declared on this type.</summary>
            <returns>The <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.KeyProperties">
            <summary>Gets a list of key properties for this type</summary>
            <returns>The <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ETagProperties">
            <summary>Gets the list of properties for this type.</summary>
            <returns>The <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.Name">
            <summary>Gets the name of the resource type.</summary>
            <returns>The name of the resource type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.FullName">
            <summary>Gets the full name of the resource.</summary>
            <returns>The full name of the resource type as string.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.Namespace">
            <summary>Gets the namespace of the resource type.</summary>
            <returns>The namespace of the resource type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsAbstract">
            <summary>Gets a Boolean value that indicates whether this is an abstract type.</summary>
            <returns>true if <see cref="T:System.Data.Services.Providers.ResourceType" /> is abstract; otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsOpenType">
            <summary>Gets whether the resource type has open properties.</summary>
            <returns>true if the resource type has open properties defined; otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.CanReflectOnInstanceType">
            <summary>Gets whether the corresponding instance type represents the CLR type of this entity.</summary>
            <returns>True if the instance type represents a CLR type; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.CustomState">
            <summary>Gets or sets a placeholder to hold custom state information about a resource type that is defined by the developer.</summary>
            <returns>The custom state information defined by the developer.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.IsReadOnly">
            <summary>Gets a Boolean value that is true if this resource type has been set to read-only.</summary>
            <returns>true if this resource type has been set to read-only; otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.HasEntityPropertyMappings">
            <summary>
            Do we have entity property mappings for this <see cref="T:System.Data.Services.Providers.ResourceType"/>
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoInitialized">
            <summary>
            Property used to mark the fact that EpmInfo for the resource type has been initialized
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmMinimumDataServiceProtocolVersion">
            <summary>Minimum DSPV required to serialize EPMs on this type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.NamedStreams">
            <summary> List of all named streams on this type (includes named streams defined on the base types) </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.NamedStreamsDeclaredOnThisType">
            <summary> List of named streams declared on this type (does not includes named streams defined on the base types) </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.HasNamedStreams">
            <summary>Indicates whether this type or one of its base types has a named stream.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.HasNamedStreamsDeclaredOnThisType">
            <summary>returns true if there is a named stream property declared on this type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmSourceTree">
            <summary>
            Tree of source paths for EntityPropertyMappingAttributes on this resource type
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmTargetTree">
            <summary>
            Tree of target paths for EntityPropertyMappingAttributes on this resource type
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.InheritedEpmInfo">
            <summary>Inherited EpmInfo</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.OwnEpmInfo">
            <summary>Own EpmInfo</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.AllEpmInfo">
            <summary>All EpmInfo i.e. both own and inherited.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this set.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.MetadataVersion">
            <summary>
            Returns the version of the resource type based on the metadata.
            This does not take EPM into account.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.SchemaVersion">
            <summary>
            Schema version of the resource type.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType">
            <summary>Holder of Epm related data structure per resource type</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.epmSourceTree">
            <summary>EpmSourceTree per <see cref="T:System.Data.Services.Providers.ResourceType"/></summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.epmTargetTree">
            <summary>EpmTargetTree per <see cref="T:System.Data.Services.Providers.ResourceType"/></summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.inheritedEpmInfo">
            <summary>Inherited EpmInfo</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.ownEpmInfo">
            <summary>Own EpmInfo</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of EpmInfoPerResourceType instance.
            </summary>
            <param name="isEFProvider">True if the provider is efprovider, otherwise false.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.Reset">
            <summary>
            Removes all data created internally by ResourceType. This is needed when building epm 
            info fails since the trees may be left in undefined state (i.e. half constructed) and 
            if inherited EPM attributes exist duplicates will be added.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.EFProvider">
            <summary>
            Returns true if the underlying provider is EF, otherwise false.
            </summary>
            <remarks>We need to throw better exception message in case of EFProvider since the attributes in the EF provider
            named differently than the attribute property names. Hence we need to find out when the provider is EF vs others
            to throw this nice error message.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.EpmSourceTree">
            <summary>Property for obtaining EpmSourceTree for a type</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.EpmTargetTree">
            <summary>Property for obtaining EpmTargetTree for a type</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.InheritedEpmInfo">
            <summary>Inherited EpmInfo</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.EpmInfoPerResourceType.OwnEpmInfo">
            <summary>Own EpmInfo</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceType.ResourcePropertyInfo">
            <summary>
            Private class to cache ResourceProperty info
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceType.ResourcePropertyInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Constructs a new instance of ResourceProperty info.
            </summary>
            <param name="propertyInfo">PropertyInfo instance.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ResourcePropertyInfo.PropertyInfo">
            <summary>
            PropertyInfo for the given property.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceType.ResourcePropertyInfo.PropertyGetter">
            <summary>
            Compiled expression to get the property value.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.CollectionResourceType.itemType">
            <summary>Resource type of a single item in the collection property.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.CollectionResourceType.#ctor(System.Data.Services.Providers.ResourceType)">
            <summary>Constructor.</summary>
            <param name="itemType">Resource type of a single item in the collection property.</param>
        </member>
        <member name="M:System.Data.Services.Providers.CollectionResourceType.GetInstanceType(System.Data.Services.Providers.ResourceType)">
            <summary>Returns instance type for a collection property of specified <paramref name="itemType"/>.</summary>
            <param name="itemType">Resource type of a single item in the collection property.</param>
            <returns>Instance type of the collection property of <paramref name="itemType"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.CollectionResourceType.GetName(System.Data.Services.Providers.ResourceType)">
            <summary>Returns EDM name of the type for a collection property of specified <paramref name="itemType"/>.</summary>
            <param name="itemType">Resource type of a single item in the collection property.</param>
            <returns>EDM name of the type of the collection property of <paramref name="itemType"/>.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.CollectionResourceType.ItemType">
            <summary>Resource type of a single item in the collection.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.DataServicePagingProviderWrapper">
            <summary>Wrapper for IDataServicePagingProvider interface discovery.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServicePagingProviderWrapper.service">
            <summary>Service instance.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServicePagingProviderWrapper.pagingProvider">
            <summary>IDataServicePagingProvider interface for the service.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServicePagingProviderWrapper.checkedForIDataServicePagingProvider">
            <summary>Was interface already requested.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServicePagingProviderWrapper.#ctor(System.Data.Services.IDataService)">
            <summary>Constructor.</summary>
            <param name="serviceInstance">Service instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServicePagingProviderWrapper.DisposeProvider">
            <summary>
            Dispose the pagingProvider provider instance
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServicePagingProviderWrapper.PagingProviderInterface">
            <summary>Gives reference to IDataServicePagingProvider interface implemented by the service.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServicePagingProviderWrapper.IsCustomPagedForQuery">
            <summary>Is custom paging enabled for the service for query processing.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServicePagingProviderWrapper.IsCustomPagedForSerialization">
            <summary>Do we need to handle custom paging during serialization.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.DbContextHelper">
            <summary>
            A helper class to extract the ObjectContext and save method from a DbContext
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DbContextHelper.contextAccessorCache">
            <summary>
            A cache of CLR types to their ObjectContextAccessor. Stores null if no ObjectContextAccessor can exist for a given type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DbContextHelper.cacheLock">
            <summary>
            A lock for contextAccessorCache
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.IsDbContextType(System.Type)">
            <summary>
            Determines if a type is a DbContext
            </summary>
            <param name="type">The type to check</param>
            <returns>True is the type is a DbContext</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.GetObjectContext(System.Object)">
            <summary>
            Returns the ObjectContext for a particular instance. Either:
              1. The object is an ObjectContext, or
              2. The object is a DbContext and the ObjectContext can be retrieved
            </summary>
            <param name="o">The data source instance</param>
            <returns>The ObjectContext instance or null</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.GetObjectContext(System.Object,System.Data.Objects.ObjectContext@,System.Func{System.Int32}@)">
            <summary>
            Returns the ObjectContext and SaveChanges method for a particular instance. Either:
              1. The object is an ObjectContext, or
              2. The object is a DbContext and the ObjectContext can be retrieved
            </summary>
            <param name="o">The data source instance</param>
            <param name="objectContext">The ObjectContext instance or null</param>
            <param name="saveChangesMethod">The SaveChanges method or null</param>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.IsDbEntityValidationException(System.Exception)">
            <summary>
            Determines if the exception is of the type DbEntityValidationException
            </summary>
            <param name="e">The exception instance to check.</param>
            <returns>True if the exception is derived from DbEntityValidationException, and False otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.WrapDbEntityValidationException(System.Exception)">
            <summary>
            Wraps the exception given in a new exception, and gets a verbose message
            from the DbEntityValidationException derived instance.
            </summary>
            <param name="e">The DbEntityValidationException instance to be used to create the more verbose exception.</param>
            <returns>A new exception with a verbose message, and an innerException of the passed in exception.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.GetDbContextAccessor(System.Type)">
            <summary>
            Gets the DbContext accessor for a type, or returns null if one cannot be made
            </summary>
            <param name="type">The type to analyze</param>
            <returns>The DbContextAccessor for the type, or null</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.CreateDbContextAccessor(System.Type)">
            <summary>
            Creates a DbContextAccessor for a given type if it exists
            </summary>
            <param name="type">The type to create the accessor for</param>
            <returns>A DbContextAccessor, or null if one cannot be created for the Type (i.e. it does not inherit from DbContext)</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.IsTypeOf(System.Type,System.String)">
            <summary>
            Determines through reflection based on names if the type passed in a derived from the type name passed in.
            </summary>
            <param name="type">The type to have its derivation checked.</param>
            <param name="fromTypeName">The name of the type to check for derivation from</param>
            <returns>True if the type is of the type the TypeName refers to, False otherwise.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.DbContextHelper.DbContextAccessor">
            <summary>
            A tuple of the ObjectContext getter and SaveChanges method
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DbContextHelper.DbContextAccessor.GetContext">
            <summary>A func to return the ObjectContext for an instance of a context</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DbContextHelper.DbContextAccessor.SaveChanges">
            <summary>A func to call SaveChanges for an instance of a context</summary>
        </member>
        <member name="T:System.Data.Services.Providers.DbContextHelper.DbEntityValidationExceptionAccessor">
            <summary>
            Class to wrap the DbEntityValidationException type so we don't have to staticly link to the EntityFramework.dll
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DbContextHelper.DbEntityValidationExceptionAccessor.DbEntityValidationExceptionTypeName">
            <summary>The name of the type that this class is wrapping</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DbContextHelper.DbEntityValidationExceptionAccessor.instance">
            <summary>The instance that is being wrapped</summary>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.DbEntityValidationExceptionAccessor.#ctor(System.Exception)">
            <summary>
            Creates an instance of this wrapper from the base Exception instance.
            </summary>
            <param name="instance">the DbEntityValidationException instance to be wrapped</param>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.DbEntityValidationExceptionAccessor.IsDbEntityValidationException(System.Exception)">
            <summary>
            Determines if the exception is of the type DbEntityValidationException
            </summary>
            <param name="e">The exception instance to check.</param>
            <returns>True if the exception is derived from DbEntityValidationException, and False otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DbContextHelper.DbEntityValidationExceptionAccessor.CreateVerboseMessage">
            <summary>
            Walks through the collections on DbEntityValidationException, and DbEntityValidationResult 
            to get the messages from the DbValidationError objects, and appends them together.
            </summary>
            <returns>The appended list of DbValidationError messages</returns>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceStreamProviderWrapper">
            <summary>
            Wrapper class to forward calls to the underlying IDataServiceStreamProvider instance and validates responses from it.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceStreamProviderWrapper.DefaultBufferSize">
            <summary>
            Default buffer size used for stream copy.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceStreamProviderWrapper.dataService">
            <summary>
            Data service instance
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceStreamProviderWrapper.streamProvider">
            <summary>
            Stream provider instance
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.#ctor(System.Data.Services.IDataService)">
            <summary>
            Constructs the wrapper class for IDataServiceStreamProvider
            </summary>
            <param name="dataService">Data service instance</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.LoadAndValidateStreamProvider">
            <summary>
            Validates that an implementation of IDataServiceStreamProvider exists and loads it.
            </summary>
            <returns>An instance of the IDataServiceStreamProvider interface.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.LoadAndValidateStreamProvider2">
            <summary>
            Validates that an implementation of IDataServiceStreamProvider2 exists and loads it.
            </summary>
            <returns>An instance of the IDataServiceStreamProvider2 interface.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetReadStream(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>
            This method is invoked by the data services framework to retrieve the default stream associated
            with the Entity Type specified by the <paramref name="entity"/> parameter.
            Note that we set the response ETag in the host object before we return.
            </summary>
            <param name="entity">The stream returned should be the default stream associated with this entity.</param>
            <param name="streamProperty">Stream property instance. If it is null, the corresponding method defined on IDataServiceStreamProvider will be invoked.
            Otherwise the corresponding method defined on IDataServiceStreamProvider2 will be called with the name of the stream.</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <returns>A valid stream the data service use to query / read a streamed BLOB which is associated with the <paramref name="entity"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetWriteStream(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>
            This method is invoked by the data services framework whenever an insert or update operation is 
            being processed for the stream associated with the Entity Type specified via the entity parameter.
            </summary>
            <param name="entity">The stream returned should be the default stream associated with this entity.</param>
            <param name="streamProperty">Stream info instance. If it is null, the corresponding method defined on IDataServiceStreamProvider will be invoked.
            Otherwise the corresponding method defined on IDataServiceStreamProvider2 will be called with the name of the stream.</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <returns>A valid stream the data service use to write the contents of a BLOB which is associated with <paramref name="entity"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.DeleteStream(System.Object,System.Data.Services.DataServiceOperationContext)">
            <summary>
            This method is invoked by the data services framework whenever an delete operation is being processed for the stream associated with
            the Entity Type specified via the entity parameter.
            </summary>
            <param name="entity">The stream deleted should be the default stream associated with this entity.</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetStreamContentType(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>
            This method is invoked by the data services framework to obtain the IANA content type (aka media type) of the stream associated
            with the specified entity.  This metadata is needed when constructing the payload for the Media Link Entry associated with the
            stream (aka Media Resource) or setting the Content-Type HTTP response header.
            </summary>
            <param name="entity">The entity associated with the stream for which the content type is to be obtained</param>
            <param name="streamProperty">Stream property instance. If it is null, the corresponding method defined on IDataServiceStreamProvider will be invoked.
            Otherwise the corresponding method defined on IDataServiceStreamProvider2 will be called with the name of the stream.</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <returns>Valid Content-Type string for the stream associated with the entity</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetReadStreamUri(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>
            This method is invoked by the data services framework to obtain the URI clients should use when making retrieve (ie. GET)
            requests to the stream(ie. Media Resource).   This metadata is needed when constructing the payload for the Media Link Entry
            associated with the stream (aka Media Resource).
            
            If IDataServiceStreamProvider.GetReadStreamUri returns a valid Uri, we return that as the Uri to the Media Resource.
            Otherwise we take the given Media Link Entry uri, and construct the default Media Resource Uri.
            </summary>
            <param name="entity">The entity associated with the stream for which a “read stream” is to be obtained</param>
            <param name="streamProperty">Stream property instance. If it is null, the corresponding method defined on IDataServiceStreamProvider will be invoked.
            Otherwise the corresponding method defined on IDataServiceStreamProvider2 will be called with the name of the stream.</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <returns>The URI clients should use when making retrieve (ie. GET) requests to the stream(ie. Media Resource).</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetStreamETag(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>
            This method is invoked by the data services framework to obtain the ETag of the stream associated with the entity specified.
            This metadata is needed when constructing the payload for the Media Link Entry associated with the stream (aka Media Resource)
            as well as to be used as the value of the ETag HTTP response header.
            </summary>
            <param name="entity">The entity associated with the stream for which an etag is to be obtained</param>
            <param name="streamProperty">Stream property instance. If it is null, the corresponding method defined on IDataServiceStreamProvider will be invoked.
            Otherwise the corresponding method defined on IDataServiceStreamProvider2 will be called with the name of the stream.</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <returns>ETag of the stream associated with the entity specified</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.ResolveType(System.String,System.Data.Services.IDataService)">
            <summary>
            This method is invoked by the data services framework when a request is received to insert into an Entity Set with an associated
            Entity Type hierarchy that has > 1 Entity Type and >= 1 Entity Type which is tagged as an MLE (ie. includes a stream).
            </summary>
            <param name="entitySetName">Fully qualified name entity set name.</param>
            <param name="service">Data service instance.</param>
            <returns>
            Namespace qualified type name which represents the type the Astoria framework should instantiate to create the MLE associated
            with the BLOB/MR being inserted.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetStreamDescription(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext,System.String@,System.Uri@,System.String@)">
            <summary>
            Gets the ETag, ReadStreamUri and ContentType of the stream
            </summary>
            <param name="entity">MLE instance</param>
            <param name="streamProperty">Stream property instance. If it is null, the corresponding method defined on IDataServiceStreamProvider will be invoked.
            Otherwise the corresponding method defined on IDataServiceStreamProvider2 will be called with the name of the stream.</param>
            <param name="operationContext">context of the current operation</param>
            <param name="etag">returns the etag for the stream</param>
            <param name="readStreamUri">returns the read stream uri</param>
            <param name="contentType">returns the content type of the stream</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.DisposeProvider">
            <summary>
            Dispose the stream provider instance
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.GetETagFromHeaders(System.Data.Services.DataServiceOperationContext,System.String@,System.Nullable{System.Boolean}@)">
            <summary>
            Get the ETag header value from the request headers.
            </summary>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <param name="etag">
            The etag value sent by the client (as the value of an If[-None-]Match header) as part of the HTTP request sent to the data service
            This parameter will be null if no If[-None-]Match header was present
            </param>
            <param name="checkETagForEquality">
            True if an value of the etag parameter was sent to the server as the value of an If-Match HTTP request header
            False if an value of the etag parameter was sent to the server as the value of an If-None-Match HTTP request header
            null if the HTTP request for the stream was not a conditional request
            </param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.InvokeApiCallAndValidateHeaders``1(System.String,System.Func{``0},System.Data.Services.DataServiceOperationContext)">
            <summary>
            Invokes an API call and verifies the response Content-Type and ETag headers are not being modified by the API call.
            </summary>
            <typeparam name="T">Return type from the API call</typeparam>
            <param name="methodName">API name</param>
            <param name="apiCall">Delegate to be called</param>
            <param name="operationContext">A reference to the context for the current operation.</param>
            <returns>Returns the result from the api call</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceStreamProviderWrapper.LoadStreamProvider">
            <summary>
            Asks the data service for a stream provider instance.  Throw if none is implemented.
            </summary>
            <remarks>
            If GetService returns two different object instances for IDataServiceStreamProvider and IDataServiceStreamProvider2,
            LoadStreamProvider always use the instance from GetService(IDataServiceStreamProvider2) for this.streamProvider.
            </remarks>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceStreamProviderWrapper.StreamBufferSize">
            <summary>
            Gets buffer size the data service will use when reading from read stream or writing to the write stream.
            If the size is less than or equals to 0, the default of 64k will be used.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ExpandedProjectionNode">
            <summary>This class represents an expanded navigation property in the tree
            of projected properties. It is also used to represent the root of the projection tree.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ProjectionNode">
            <summary>Class describing a single node on the tree of projections
            and expansions. This is the base class used for any projected property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ProjectionNode.propertyName">
            <summary>The name of the property to project.</summary>
            <remarks>If this node represents the root of the projection tree, this name is an empty string.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ProjectionNode.property">
            <summary>The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> for the property to be projected.</summary>
            <remarks>If this node represents an open property or it's the root of the projection tree,
            this field is null.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ProjectionNode.targetResourceType">
            <summary>Target resource type on which the projection needs to happen.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ProjectionNode.#ctor(System.String,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>Creates new instance of <see cref="T:System.Data.Services.Providers.ProjectionNode"/> which represents a simple projected property.</summary>
            <param name="propertyName">The name of the property to project.</param>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> for the property to project. If an open property
            is to be projected, specify null.</param>
            <param name="targetResourceType">The resource type for which the <see cref="F:System.Data.Services.Providers.ProjectionNode.property"/>needs to be projected.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ProjectionNode.PropertyName">
            <summary>The name of the property to project.</summary>
            <remarks>If this node represents the root of the projection tree, this name is an empty string.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ProjectionNode.Property">
            <summary>The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> for the property to be projected.</summary>
            <remarks>If this node represents an open property or it's the root of the projection tree,
            this property is null.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ProjectionNode.TargetResourceType">
            <summary>The resource type for which <see cref="P:System.Data.Services.Providers.ProjectionNode.Property"/>needs to be projected.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.resourceSetWrapper">
            <summary>The resource set to which the expansion leads.</summary>
            <remarks>If this node represents expanded navigation property, this is the resource set
            to which the expanded navigation property points to.
            If this node is the root node of the projection tree, this is the resource set
            for the root of the query results.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.orderingInfo">
            <summary>Collection of information which describes the ordering for the results
            returned by this expanded property.</summary>
            <remarks>This can be null in which case no ordering is to be applied.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.filter">
            <summary>The filter expression to be applied to results returned by this expanded property.</summary>
            <remarks>This can be null in which case no filter is to be applied.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.skipCount">
            <summary>Number of results to skip for this node.</summary>
            <remarks>null value means that no skip should be applied.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.takeCount">
            <summary>Maximum number of results to return for this node.</summary>
            <remarks>null value means that all results should be returned.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.maxResultsExpected">
            <summary>Maximum number of results allowed for this node. Provider should use this only as a hint.
            It should return no less then maxResultsExpected + 1 results (assuming that number is available)
            so that the service can detect violation of the limit.</summary>
            <remarks>null value means that no limit will be applied and thus all results available should be returned.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.nodes">
            <summary>List of child nodes.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.projectionFound">
            <summary>Internal field which is set to true once we have seen a projection including this expanded
            property. Otherwise set to false.</summary>
            <remarks>This field is used to eliminate expanded nodes which are not projected and thus there
            would be no point in expanding them.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.projectAllImmediateProperties">
            <summary>Flag which specifies if all child properties of this node should be projected.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.projectAllImmediateOperations">
            <summary>Flag which specifies if all bindable operations of this node should be projected.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.projectSubtree">
            <summary>Flag which specified is the entire expanded subtree of this node should be projected.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.hasExpandedPropertyOnDerivedType">
            <summary>Whether this node has one or more children which refers to derived properties.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ExpandedProjectionNode.selectedOperations">
            <summary>Cache for the set of operations that have been selected.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.#ctor(System.String,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.OrderingInfo,System.Linq.Expressions.Expression,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Creates new instance of node representing expanded navigation property.</summary>
            <param name="propertyName">The name of the property to project and expand.</param>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> for this property. Can only be null for the root node.</param>
            <param name="targetResourceType">Target resource type on which the expansion needs to happen.</param>
            <param name="resourceSetWrapper">The resource set to which the expansion leads.</param>
            <param name="orderingInfo">The ordering info for this node. null means no ordering to be applied.</param>
            <param name="filter">The filter for this node. null means no filter to be applied.</param>
            <param name="skipCount">Number of results to skip. null means no results to be skipped.</param>
            <param name="takeCount">Maximum number of results to return. null means return all available results.</param>
            <param name="maxResultsExpected">Maximum number of expected results. Hint that the provider should return
            at least maxResultsExpected + 1 results (if available).</param>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.AddExpandedNode(System.Data.Services.ExpandSegment)">
            <summary>
            Adds a new expanded node with the given segment name, if required.
            </summary>
            <param name="segment">Expand segment as specified in the uri.</param>
            <returns>An instance of ExpandedProjectionNode - either new or existing one.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.AddProjectionNode(System.String,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>
            Add the projection node with the given property name, property instance and target resource type, if required.
            </summary>
            <param name="propertyName">Name of the property that needs to be projected.</param>
            <param name="property">ResourceProperty instance containing information about the property - this will be null for open properties.</param>
            <param name="targetResourceType">ResourceType instance on which the property needs to be expanded.</param>
            <returns>A new or an existing instance of ProjectionNode.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.FindExpandedNode(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>Find a child node of a given property.</summary>
            <param name="property">ResourceProperty instance to find the child for.</param>
            <param name="targetResourceType">ResourceType instance on which the expansion needs to happen.</param>
            <returns>The child node if there's one for the specified <paramref name="property"/> or null
            if no such child was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.RemoveNonProjectedNodes">
            <summary>Walks the subtree of this node and removes all nodes which were not marked projected.</summary>
            <remarks>Used to remove unnecessary expanded nodes.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.ApplyWildcardsAndSort(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Removes duplicates from the tree caused by wildcards and sorts the projected properties.</summary>
            <param name="provider">underlying provider instance.</param>
            <remarks>
            Examples
            $select=Orders, Orders/ID           - get rid of the Orders/ID
            $select=Orders, Orders/*            - get rid of the Orders/*
            $select=Orders/*, Orders/ID         - get rid of the Orders/ID
            $select=Orders/*, Orders/OrderItems&amp;$expand=Orders - get rid of the Orders/OrderItems (it's redundant to *)
            $select=Orders/*, Orders/OrderItems&amp;$expand=Orders/OrderItems - leave as is, the Orders/OrderItems are expanded
            
            The sorting order is the same as the order in which the properties are enumerated on the owning type.
            This is to preserve the same order as if no projections occured.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.MarkSubtreeAsProjected">
            <summary>Marks the entire subtree as projected.</summary>
            <remarks>This is used when there were no projections specified in the query
            to mark the entire tree as projected.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.ApplyPropertyToExistingNode(System.Data.Services.Providers.ProjectionNode,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>
            Whether the given property can be applied to the existing node.
            </summary>
            <param name="existingNode">Existing node with the same property name.</param>
            <param name="property">ResourceProperty instance for the property refered by the new segment.</param>
            <param name="targetResourceType">TargetResourceType for the new segment.</param>
            <returns>true if the given property can be applied to the existing node, otherwise returns false.</returns>
            <remarks>In case this function returns true, it might modify the TargetResourceType property of the existing node.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.VerifyPropertyMismatchAndExpandSelectMismatchScenario(System.Data.Services.Providers.ProjectionNode,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Boolean)">
            <summary>
            Verify that the property referred by the existing node and the new segment are both open properties or declared properties
            and if the existing node is an expand node, make sure that the target resource types are the same.
            </summary>
            <param name="existingNode">Existing node with the same property name.</param>
            <param name="property">ResourceProperty instance for the property refered by the new segment.</param>
            <param name="targetResourceType">TargetResourceType for the new segment.</param>
            <param name="expandNode">true if the existingNode is an expand node.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.SortNodes(System.Collections.Generic.List{System.Data.Services.Providers.ProjectionNode},System.Collections.Generic.List{System.Data.Services.Providers.ResourceType})">
            <summary>
            Sort the list of existing projection nodes in the metadata order, first based on the type followed by the property order.
            </summary>
            <param name="existingNodes">existing projection nodes.</param>
            <param name="resourceTypesInMetadataOrder">list of resource types in metadata order.</param>
            <returns>the projection nodes in sorted manner.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.FindNode(System.String)">
            <summary>Find a child node of a given property.</summary>
            <param name="propertyName">The name of the property to find the child for.</param>
            <returns>The child node if there's one for the specified <paramref name="propertyName"/> or null
            if no such child was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ExpandedProjectionNode.AddNode(System.Data.Services.Providers.ProjectionNode)">
            <summary>Adds a new child node to this node.</summary>
            <param name="node">The child node to add.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.OrderingInfo">
            <summary>Collection of information which describes the ordering for the results
            returned by this expanded property.</summary>
            <remarks>This can be null in which case no ordering is to be applied.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.Filter">
            <summary>The filter expression to be applied to results returned by this expanded property.</summary>
            <remarks>This can be null in which case no filter is to be applied.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.SkipCount">
            <summary>Number of results to skip for this node.</summary>
            <remarks>null value means that no skip should be applied.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.TakeCount">
            <summary>Maximum number of results to return for this node.</summary>
            <remarks>null value means that all results should be returned.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.MaxResultsExpected">
            <summary>Maximum number of results allowed for this node. Provider should use this only as a hint.
            It should return no less then MaxResultsExpected + 1 results (assuming that number is available)
            so that the service can detect violation of the limit.</summary>
            <remarks>null value means that no limit will be applied and thus all results available should be returned.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.Nodes">
            <summary>List of child nodes.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ProjectAllOperations">
            <summary>Set to true if all operations of this node should be made part of the results.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ProjectAllProperties">
            <summary>Set to true if all properties of this node should be made part of the results.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ResourceSetWrapper">
            <summary>The resource set to which the expansion leads.</summary>
            <remarks>If this node represents expanded navigation property, this is the resource set
            to which the expanded navigation property points to.
            If this node is the root node of the projection tree, this is the resource set
            for the root of the query results.
            This property is for internal use by components of the WCF Data Services
            to avoid unnecessary lookups of the wrapper from the ResourceSet property.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ResourceType">
            <summary>The resource type in which all the entities expanded by this segment will be of.</summary>
            <remarks>This is usually the resource type of the <see cref="P:System.Data.Services.Providers.ExpandedProjectionNode.ResourceSetWrapper"/> for this node,
            but it can also be a derived type of that resource type.
            This can happen if navigation property points to a resource set but uses a derived type.
            It can also happen if service operation returns entities from a given resource set
            but it returns derived types.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ProjectionFound">
            <summary>Internal property which is set to true once we have seen a projection including this expanded
            property. Otherwise set to false.</summary>
            <remarks>This property is used to eliminate expanded nodes which are not projected and thus there
            would be no point in expanding them.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ProjectAllImmediateProperties">
            <summary>Flag which specifies if all child properties of this node should be projected.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.ProjectAllImmediateOperations">
            <summary>Flag which specifies if all bindable operations of this node should be projected.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.HasFilterOrMaxResults">
            <summary>Whether this expanded node has a filter or a constraint on max results returns.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.HasExpandedPropertyOnDerivedType">
            <summary>Whether this node has one or more children which refers to derived properties.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ExpandedProjectionNode.SelectedOperations">
            <summary>
            The cache for tracking which operations have been selected.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServicePagingProvider">
            <summary>
            When exposed by a provider, this interface is used to provide custom paging for the clients.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServicePagingProvider.GetContinuationToken(System.Collections.IEnumerator)">
            <summary>Returns the next-page token to put in the $skiptoken query option.</summary>
            <returns>The next-page token as a collection of primitive types.</returns>
            <param name="enumerator">Enumerator for which the continuation token is being requested.</param>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServicePagingProvider.SetContinuationToken(System.Linq.IQueryable,System.Data.Services.Providers.ResourceType,System.Object[])">
            <summary>Gets the next-page token from the $skiptoken query option in the request URI.</summary>
            <param name="query">Query for which the continuation token is being provided.</param>
            <param name="resourceType">Resource type of the result on which the $skip token is to be applied.</param>
            <param name="continuationToken">Continuation token parsed into primitive type values.</param>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceStreamProvider2">
            <summary>
            The IDataServiceStreamProvider2 interface defines the contract between the data services framework server component
            and a data source's named stream implementation (ie. a stream provider).
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IDataServiceStreamProvider">
            <summary>
            The IDataServiceStreamProvider interface defines the contract between the data services framework server component
            and a data source's stream implementation (ie. a stream provider).
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStream(System.Object,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
             <summary>Returns a stream that contains the media resource data for the specified entity, which is a media link entry.</summary>
             <returns>The data <see cref="T:System.IO.Stream" /> that contains the binary property data of the <paramref name="entity" />.</returns>
             <param name="entity">The entity that is a media link entry with a related media resource.</param>
             <param name="etag">The eTag value sent as part of the HTTP request that is sent to the data service.</param>
             <param name="checkETagForEquality">A nullable <see cref="T:System.Boolean" /> value that determines what kind of conditional request was issued to the data service, which is true when the eTag was sent in an If-Match header, false when the eTag was sent in an If-None-Match header, and null when the request was not conditional and no eTag was included in the request.</param>
             <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
             <remarks>
             This method is invoked by the data services framework to retrieve the default stream associated
             with the entity instance specified by the <paramref name="entity"/> parameter.
             
             Notes to Interface Implementers
             The <paramref name="operationContext"/> argument is passed as it is likely that an implementer of this interface method
             will need information from the HTTP request headers in order to construct a stream.  Likely header
             values required are: 
               'Accept'
               'Accept-Charset'
               'Accept-Encoding'
               
             An implementer of this method MUST perform concurrency checks as needed in their implementation of
             this method.  If an If-Match or If-None-Match request header was included in the request, then the
             etag parameter will be non null, which indicates this method MUST perform the appropriate concurrency
             check.  If the concurrency check passes, this method should return the requested stream.  If the
             concurrency checks fails, the method should throw  a DataServiceException with the appropriate HTTP
             response code as defined in HTTP RFC 2616 section 14.24 and section 14.26.
               If the etag was sent as the value of an If-Match request header, the value of the ‘checkETagForEquality’
               header will be set to true
               If the etag was sent as the value of an If-None-Match request header, the value of the
               ‘checkETagForEquality’ header will be set to false
            
             It is the responsibility of the implementer of this method to honor the values of the appropriate request
             headers when generating the returned response stream.
             
             An implementer of this method MUST NOT set the following HTTP response headers on the <paramref name="operationContext"/> parameter
             as they are set by the data service runtime:
               Content-Type
               ETag   
             An implementer of this method may set HTTP response headers (other than those forbidden above) on
             the <paramref name="operationContext"/> parameter.
            
             An implementer of this method should only set the properties on the <paramref name="operationContext"/> parameter which it
             requires to be set for a successful response.  Altering other properties on the <paramref name="operationContext"/> parameter may
             corrupt the response from the data service.
             
             Stream Ownership
             The data service framework will dispose the stream once all bytes have been successfully read.
             
             If an error occurs while reading the stream, then the data services framework will generate an
             in-stream error which is sent back to the client.  See the error contract specification for a 
             description of the format of in-stream errors
             </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetWriteStream(System.Object,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the stream that the data service uses to write the binary data for the media resource received from the client that belongs to the specified entity.</summary>
            <returns>A valid <see cref="T:System.Stream" /> the data service uses to write the contents of a binary data received from the client.</returns>
            <param name="entity">The entity that is a media link entry with a related media resource.</param>
            <param name="etag">The eTag value that is sent as part of the HTTP request that is sent to the data service.</param>
            <param name="checkETagForEquality">A nullable <see cref="T:System.Boolean" /> value that determines what kind of conditional request was issued to the data service, which is true when the eTag was sent in an If-Match header, false when the eTag was sent in an If-None-Match header, and null when the request was not conditional and no eTag was included in the request.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance that is used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework whenever an insert or update operation is 
            being processed for the stream associated with the entity instance specified via the entity parameter.
            
            Notes to Interface Implementers
            The <paramref name="operationContext"/> argument is passed as it is likely that an implementer of this interface method will 
            need information from the HTTP request headers in order to construct a write stream.  Likely header 
            values required are: 
              'Content-Type'
              'Content-Disposition'
              'Slug' (as specified in the AtomPub RFC 5023)
              
            An implementer of this method MUST perform concurrency checks as needed in their implementation of this method.
            If an If-Match or If-None-Match request header was included in the request, then the etag parameter will be non null,
            which indicates this method MUST perform the appropriate concurrency check.  If the concurrency check passes, this
            method should return the requested stream.  If the concurrency checks fails, the method should throw  a DataServiceException
            with the appropriate HTTP response code as defined in HTTP RFC 2616 section 14.24 and section 14.26. 
              If the etag was sent as the value of an If-Match request header, the value of the ‘checkETagForEquality’ header will be set to true
              If the etag was sent as the value of an If-None-Match request header, the value of the ‘checkETagForEquality’ header will be set to false
              
            An implementer of this method MUST NOT set the following HTTP response headers on the <paramref name="operationContext"/> parameter
            as they are set by the data service runtime:
              Content-Type
              ETag
              
            An implementer of this method may set HTTP response headers (other than those forbidden above) on the <paramref name="operationContext"/> parameter.
            
            An implementer of this method should only set the properties on the <paramref name="operationContext"/> parameter which it requires to be set for a successful
            response.  Altering other properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            
            Stream Ownership
            The data service framework will dispose the stream once all bytes have been successfully written to
            the stream.
            
            If an error occurs while writing to the stream, then the data services framework will generate an 
            error response to the client as per the "error contract" semantics followed by V1 data services
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.DeleteStream(System.Object,System.Data.Services.DataServiceOperationContext)">
            <summary>Deletes the associated media resource when a media link entry is deleted. </summary>
            <param name="entity">The media link entry that is deleted.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance that processes the request.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="operationContext" /> are null.</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="entity" /> is not an entity that has a binary property to stream.</exception>
            <exception cref="T:System.Data.Services.DataServiceException">When the stream associated with the <paramref name="entity" /> cannot be deleted.</exception>
            <remarks>
            This method is invoked by the data services framework whenever an delete operation is being processed for the streams associated with
            the entity instance specified via the entity parameter.
            
            Notes to Interface Implementers
            If this method is being invoked as part of a request to delete the MLE and its associated stream (ie. MR):
              This method will be invoked AFTER IUpdatable.DeleteResource(entity) is called.  An implementer of this method must be able to
              delete a stream even if the associated entity (passed as a parameter to this method) has already been removed from the
              underlying data source.
            
            The <paramref name="operationContext"/> argument is passed as a means for this method to read the HTTP request headers provided with the delete request.
            
            An implementer of this method MUST NOT set the following HTTP response headers on the <paramref name="operationContext"/> parameter as
            they are set by the data service runtime:
              Content-Type
              ETag
              
            An implementer of this method may set HTTP response headers (other than those forbidden above) on the <paramref name="operationContext"/> parameter.
            
            An implementer of this method should only set the properties on the <paramref name="operationContext"/> parameter which it requires to be set for a successful response.
            Altering other properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamContentType(System.Object,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the content-type of the media resource that belongs to the specified entity.</summary>
            <returns>A valid MIME Content-Type value for the binary data.</returns>
            <param name="entity">The entity that is a media link entry with a related media resource.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework to obtain the IANA content type (aka media type) of the stream associated
            with the specified entity.  This metadata is needed when constructing the payload for the Media Link Entry associated with the
            stream (aka Media Resource) or setting the Content-Type HTTP response header.
            
            The string should be returned in a format which is directly usable as the value of an HTTP Content-Type response header.
            For example, if the stream represented a PNG image the return value would be "image/png"
            
            This method MUST always return a valid content type string.  If null or string.empty is returned the data service framework will
            consider that an error case and return a 500 (Internal Server Error) to the client.
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStreamUri(System.Object,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the URI that is used to request the media resource that belongs to the specified entity.</summary>
            <returns>A <see cref="T:System.Uri" /> value that is used to request the binary data stream.</returns>
            <param name="entity">The entity that is a media link entry with a related media resource.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework to obtain the URI clients should use when making retrieve (ie. GET)
            requests to the stream(ie. Media Resource).   This metadata is needed when constructing the payload for the Media Link Entry
            associated with the stream (aka Media Resource).
            
            This method was added such that a Media Link Entry’s representation could state that a stream (Media Resource) is to
            be edited using one URI and read using another.   This is supported such that a data service could leverage a Content
            Distribution Network for its stream content.
            
            The URI returned maps to the value of the src attribute on the atom:content element of a payload representing the Media
            Link Entry associated with the stream described by this DataServiceStreamDescriptor instance.  If the JSON format is
            used (as noted in section 3.2.3) this URI represents the value of the src_media name/value pair.
            
            The returned URI MUST be an absolute URI and represents the location where a consumer (reader) of the stream should send
            requests to in order to obtain the contents of the stream.  
            
            If URI returned is null, then the data service runtime will automatically generate the URI representing the location
            where the stream can be read from.  The URI generated by the runtime will equal the canonical URI for the associated Media Link
            Entry followed by a “/$value” path segment. 
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamETag(System.Object,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the eTag of the media resource that belongs to the specified media link entry.</summary>
            <returns>eTag of the media resource associated with the <paramref name="entity" />.</returns>
            <param name="entity">The entity that is a media link entry with a related media resource.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework to obtain the ETag of the stream associated with the entity specified.
            This metadata is needed when constructing the payload for the Media Link Entry associated with the stream (aka Media Resource)
            as well as to be used as the value of the ETag HTTP response header.
            
            This method enables a stream (Media Resource) to have an ETag which is different from that of its associated Media Link Entry.
            The returned string MUST be formatted such that it is directly usable as the value of an HTTP ETag response header.
            If null is returned the data service framework will assume that no ETag is associated with the stream
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.ResolveType(System.String,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns a namespace-qualified type name that represents the type that the data service runtime must create for the media link entry that is associated with the data stream for the media resource that is being inserted.</summary>
            <returns>A namespace-qualified type name.</returns>
            <param name="entitySetName">Fully-qualified entity set name.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance that is used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework when a request is received to insert into an Entity Set with an associated
            Entity Type hierarchy that has > 1 Entity Type and >= 1 Entity Type which is tagged as an MLE (ie. includes a stream).
            
            An implementer of this method should inspect the request headers provided by the <paramref name="operationContext"/> parameter and return the namespace
            qualified type name which represents the type the Astoria framework should instantiate to create the MLE associated with the
            BLOB/MR being inserted.  The string representing the MLE type name returned from this method will subsequently be passed to
            IUpdatable.CreateResource to create the MLE (of the specified type).
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="P:System.Data.Services.Providers.IDataServiceStreamProvider.StreamBufferSize">
            <summary>Gets the size of the stream buffer.</summary>
            <returns>Integer that represents the size of buffer.</returns>
            <remarks>If the size is 0, the default of 64k will be used.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider2.GetReadStream(System.Object,System.Data.Services.Providers.ResourceProperty,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
             <summary>Returns a stream that contains the binary data for the named stream.</summary>
             <returns>A valid stream the data service use to query / read a named stream which is associated with the <paramref name="entity" />. Null may be returned from this method if the requested named stream has not been created since the creation of <paramref name="entity" />. The data service will respond with 204 if this method returns null.</returns>
             <param name="entity">The entity to which the named stream belongs.</param>
             <param name="streamProperty">A <see cref="T:System.Data.Services.Providers.ResourceProperty" /> object that represents the named stream.</param>
             <param name="etag">The eTag value sent as part of the HTTP request that is sent to the data service.</param>
             <param name="checkETagForEquality">A nullable <see cref="T:System.Boolean" /> value that determines what kind of conditional request was issued to the data service, which is true when the eTag was sent in an If-Match header, false when the eTag was sent in an If-None-Match header, and null when the request was not conditional and no eTag was included in the request. </param>
             <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
             <remarks>
             This method is invoked by the data services framework to retrieve the named stream associated
             with the entity instance specified by the <paramref name="entity"/> parameter.
             
             Notes to Interface Implementers
             The <paramref name="operationContext"/> argument is passed as it is likely that an implementer of this interface method
             will need information from the HTTP request headers in order to construct a stream.  Likely header
             values required are: 
               'Accept'
               'Accept-Charset'
               'Accept-Encoding'
               
             An implementer of this method MUST perform concurrency checks as needed in their implementation of
             this method.  If an If-Match or If-None-Match request header was included in the request, then the
             etag parameter will be non null, which indicates this method MUST perform the appropriate concurrency
             check.  If the concurrency check passes, this method should return the requested stream.  If the
             concurrency checks fails, the method should throw  a DataServiceException with the appropriate HTTP
             response code as defined in HTTP RFC 2616 section 14.24 and section 14.26.
               If the etag was sent as the value of an If-Match request header, the value of the ‘checkETagForEquality’
               header will be set to true
               If the etag was sent as the value of an If-None-Match request header, the value of the
               ‘checkETagForEquality’ header will be set to false
            
             It is the responsibility of the implementer of this method to honor the values of the appropriate request
             headers when generating the returned response stream.
             
             An implementer of this method MUST NOT set the following HTTP response headers on the <paramref name="operationContext"/> parameter
             as they are set by the data service runtime:
               Content-Type
               ETag   
             An implementer of this method may set HTTP response headers (other than those forbidden above) on
             the <paramref name="operationContext"/> parameter.
            
             An implementer of this method should only set the properties on the <paramref name="operationContext"/> parameter which it
             requires to be set for a successful response.  Altering other properties on the <paramref name="operationContext"/> parameter may
             corrupt the response from the data service.
             
             Null may be returned from this method if the requested named stream has not been created since the creation of <paramref name="entity"/>.
             The data service will respond with 204 if this method returns null. If the stream returned from this method contains 0 byte, this method
             may set the response status code on the <paramref name="operationContext"/> parameter to 204.  The GetStreamContentType method should
             return null or string.Empty if the current request will respond with 204.
             
             Stream Ownership
             The data service framework will dispose the stream once all bytes have been successfully read.
             
             If an error occurs while reading the stream, then the data services framework will generate an
             in-stream error which is sent back to the client.  See the error contract specification for a 
             description of the format of in-stream errors.
             </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider2.GetWriteStream(System.Object,System.Data.Services.Providers.ResourceProperty,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the stream that the data service uses to write the binary data received from the client as the specified named stream.</summary>
            <returns>A valid <see cref="T:System.Stream" /> the data service uses to write the contents of a binary data received from the client.</returns>
            <param name="entity">The entity to which the named stream belongs.</param>
            <param name="streamProperty">A <see cref="T:System.Data.Services.Providers.ResourceProperty" /> object that represents the named stream.</param>
            <param name="etag">The eTag value sent as part of the HTTP request that is sent to the data service.</param>
            <param name="checkETagForEquality">A nullable <see cref="T:System.Boolean" /> value that determines what kind of conditional request was issued to the data service, which is true when the eTag was sent in an If-Match header, false when the eTag was sent in an If-None-Match header, and null when the request was not conditional and no eTag was included in the request. </param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework whenever an insert or update operation is 
            being processed for the named stream associated with the entity instance specified via the entity parameter.
            
            Notes to Interface Implementers
            The <paramref name="operationContext"/> argument is passed as it is likely that an implementer of this interface method will 
            need information from the HTTP request headers in order to construct a write stream.  Likely header 
            values required are: 
              'Content-Type'
              'Content-Disposition'
              'Slug' (as specified in the AtomPub RFC 5023)
              
            An implementer of this method MUST perform concurrency checks as needed in their implementation of this method.
            If an If-Match or If-None-Match request header was included in the request, then the etag parameter will be non null,
            which indicates this method MUST perform the appropriate concurrency check.  If the concurrency check passes, this
            method should return the requested stream.  If the concurrency checks fails, the method should throw  a DataServiceException
            with the appropriate HTTP response code as defined in HTTP RFC 2616 section 14.24 and section 14.26. 
              If the etag was sent as the value of an If-Match request header, the value of the ‘checkETagForEquality’ header will be set to true
              If the etag was sent as the value of an If-None-Match request header, the value of the ‘checkETagForEquality’ header will be set to false
              
            An implementer of this method MUST NOT set the following HTTP response headers the <paramref name="operationContext"/> parameter
            as they are set by the data service runtime:
              Content-Type
              ETag
              
            An implementer of this method may set HTTP response headers (other than those forbidden above) on the <paramref name="operationContext"/> parameter.
            
            An implementer of this method should only set the properties on the <paramref name="operationContext"/> parameter which it requires to be set for a successful
            response.  Altering other properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            
            Stream Ownership
            The data service framework will dispose the stream once all bytes have been successfully written to
            the stream.
            
            If an error occurs while writing to the stream, then the data services framework will generate an 
            error response to the client as per the "error contract" semantics followed by V1 data services.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider2.GetStreamContentType(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the content-type of the specified named stream.</summary>
            <returns>A valid MIME Content-Type value for the binary data.</returns>
            <param name="entity">The entity to which the named stream belongs.</param>
            <param name="streamProperty">A <see cref="T:System.Data.Services.Providers.ResourceProperty" /> object that represents the named stream.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework to obtain the IANA content type (aka media type) of the named stream associated
            with the specified entity.  This metadata is needed when constructing the payload for the entity associated with the
            named stream or setting the Content-Type HTTP response header.
            
            The string should be returned in a format which is directly usable as the value of an HTTP Content-Type response header.
            For example, if the stream represented a PNG image the return value would be "image/png"
            
            If the requested named stream has not yet been uploaded or the GetReadStream method will set the response status code to 204, this method should 
            return null or string.Empty.  Otherwise this method MUST always return a valid content type string for the requested named stream.
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider2.GetReadStreamUri(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the URI that is used to request a specific named stream.</summary>
            <returns>A <see cref="T:System.Uri" /> value that is used to request the named binary data stream.</returns>
            <param name="entity">The entity with the named stream being requested.</param>
            <param name="streamProperty">A <see cref="T:System.Data.Services.Providers.ResourceProperty" /> object that represents the named stream.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework to obtain the URI clients should use when making retrieve (ie. GET)
            requests to the named stream.  This metadata is needed when constructing the payload for the entity
            associated with the named stream.
            
            This method was added such that an entity’s representation could state that a named stream is to
            be edited using one URI and read using another.   This is supported such that a data service could leverage a Content
            Distribution Network for its stream content.
            
            The URI returned maps to the value of the self link for the named media resource.  If the JSON format is
            used (as noted in section 3.2.3) this URI represents the value of the src_media name/value pair.
            
            The returned URI MUST be an absolute URI and represents the location where a consumer (reader) of the stream should send
            requests to in order to obtain the contents of the stream.  
            
            If URI returned is null, then the data service runtime omit the self link for the named media resource.
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider2.GetStreamETag(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.DataServiceOperationContext)">
            <summary>Returns the eTag of the specified named stream.</summary>
            <returns>eTag value of the specified named stream.</returns>
            <param name="entity">The entity to which the named stream belongs.</param>
            <param name="streamProperty">A <see cref="T:System.Data.Services.Providers.ResourceProperty" /> object that represents the named stream.</param>
            <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
            <remarks>
            This method is invoked by the data services framework to obtain the ETag of the name stream associated with the entity specified.
            This metadata is needed when constructing the payload for the entity associated with the named stream
            as well as to be used as the value of the ETag HTTP response header.
            
            This method enables a named stream to have an ETag which is different from that of its associated entity.
            The returned string MUST be formatted such that it is directly usable as the value of an HTTP ETag response header.
            If null is returned the data service framework will assume that no ETag is associated with the stream
            
            NOTE: Altering properties on the <paramref name="operationContext"/> parameter may corrupt the response from the data service.
            </remarks>
        </member>
        <member name="T:System.Data.Services.Providers.IProjectionProvider">
            <summary>
            This interface declares the methods required to support the $expand and $select
            query options for a WCF Data Service. This interface is a superset
            of <see cref="T:System.Data.Services.IExpandProvider"/> interface and adds support for paging
            in the expanded results and projections.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IProjectionProvider.ApplyProjections(System.Linq.IQueryable,System.Data.Services.Providers.RootProjectionNode,System.Boolean)">
            <summary>Applies expansions and projections to the specified <paramref name="source"/>.</summary>
            <param name="source"><see cref="T:System.Linq.IQueryable"/> object to expand and apply projections to.</param>
            <param name="rootProjectionNode">The root node of the tree which describes
                the projections and expansions to be applied to the <paramref name="source"/>.</param>
            <param name="epmRelevantForCurrentFormat">Determine if the current Response format needs epm values.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> object, with the results including 
            the expansions and projections specified in <paramref name="rootProjectionNode"/>. 
            </returns>
            <remarks>
            The returned <see cref="T:System.Linq.IQueryable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/> interface 
            to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="rootProjectionNode"/>.OrderingInfo then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            If projections are required, the provider may choose to return <see cref="T:System.Linq.IQueryable"/>
            which returns instances of <see cref="T:System.Data.Services.IProjectedResult"/>. In that case property values are determined
            by calling the <see cref="M:System.Data.Services.IProjectedResult.GetProjectedPropertyValue(System.String)"/> method instead of
            accessing properties of the returned object directly.
            If both expansion and projections are required, the provider may choose to return <see cref="T:System.Linq.IQueryable"/>
            of <see cref="T:System.Data.Services.IExpandedResult"/> which in turn returns <see cref="T:System.Data.Services.IProjectedResult"/> from its
            <see cref="P:System.Data.Services.IExpandedResult.ExpandedElement"/> property.
            </remarks>
        </member>
        <member name="T:System.Data.Services.Providers.IProviderType">
            <summary>
            Implemented by a class that encapsulates a data service provider's metadata representation of a type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderType.Members">
            <summary>
            Returns the members declared on this type only, not including any inherited members.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderType.Name">
            <summary>
            Name of the type without its namespace
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IProviderMember">
            <summary>
            Implemented by a class that encapsulates a data service provider's metadata representation of a member on a type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.EdmTypeKind">
            <summary>
            BuiltInTypeKind for the member's type.
            DEVNOTE (sparra): This currently has a dependency on the Entity Framework's enum, but this dependency should be
            removed in subsequent refactorings of this class that expand the usage beyond the ObjectContextServiceProvider.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.Name">
            <summary>
            Name of the member without its namespace.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.IsKey">
            <summary>
            True if this member is a key on it's declaring type, otherwise false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.EdmTypeName">
            <summary>
            EDM name for the member's type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.MimeType">
            <summary>
            MimeType for the member.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.CollectionItemType">
            <summary>
            Returns the entity type of the items in the collection if this member is a collection type, otherwise null.
            DEVNOTE (sparra): This currently has a dependency on the Entity Framework's EntityType class, but this dependency
            should be removed in subsequent refactorings of this class that expand the usage beyond the ObjectContextServiceProvider.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.MetadataProperties">
            <summary>
            Return the list of the metadata properties for the member.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.IProviderMember.Facets">
            <summary>
            Return the list of facets for the member.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.IProviderMetadata">
            <summary>
            Implemented by a class that encapsulates a data service provider's entry point to its metadata system.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.IProviderMetadata.GetProviderType(System.String)">
            <summary>
            Gets the data service provider type with the specified name.
            </summary>
            <param name="providerTypeName">Provider type name used to find the type.</param>
            <returns>Provider type for <paramref name="providerTypeName"/></returns>
        </member>
        <member name="M:System.Data.Services.Providers.IProviderMetadata.GetClrType(System.Data.Metadata.Edm.StructuralType)">
            <summary>
            Gets the CLR type for the specified StructuralType.
            DEVNOTE (sparra): This currently has a dependency on the Entity Framework's StructuralType, but this dependency should be
            removed in subsequent refactorings of this class that expand the usage beyond the ObjectContextServiceProvider.
            </summary>
            <param name="structuralType">StructuralType used to find the CLR type.</param>
            <returns>CLR type equivalent for <paramref name="structuralType"/></returns>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceAssociationType">
            <summary>
            Stores information about a association and its ends
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationType.fullName">
            <summary>FullName of the association.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationType.name">
            <summary>Name of the association </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationType.namespaceName">
            <summary>Namespace of the association type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationType.end1">
            <summary>end1 for this association.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationType.end2">
            <summary>end2 for this association.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationType.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationType.#ctor(System.String,System.String,System.Data.Services.Providers.ResourceAssociationTypeEnd,System.Data.Services.Providers.ResourceAssociationTypeEnd)">
            <summary>
            Creates a new instance of AssociationInfo to store information about an association.
            </summary>
            <param name="name">name of the association.</param>
            <param name="namespaceName">namespaceName of the association.</param>
            <param name="end1">first end of the association.</param>
            <param name="end2">second end of the association.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationType.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationType.GetResourceAssociationTypeEnd(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Retrieve the end for the given resource set, type and property.
            </summary>
            <param name="resourceType">resource type for the end</param>
            <param name="resourceProperty">resource property for the end</param>
            <returns>Association type end for the given parameters</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationType.GetRelatedResourceAssociationSetEnd(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Retrieve the related end for the given resource set, type and property.
            </summary>
            <param name="resourceType">resource type for the source end</param>
            <param name="resourceProperty">resource property for the source end</param>
            <returns>Related association type end for the given parameters</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationType.GetEnd(System.String)">
            <summary>
            Return the end with the given name.
            </summary>
            <param name="endName">Name of the end.</param>
            <returns>An instance of the end with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationType.GetRelatedEnd(System.String)">
            <summary>
            Returns the related end with the given name.
            </summary>
            <param name="endName">Name of the end.</param>
            <returns>Returns the related end of the end with the given name.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.FullName">
            <summary>FullName of the association.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.Name">
            <summary>Name of the association.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.NamespaceName">
            <summary>Namespace of the association type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.End1">
            <summary>end1 for this association.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.End2">
            <summary>end2 for this association.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.ReferentialConstraint">
            <summary>Returns the instance of ResourceReferentialConstraint.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationType.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this set.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceProviderMethods">
            <summary>Use this class to perform late-bound operations on data service resource sets.</summary>    
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.GetValueMethodInfo">
            <summary>MethodInfo for object DataServiceProviderMethods.GetValue(this object value, string propertyName).</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.GetSequenceValueMethodInfo">
            <summary>MethodInfo for IEnumerable&lt;T&gt; DataServiceProviderMethods.GetSequenceValue(this object value, string propertyName).</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.ConvertMethodInfo">
            <summary>MethodInfo for Convert.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.TypeIsMethodInfo">
            <summary>MethodInfo for TypeIs.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.OfTypeIQueryableMethodInfo">
            <summary>MethodInfo for OfType with IQueryable parameter.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.OfTypeIEnumerableMethodInfo">
            <summary>MethodInfo for OfType with IEnumerable parameter.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderMethods.TypeAsMethodInfo">
            <summary>MethodInfo for TypeIs.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.#cctor">
            <summary>
            Static constructor for data service provider methods.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.GetValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets a named value from the specified object.</summary>
            <returns>An object that is the requested value.</returns>
            <param name="value">Object that contains the value.</param>
            <param name="property"><see cref="T:System.Data.Services.Providers.ResourceProperty" /> that is the property the value of which must be returned.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.GetSequenceValue``1(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets a named value from the specified object as a sequence.</summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance that contains the requested value as a sequence.</returns>
            <param name="value">Object that contains the value.</param>
            <param name="property">
              <see cref="T:System.Data.Services.Providers.ResourceProperty" /> that is the property the value of which must be returned.</param>
            <typeparam name="T">Type of the resulting sequence.</typeparam>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.OfType``2(System.Linq.IQueryable{``0},System.Data.Services.Providers.ResourceType)">
            <summary>Filters the supplied query based on the specified <see cref="T:System.Data.Services.Providers.ResourceType" />.</summary>
            <returns>Returns an <see cref="T:System.Linq.IQueryable`1" /> instance filtered by the supplied <paramref name="resourceType" />.</returns>
            <param name="query">The <see cref="T:System.Linq.IQueryable`1" /> instance to be filtered.</param>
            <param name="resourceType">
              <see cref="T:System.Data.Services.Providers.ResourceType" /> used to filter the query.</param>
            <typeparam name="TSource">Type of the <see cref="T:System.Linq.IQueryable`1" /> instance supplied as the <paramref name="query" /> parameter.</typeparam>
            <typeparam name="TResult">Type representing the resource type supplied as the <paramref name="resourceType" /> parameter.</typeparam>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.OfType``2(System.Collections.Generic.IEnumerable{``0},System.Data.Services.Providers.ResourceType)">
            <summary>Filters the supplied query based on the specified <see cref="T:System.Data.Services.Providers.ResourceType" />.</summary>
            <returns>Returns an <see cref="T:System.Linq.IQueryable`1" /> instance filtered by the supplied <paramref name="resourceType" />.</returns>
            <param name="query">The <see cref="T:System.Linq.IQueryable`1" /> instance to be filtered.</param>
            <param name="resourceType">
              <see cref="T:System.Data.Services.Providers.ResourceType" /> used to filter the query.</param>
            <typeparam name="TSource">Type of the <see cref="T:System.Linq.IQueryable`1" /> instance supplied as the <paramref name="query" /> parameter.</typeparam>
            <typeparam name="TResult">Type representing the resource type supplied as the <paramref name="resourceType" /> parameter.</typeparam>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>Casts a value to a specified type.</summary>
            <returns>The <paramref name="value" /> cast to the requested <paramref name="type" />.</returns>
            <param name="value">The value to cast to the requested type.</param>
            <param name="type">Resource type for which to check.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>Determines if the value is of a specified type.</summary>
            <returns>True if the value is of the specified type; otherwise false.</returns>
            <param name="value">The value to check.</param>
            <param name="type"><see cref="T:System.Data.Services.Providers.ResourceType" /> to compare with.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.TypeAs``1(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>Checks whether the given type is assignable from the resource type of a supplied object instance.</summary>
            <returns>Returns a null value when the <paramref name="value" /> is not of the specified <paramref name="type" />; otherwise returns the supplied <paramref name="value" />.</returns>
            <param name="value">The object instance to check.</param>
            <param name="type">The <see cref="T:System.Data.Services.Providers.ResourceType" /> against which to check for assignability.</param>
            <typeparam name="T">Type of the <paramref name="value" />.</typeparam>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.String,System.String)">
            <summary>Returns comparison information for string parameters in an operation expression.</summary>
            <returns>Value Condition -1 <paramref name="left" /> is less than <paramref name="right" />. 0 x equals y. 1 <paramref name="left" /> is greater than <paramref name="right" />.</returns>
            <param name="left">The first parameter value.</param>
            <param name="right">The second parameter value.</param>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Boolean,System.Boolean)">
            <summary>Returns comparison information for Boolean parameters in an operation expression.</summary>
            <returns>Value Condition -1 <paramref name="left" /> is less than <paramref name="right" />. 0 x equals y. 1 <paramref name="left" /> is greater than <paramref name="right" />.</returns>
            <param name="left">The first parameter value.</param>
            <param name="right">The second parameter value.</param>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Returns comparison information for nullable Boolean parameters in an operation expression.</summary>
            <returns>Value Condition -1 <paramref name="left" /> is less than <paramref name="right" />. 0 x equals y. 1 <paramref name="left" /> is greater than <paramref name="right" />.</returns>
            <param name="left">The first parameter value.</param>
            <param name="right">The second parameter value.</param>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Guid,System.Guid)">
            <summary>Returns comparison information for GUID parameters in an operation expression.</summary>
            <returns>Value Condition -1 <paramref name="left" /> is less than <paramref name="right" />. 0 x equals y. 1 <paramref name="left" /> is greater than <paramref name="right" />.</returns>
            <param name="left">The first parameter value.</param>
            <param name="right">The second parameter value.</param>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>Returns comparison information for nullable GUID parameters in an operation expression.</summary>
            <returns>Value Condition -1 <paramref name="left" /> is less than <paramref name="right" />. 0 x equals y. 1 <paramref name="left" /> is greater than <paramref name="right" />.</returns>
            <param name="left">The first parameter value.</param>
            <param name="right">The second parameter value.</param>
            <remarks>
            Do not change the name of this function because LINQ to SQL is sensitive about the
            method name, so is EF probably.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.AreByteArraysEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <returns>Returns a <see cref="T:System.Boolean" /> that is true when the arrays are equal; otherwise false.</returns>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.AreByteArraysNotEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <returns>Returns a <see cref="T:System.Boolean" /> that is true when the arrays are not equal; otherwise false.</returns>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
        </member>
        <member name="T:System.Data.Services.Providers.DataServiceProviderWrapper">
            <summary>
            Class to abstract IDataServiceMetadataProvider and IDataServiceQueryProvider, 
            hence making sure all the metadata and query provider calls are made via this class.
            
            Each request must create a new instance of this class because a 
            request is the defined scope of metadata consistency.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.operationWrapperCache">
            <summary>
            Maps operations to OperationWrappers.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.metadataProviderEdmModels">
            <summary>
            Maps the operation context to the corresponding MetadataProviderEdmModel which wraps the IDataServiceMetadataProvider
            no annotations are included.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.metadata">
            <summary>
            Metadata to be used by the service provider wrapper.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.metadataProvider">
            <summary>
            The metadata provider instance.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.queryProvider">
            <summary>
            The query provider instance.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.dataService">
            <summary>
            The data service instance.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.IsResourceSetsCacheInitialized">
            <summary>
            boolean flag indicating whether we've enumerated all the resources sets exposed
            by the metadata provider and the cache is fully initialized.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.edmSchemaVersion">
            <summary>EDM version to which metadata is compatible.</summary>
            <remarks>
            For example, a service operation of type Void is not acceptable 1.0 CSDL,
            so it should use 1.1 CSDL instead. Similarly, OpenTypes are supported
            in 1.2 and not before.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.responseMetadataVersion">
            <summary>Data Service Response Version for the $metadata.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.containerNamePrefix">
            <summary>
            Stores the string value "ContainerName."
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.fullyQualifiedContainerNamePrefix">
            <summary>
            Stores the string value "Namespace.ContainerName."
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.containerNameCache">
            <summary>
            Stores the value of the IDataServiceMetadataProvider.ContainerName value
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.containerNamespaceCache">
            <summary>
            Stores the value of the IDataServiceMetadataProvider.ContainerNamespace value
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.providerBehavior">
            <summary>
            The provider behavior. Updated per operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.DataServiceProviderWrapper.entityFrameworkProvider">
            <summary>
            The ETag provider. Updated per operation.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.#ctor(System.Data.Services.Caching.DataServiceCacheItem,System.Data.Services.Providers.IDataServiceMetadataProvider,System.Data.Services.Providers.IDataServiceQueryProvider,System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Creates a new instance of DataServiceProviderWrapper instance.
            </summary>
            <param name="cacheItem">Instance of DataServiceCacheItem containing cached configuration and metadata.</param>
            <param name="metadataProvider">Instance of the metadata provider.</param>
            <param name="queryProvider">Instance of the query provider.</param>
            <param name="dataService">The data service instance.</param>
            <param name="isInternallyCreatedProvider">Whether the provider was created internally.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceSets">
            <summary>
            Gets all visible containers.
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all resource sets.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </summary>
            <returns>All visible containers.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Returns the Expression that represents the container.
            </summary>
            <param name="resourceSet">resource set representing the entity set.</param>
            <returns>
            An Expression that represents the container; null if there is 
            no container for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="instance"/>.</summary>
            <param name="instance">Instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="instance"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <param name="resourceType">Resource type to which the property belongs.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetOpenPropertyValue(System.Object,System.String)">
            <summary>
            Get the value of the open property.
            </summary>
            <param name="target">instance of the type declaring the open property.</param>
            <param name="propertyName">name of the open property.</param>
            <returns>value for the open property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.InvokeServiceOperation(System.Data.Services.Providers.OperationWrapper,System.Object[])">
            <summary>
            Invoke the given service operation and returns the results.
            </summary>
            <param name="serviceOperation">service operation to invoke.</param>
            <param name="parameters">value of parameters to pass to the service operation.</param>
            <returns>returns the result of the service operation. If the service operation returns void, then this should return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetVisibleTypes">
            <summary>
            Returns all visible types in this data source
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all resource types.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </summary>
            <returns>All visible types in this data source.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetVisibleOperations">
            <summary>
            Returns all the visible operations in this data service.
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all service operations.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </summary>
            <returns>All visible operations in this data service.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.TryResolveResourceSet(System.String)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <returns>Resolved resource set, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the ResourceAssociationSet instance when given the source association end.
            </summary>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
            <returns>ResourceAssociationSet instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.TryResolveResourceType(System.String)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <returns>Resolved resource type, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="resourceType"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.TryResolveServiceOperation(System.String)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <returns>Resolved service operation, possibly null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.DisposeDataSource">
            <summary>Disposes of the metadata and query providers.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetMetadataProviderEdmModel">
            <summary>
            Gets the MetadataProviderEdmModel over this provider's metadata.
            </summary>
            <returns>The MetadataProviderEdmModel over this provider's metadata.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetMetadataResponseAndEdmSchemaVersions(System.Version@)">
            <summary>
            Gets the Data Service Response Version for $metadata as well as the EDM schema version.
            </summary>
            <param name="metadataEdmSchemaVersion">The metadata Edm schema version.</param>
            <returns>The response DSV for $metadata.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.PopulateMetadataCacheItemForBuiltInProvider">
            <summary>
            Iterates through the resource sets, service operations and resource types to pre-populate the metadata cache item.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceSet(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the target container for the given navigation property, source container and the source resource type
            </summary>
            <param name="sourceResourceSet">source entity set.</param>
            <param name="sourceResourceType">source resource type.</param>
            <param name="navigationProperty">navigation property.</param>
            <returns>target container that the navigation property refers to.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetETagProperties(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Return the list of ETag properties for a given type in the context of a given container
            </summary>
            <param name="containerName">Name of the container to use for context (for MEST-enabled providers)</param>
            <param name="resourceType">Type to get the ETag properties for</param>
            <returns>A collection of the properties that form the ETag for the given type in the given container</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceSerializableProperties(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the visible resource properties for <paramref name="resourceType"/> from <paramref name="resourceSet"/>.
            We cache the list of visible resource properties so we don't have to calculate it repeatedly when serializing feeds.
            </summary>
            <param name="resourceSet">Resource set in question.</param>
            <param name="resourceType">Resource type in question.</param>
            <returns>List of visible resource properties from the given resource set and resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.IsReflectionOrEFProviderAndImplementsUpdatable">
            <summary>
            Checks whether the current data provider behaves like a reflection or EF provider and whether it implements IUpdatable.
            </summary>
            <returns>Returns true if the current data source behaves like a reflection or EF provider and implements IUpdatable. Otherwise, returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetService``1">
            <summary>
            Retrieve an implementation of a data service interface (ie. IUpdatable, IExpandProvider,etc)
            </summary>
            <typeparam name="T">The type representing the requested interface</typeparam>
            <returns>An object implementing the requested interface, or null if not available</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Validates if the container should be visible and is not read only. If the container rights
            are set to None the container should not be visible.
            </summary>
            <param name="resourceSet">Resource set to be validated.</param>
            <returns>Validated container, null if the container is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateOperation(System.Data.Services.Providers.Operation)">
            <summary>
            Validates if the service operation should be visible and is read only. If the service operation
            rights are set to None the service operation should not be visible.
            </summary>
            <param name="operation">Operation to be validated.</param>
            <returns>Validated service operation, null if the service operation is not supposed to be visible.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetEntityContainerAnnotations(System.String)">
            <summary>
            Return the list of custom annotation for the entity container with the given name.
            </summary>
            <param name="entityContainerName">Name of the EntityContainer.</param>
            <returns>Return the list of custom annotation for the entity container with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetNameFromContainerQualifiedName(System.String,System.Boolean@)">
            <summary>
            Get the name portion of a container qualified name, i.e. returns Name from Namespace.ContainerName.Name or ContainerName.Name
            </summary>
            <param name="containerQualifiedName">A name qualified by the container name.</param>
            <param name="nameIsContainerQualified">Returns true if <paramref name="containerQualifiedName"/> is prefixed with "ContainerName." or "Namespace.ContainerName."; otherwise return false.</param>
            <returns>Returns the name portion of <paramref name="containerQualifiedName"/> if it is prefixed with "ContainerName." or "Namespace.ContainerName.";
            otherwise returns the given <paramref name="containerQualifiedName"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceTypeReadOnly(System.Data.Services.Providers.ResourceType)">
            <summary>
            Throws if resource type is not sealed.
            </summary>
            <param name="resourceType">resource type to inspect.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.AddUniqueNameToSet(System.String,System.Collections.Generic.HashSet{System.String},System.String)">
            <summary>
            This is a common method for checking uniqe names across entity sets, resource types and service operations.
            </summary>
            <param name="name">Name to be added to set.</param>
            <param name="names">Set containing already verified names.</param>
            <param name="exceptionString">String for exception to be thrown if the name is not unique.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.AssertCacheNotPreloaded(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Assert that we didn't expect the cache to already be preloaded.
            </summary>
            <param name="wrapper">The data service provider wrapper whose value of cache preloaded to check.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.VerifyMetadataRequestUri(System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Verify that the current request uri is metadata or service document uri.
            </summary>
            <param name="dataService">The data service instance.</param>
            <param name="canBeServiceDocumentUri">true if the request uri can be service uri also.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetResourceTypeAndReachableComplexTypes(System.Data.Services.Providers.ResourceType,System.Collections.Generic.HashSet{System.Data.Services.Providers.ResourceType})">
            <summary>Returns the given resource type and all reachable complex types from the resource type</summary>
            <param name="resourceType">resource type to inspect</param>
            <param name="visitedTypes">Hash set to make sure we only return unvisited types.</param>
            <returns>Returns the given resource type and all reachable complex types from the resource type</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetReachableTypesFromSet(System.Data.Services.Providers.ResourceSetWrapper,System.Collections.Generic.HashSet{System.Data.Services.Providers.ResourceType})">
            <summary>Get all reachable resource types from a resource set</summary>
            <param name="resourceSet">resource set to inspect</param>
            <param name="visitedTypes">Hash set to make sure we only return unvisited types.</param>
            <returns>List of reachable resource types from the given resource set</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.GetReachableComplexTypesFromOperation(System.Data.Services.Providers.OperationWrapper,System.Collections.Generic.HashSet{System.Data.Services.Providers.ResourceType})">
            <summary>Get all complex types reachable by the given service operation.</summary>
            <param name="operation">Operation to inspect</param>
            <param name="visitedTypes">Hash set to make sure we only return unvisited types.</param>
            <returns>List of reachable complex types from the given service operation.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateCollectionResourceType(System.Data.Services.Providers.CollectionResourceType)">
            <summary>
            Validates a collection resource type. Checks that it doesn't use derived complex types as its items.
            </summary>
            <param name="collectionResourceType">The <see cref="T:System.Data.Services.Providers.CollectionResourceType"/> to check.</param>
        </member>
        <member name="M:System.Data.Services.Providers.DataServiceProviderWrapper.ValidateResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>Validates that <paramref name="resourceType"/> is cached and read only.</summary>
            <param name="resourceType">Resource type to be validated.</param>
            <returns>Validated resource type, null if the resource type is not supposed to be visible.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ProviderBehavior">
            <summary>
            Provider behavior, this changes dynamically for each operation for non-internally created providers.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.CurrentDataSource">
            <summary>The data source from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.NullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ContainerNamespace">
            <summary>Namespace name for the container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ContainerName">
            <summary>Name of the container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.Configuration">
            <summary>
            Cached configuration with access rights info.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.StaticConfiguration">
            <summary>
            Cached static configuration with intercepter information.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.MetadataProvider">
            <summary>
            The metadata provider instance.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.QueryProvider">
            <summary>
            The query provider instance.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.HasReflectionOrEFProviderQueryBehavior">
            <summary>
            Returns true if the data provider has ReflectionProviderQueryBehavior or EntityFrameworkProviderQueryBehavior.
            Otherwise returns false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.IsInternallyCreatedProvider">
            <summary>
            Returns true if the provider was internally created, false otherwise.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ProjectionProvider">
            <summary>
            Returns the <see cref="T:System.Data.Services.Providers.IProjectionProvider"/> for this provider
            </summary>
            <returns>The <see cref="T:System.Data.Services.Providers.IProjectionProvider"/> for this provider</returns>
            <remarks>Note that this will only return non-null on V1 providers
            in which case it returns our V1 provider's implementation of this interface.
            In all other cases this returns null as we don't allow custom implementation of this interface yet.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.OperationWrapperCache">
            <summary>
            Maps operations to OperationWrappers.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.DataService">
            <summary>
            The data service instance. For batch operations, this is the internal
            data service instance and not the top level batch one.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.OperationContext">
            <summary>
            Returns the operation context for the current request. For operation within batch,
            this returns the context of the current operation, and not the one for the top level
            batch request.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.Types">
            <summary>
            Returns all types in this data source
            WARNING!!! This property can only be called for the $metadata path because it enumerates through all resource types.
            Calling it from outside of the $metadata path would break our IDSP contract.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.VisibleTypeCache">
            <summary>
            Keep track of the calculated visibility of resource types.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ResourceSetWrapperCache">
            <summary>
            Maps resource set names to ResourceSetWrappers.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.DataServiceProviderWrapper.ResourceAssociationSetCache">
            <summary>
            Maps names to ResourceAssociationSets.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.EdmUtil">
            <summary>
            This class contains code for EDM utility functions
            !!! THIS CODE IS USED BY System.Data.Services.Providers *AND* System.Data.EntityModel.Emitters CLASSES !!!
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.EdmUtil.FindExtendedProperty(System.Data.Metadata.Edm.MetadataItem,System.String)">
            <summary>
            Finds the extended property from a collection of extended EFx properties
            </summary>
            <param name="metadataItem">MetadataItem that contains the properties to search</param>
            <param name="propertyName">Name of the extended property</param>
            <returns>The corresponding MetadataProperty object if found, null otherwise</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityPropertyMappingInfo">
            <summary>
            Holds information needed during content serialization/deserialization for
            each EntityPropertyMappingAttribute
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityPropertyMappingInfo.attribute">
            <summary>
            Private field backing Attribute property.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityPropertyMappingInfo.definingType">
            <summary>
            Private field backing DefiningType property
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityPropertyMappingInfo.actualPropertyType">
            <summary>
            Type whose property is to be read. This property is of ClientType type on the client and of ResourceType type on the server.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityPropertyMappingInfo.isEFProvider">
            <summary>
            Private field backing IsEFProvider property
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityPropertyMappingInfo.propertyValuePath">
            <summary>
            Path to the property value. Stored as an array of property names to access on each other.
            If this mapping is for a non-collection property or for the collection property itself, this path starts at the entity resource.
            If this mapping is for a collection item property, this path starts at the collection item. In this case empty path is allowed, meaning the item itself.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntityPropertyMappingInfo.isSyndicationMapping">
            <summary>
            Set to true if this info describes mapping to a syndication item, or false if it describes a custom mapping
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityPropertyMappingInfo.#ctor(System.Data.Services.Common.EntityPropertyMappingAttribute,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType,System.Boolean)">
            <summary>
            Creates instance of EntityPropertyMappingInfo class.
            </summary>
            <param name="attribute">The <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> corresponding to this object</param>
            <param name="definingType">Type the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> was defined on.</param>
            <param name="actualPropertyType">Type whose property is to be read. This can be different from defining type when inheritance is involved.</param>
            <param name="isEFProvider">Whether the current data source is an EF provider. Needed for error reporting.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityPropertyMappingInfo.DefiningTypesAreEqual(System.Data.Services.Serializers.EntityPropertyMappingInfo)">
            <summary>Compares the defining type of this info and other EpmInfo object.</summary>
            <param name="other">The other EpmInfo object to compare to.</param>
            <returns>true if the defining types are the same</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityPropertyMappingInfo.Attribute">
            <summary>
            The <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/> corresponding to this object
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityPropertyMappingInfo.DefiningType">
            <summary>
            Type that has the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute"/>
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityPropertyMappingInfo.ActualPropertyType">
            <summary>
            Type whose property is to be read. This property is of ClientType type on the client and of ResourceType type on the server.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityPropertyMappingInfo.PropertyValuePath">
            <summary>
            Path to the property value. Stored as an array of property names to access on each other.
            If this mapping is for a non-collection property or for the collection property itself, this path starts at the entity resource.
            If this mapping is for a collection item property, this path starts at the collection item. In this case empty path is allowed, meaning the item itself.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityPropertyMappingInfo.IsSyndicationMapping">
            <summary>
            Set to true if this info describes mapping to a syndication item, or false if it describes a custom mapping
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityPropertyMappingInfo.IsEFProvider">
            <summary>Is the current data source an EF provider</summary>
        </member>
        <member name="T:System.Data.Services.Providers.OrderingExpression">
            <summary>
            Describes a single ordering expression along with sort order
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingExpression.orderingExpression">
            <summary>Ordering expression</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingExpression.isAscending">
            <summary>Order is ascending or descending</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingExpression.#ctor(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="orderingExpression">Expression for ordering</param>
            <param name="isAscending">Order by ascending or descending</param>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingExpression.Expression">
            <summary>Ordering expression</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingExpression.IsAscending">
            <summary>Ascending or descending</summary>
        </member>
        <member name="T:System.Data.Services.Providers.OrderingInfo">
            <summary>
            Describes ordering information for each entity set
            for $expand request for a WCF Data Service.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingInfo.paged">
            <summary>Is the expanded entity set paged</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OrderingInfo.orderingExpressions">
            <summary>Collection of ordering expressions</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingInfo.#ctor(System.Boolean)">
            <summary>Constructor</summary>
            <param name="paged">Whether top level entity set is paged</param>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingInfo.Add(System.Data.Services.Providers.OrderingExpression)">
            <summary>Adds a single OrderingExpression to the collection</summary>
            <param name="orderingExpression">Ordering expression to add</param>
        </member>
        <member name="M:System.Data.Services.Providers.OrderingInfo.AddRange(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.OrderingExpression})">
            <summary>Adds multiple OrderingExpressions to the collection</summary>
            <param name="expressions">Ordering expressions to add</param>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingInfo.IsPaged">
            <summary>Is the expaded entity set paged</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OrderingInfo.OrderingExpressions">
            <summary>Gives the collection of ordering expressions for a request</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceAssociationSetEnd">
            <summary>
            Class to describe an end point of a resource association set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSetEnd.resourceSet">
            <summary>
            Resource set for the association end.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSetEnd.resourceType">
            <summary>
            Resource type for the association end.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSetEnd.resourceProperty">
            <summary>
            Resource property for the association end.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSetEnd.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSetEnd.#ctor(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>Creates a new instance of the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> class.</summary>
            <param name="resourceSet">The resource set to which the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> end belongs.</param>
            <param name="resourceType">The resource type to which the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> end belongs.</param>
            <param name="resourceProperty">The resource property that returns the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> end.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSetEnd.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceSet">
            <summary>Gets the resource set for the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
            <returns>The resource set.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceType">
            <summary>Gets the resource type for the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
            <returns>The resource type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceProperty">
            <summary>Gets the resource property that returns the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
            <returns>The resource property.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.CustomState">
            <summary>Gets the custom state for the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
            <returns>The custom state.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this association set end.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.Name">
            <summary>
            Set the role name for the resource association set end.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceAssociationSet">
            <summary>
            Class to describe an association between two resource sets.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSet.name">
            <summary>
            Name of the association set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSet.end1">
            <summary>
            End1 of the association set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSet.end2">
            <summary>
            End2 of the association set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationSet.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSet.#ctor(System.String,System.Data.Services.Providers.ResourceAssociationSetEnd,System.Data.Services.Providers.ResourceAssociationSetEnd)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> class.</summary>
            <param name="name">Name of the association set.</param>
            <param name="end1"><see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the source end of the association set.</param>
            <param name="end2"><see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the target end of the association set.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSet.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSet.GetResourceAssociationSetEnd(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Retrieve the end for the given resource set, type and property.
            </summary>
            <param name="resourceSet">resource set for the end</param>
            <param name="resourceType">resource type for the end</param>
            <param name="resourceProperty">resource property for the end</param>
            <returns>Resource association set end for the given parameters</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSet.GetRelatedResourceAssociationSetEnd(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Retrieve the related end for the given resource set, type and property.
            </summary>
            <param name="resourceSet">resource set for the source end</param>
            <param name="resourceType">resource type for the source end</param>
            <param name="resourceProperty">resource property for the source end</param>
            <returns>Related resource association set end for the given parameters</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationSet.SetAssociationType(System.Data.Services.Providers.ResourceAssociationType)">
            <summary>
            Add the association type associated with this set.
            </summary>
            <param name="association">Association type.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSet.Name">
            <summary>Gets the name of the association set.</summary>
            <returns>The name of the association set.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSet.End1">
            <summary>Gets the source end of the association set.</summary>
            <returns><see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the source end of the association set.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSet.End2">
            <summary>Gets the target end of the association set.</summary>
            <returns><see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the target end of the association set.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSet.CustomState">
            <summary>Gets or sets the custom state information about the resource association.</summary>
            <returns>The custom state information about the resource association.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSet.ResourceAssociationType">
            <summary>
            Resource association type for the set.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationSet.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this set.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceAssociationTypeEnd">
            <summary>
            Stores information about an end of an association.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationTypeEnd.name">
            <summary>Name of the relationship end </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationTypeEnd.resourceType">
            <summary>Type of the relationship end.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationTypeEnd.resourceProperty">
            <summary>Property of the relationship end.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationTypeEnd.multiplicity">
            <summary>Property on the related end that points to this end. The multiplicity of this end is determined from the fromProperty.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationTypeEnd.deleteAction">
            <summary>Operation action for this end.</summary>
            Since this is a internal field, its better to use the EdmLib enum for this rather than redefining the enum.
        </member>
        <member name="F:System.Data.Services.Providers.ResourceAssociationTypeEnd.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationTypeEnd.#ctor(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Creates a new instance of EndInfo.
            </summary>
            <param name="name">name of the end.</param>
            <param name="resourceType">resource type that the end refers to.</param>
            <param name="resourceProperty">property of the end.</param>
            <param name="fromProperty">Property on the related end that points to this end. The multiplicity of this end is determined from the fromProperty.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationTypeEnd.#ctor(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.String,Microsoft.Data.Edm.EdmOnDeleteAction)">
            <summary>
            Creates a new instance of EndInfo.
            </summary>
            <param name="name">name of the end.</param>
            <param name="resourceType">resource type that the end refers to.</param>
            <param name="resourceProperty">property of the end.</param>
            <param name="multiplicity">Multiplicity of the association.</param>
            <param name="deleteBehavior">Delete behavior.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceAssociationTypeEnd.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationTypeEnd.Name">
            <summary>Name of the relationship end </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationTypeEnd.ResourceType">
            <summary>Type of the relationship end.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationTypeEnd.ResourceProperty">
            <summary>Property of the relationship end.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationTypeEnd.Multiplicity">
            <summary>Mulitplicity of the relationship end </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationTypeEnd.DeleteBehavior">
            <summary>Action to be performed on the other end when the entity on this end is deleted.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceAssociationTypeEnd.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this set.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceSet">
            <summary>
            Structure to keep information about a resource set
            </summary>
            <remarks>
            Custom providers can choose to use it as is or derive from it
            in order to flow provider-specific data.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.elementType">
            <summary> Reference to resource type that this resource set is a collection of</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.queryRootType">
            <summary>Type of the query root for the set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.name">
            <summary>Name of the resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.entityContainerName">
            <summary>Name of the entity container to which the set belongs to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.isReadOnly">
            <summary>Is true, if the resource set is fully initialized and validated. No more changes can be made once its set to readonly.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.useMetadataKeyOrder">
            <summary>Is true, if key properties should be ordered as per declared order when used for constructing OrderBy queries.
            Otherwise the default alphabetical order is used.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSet.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>Creates a new instance of <see cref="T:System.Data.Services.Providers.ResourceSet" /> class.</summary>
            <param name="name">The name of the set of items as string.</param>
            <param name="elementType">The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the items in the set.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.SetReadOnly">
            <summary>Gets or sets the read-only status of the collection.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSet.ThrowIfSealed">
            <summary>
            Checks if the resource set is sealed. If not, it throws an InvalidOperationException.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.Name">
            <summary>Gets the name of the collection.</summary>
            <returns>The name of the resource set.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.ResourceType">
            <summary>Gets the type of the collection.</summary>
            <returns>The type of the collection.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.CustomState">
            <summary>Gets or sets custom state information that is defined by the developer.</summary>
            <returns>The state information defined by the developer.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.IsReadOnly">
            <summary>Gets whether the set is read-only.</summary>
            <returns>true if the set is read-only; Otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.UseMetadataKeyOrder">
            <summary>Get or sets whether to use the order of key properties as defined in the metadata of an Entity Framework or reflection provider when constructing an implicit OrderBy query.</summary>
            <returns>true when the order of key properties is inferred from the provider metadata; Otherwise, false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.QueryRootType">
            <summary>Type of the query root for the set.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this set.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSet.EntityContainerName">
            <summary>
            Name of the entity container to which the set belongs to.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceSetWrapper">
            <summary>
            Wrapper class for a resource set.  A resource set object can be shared across services,
            this wrapper class contains the resouce set information and also service specific
            information about that resource set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.UseMetadataKeyOrderDictionaryKey">
            <summary>The string used as a key to a dictionary in CustomState of the resource set. If this key exists and its
            value is a boolean true value, then the QFE way of enabling the metadata key order was used and it overrides
            any setting of the public property on the resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.resourceSet">
            <summary>Reference to the wrapped resource set</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.resourcePropertyCache">
            <summary>
            Caches for all the visible properties for the given resource type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.resourceType">
            <summary>Reference to the wrapped resource type.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.rights">
            <summary>Access rights to this resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.pageSize">
            <summary>Page Size for this resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.readAuthorizationMethods">
            <summary>Methods to be called when composing read queries to allow authorization.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.writeAuthorizationMethods">
            <summary>Methods to be called when validating write methods to allow authorization.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.hasEntityPropertyMappings">
            <summary>Whether the types contained in the set have EPM.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.epmMinDSPV">
            <summary>Minimum DSPV required to serialize EPMs in this resource set</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.hasAccessibleNavigationProperty">
            <summary>Whether the types contained in the set have any navigation property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.hasOpenTypes">
            <summary>Whether the set has open types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.hasDerivedTypes">
            <summary>Whether the set type has derived types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetWrapper.metadataVersion">
            <summary>Metadata version of the resourceSet. This does not take EPM into account.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.#ctor(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Constructs a new ResourceSetWrapper instance using the ResourceSet instance to be enclosed.
            </summary>
            <param name="resourceSet">ResourceSet instance to be wrapped by the current instance</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.CreateForTests(System.Data.Services.Providers.ResourceSet,System.Data.Services.EntitySetRights)">
            <summary>
            Creates the wrapper from the given resource set for use in unit tests.
            </summary>
            <param name="resourceSet">resource set instance whose wrapper needs to get created.</param>
            <param name="rights">Optional rights for the set. Defaults to None.</param>
            <returns>Wrapper for the given resource set.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.CreateResourceSetWrapper(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.DataServiceProviderWrapper,System.Func{System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType})">
            <summary>
            Creates the wrapper from the given resource set. This method returns null, if the given resource set is not visible.
            It also checks for the resource set metadata to make sure that the MPV in the configuration is set correctly
            </summary>
            <param name="resourceSet">resource set instance whose wrapper needs to get created.</param>
            <param name="provider">DataServiceProviderWrapper instance.</param>
            <param name="resourceTypeValidator">resource type validator.</param>
            <returns>Wrapper for the given resource set, if the resource set/resource type metadata is valid and adheres to the protocol version in the server.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.HasDerivedTypes(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Determines whether the element type of the resource set has any derived types.
            </summary>
            <param name="provider">Data service provider instance.</param>
            <returns>true if the resource set type has any derived types.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.HasAccessibleNavigationProperty(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Whether the types contained in the set have any navigation property or not</summary>
            <param name="provider">Data service provider instance.</param>
            <returns>True if there's any type in this set which has named streams. False otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.MinimumResponsePayloadVersion(System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Determines the minimum payload version that can be used for the set.
            </summary>
            <param name="service">The data service instance</param>
            <param name="considerEpmInVersion">True if EPM should be included in the version calculation.</param>
            <returns>The minimum version that can be used for a payload for or from this set.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.HasEntityPropertyMappings(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Whether the types contained in the set have entity property mappings or not</summary>
            <param name="provider">Data service provider instance.</param>
            <returns>True if there's any type in this set which has entity property mappings. False otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.VerifyEpmProtocolVersion(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Minimum DSPV required to serialize EPMs in this resource set</summary>
            <param name="provider">Data service provider instance.</param>
            <returns>Minimum DSPV required to serialize EPMs in this resource set</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.GetKeyPropertiesForOrderBy">
            <summary>Returns list of key properties ordered as appropriate for construction of OrderBy queries
            (for implicit sorting of results).</summary>
            <returns>List of key properties ordered either alphabetically or in the declared order depending on the UseMetadataKeyOrder.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.GetEntitySerializableProperties(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the visible resource properties for <paramref name="entityType"/> for this set.
            We cache the list of visible resource properties so we don't have to calculate it repeatedly when serializing feeds.
            </summary>
            <param name="provider">Data service provider instance.</param>
            <param name="entityType">Resource type in question.</param>
            <returns>List of visible resource properties for the resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.GetEntitySerializablePropertiesDeclaredOnTheResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the visible resource properties declared on the <paramref name="entityType"/> for this set.
            We cache the list of visible resource properties so we don't have to calculate it repeatedly when serializing feeds.
            </summary>
            <param name="provider">Data service provider instance.</param>
            <param name="entityType">Resource type in question.</param>
            <returns>List of visible resource properties declared on the resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.CheckHierarchy(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Whether the types contained in the set have named streams or not</summary>
            <param name="provider">Data service provider instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.ApplyConfiguration(System.Data.Services.DataServiceConfiguration,System.Data.Services.DataServiceStaticConfiguration)">
            <summary>
            Apply the given configuration to the resource set.
            </summary>
            <param name="configuration">data service configuration instance.</param>
            <param name="staticConfiguration">Data service static configuration.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetWrapper.InitializeResourcePropertyCache(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.ResourceType)">
            <summary>
            Checks if the cache is populated, otherwise populates it.
            </summary>
            <param name="provider">Data service provider instance.</param>
            <param name="type">Resource type in question.</param>
            <returns>An instance of ResourcePropertyCache, with all information about the properties cached.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.Name">
            <summary>Name of the resource set.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.ResourceType">
            <summary> Reference to resource type that this resource set is a collection of </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.IsVisible">
            <summary>Whether the resource set is visible to service consumers.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.Rights">
            <summary>Access rights to this resource set.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.PageSize">
            <summary>Page Size for this resource set.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.QueryInterceptors">
            <summary>Retursn the list of query interceptors for this set (possibly null).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.ChangeInterceptors">
            <summary>Returns the list of change interceptors for this set (possible null).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.ResourceSet">
            <summary>Returns the wrapped resource set instance.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.QueryRootType">
            <summary>Type of the query root for the set.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.UseMetadataKeyOrder">
            <summary>Is true, if key properties should be ordered as per declared order when used for constructing OrderBy queries.
            Otherwise the default alphabetical order is used.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.EntityContainerName">
            <summary>
            Name of the entity container to which the set belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this set.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceSetWrapper.ResourcePropertyCache">
            <summary>
            Class to cache all the visible properties of a resource type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.ResourcePropertyCache.Properties">
            <summary>List of all visible properties for a resource type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetWrapper.ResourcePropertyCache.PropertiesDeclaredOnTheType">
            <summary>List of all visible properties declared on a resource type.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.RootProjectionNode">
            <summary>Internal class which implements the root of the projection tree.</summary>
            <remarks>This class is used to carry information required by our V1 providers
            to able able to fall back to the V1 behavior of using the <see cref="T:System.Data.Services.IExpandProvider"/> interface.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.RootProjectionNode.expandPaths">
            <summary>The collection of expand paths.</summary>
            <remarks>Used by V1 providers to pass the V1 way of representing description
            of expands in the query to the <see cref="T:System.Data.Services.IExpandProvider"/>.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.RootProjectionNode.baseResourceType">
            <summary>The base resource type for all entities in this query.</summary>
            <remarks>This is usually the base resource type of the resource set as well,
            but it can happen that it's a derived type of the resource set base type.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.RootProjectionNode.#ctor(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.OrderingInfo,System.Linq.Expressions.Expression,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.Data.Services.ExpandSegmentCollection},System.Data.Services.Providers.ResourceType)">
            <summary>Creates new root node for the projection tree.</summary>
            <param name="resourceSetWrapper">The resource set of the root level of the query.</param>
            <param name="orderingInfo">The ordering info for this node. null means no ordering to be applied.</param>
            <param name="filter">The filter for this node. null means no filter to be applied.</param>
            <param name="skipCount">Number of results to skip. null means no results to be skipped.</param>
            <param name="takeCount">Maximum number of results to return. null means return all available results.</param>
            <param name="maxResultsExpected">Maximum number of expected results. Hint that the provider should return
            at least maxResultsExpected + 1 results (if available).</param>
            <param name="expandPaths">The list of expanded paths.</param>
            <param name="baseResourceType">The resource type for all entities in this query.</param>
        </member>
        <member name="P:System.Data.Services.Providers.RootProjectionNode.ResourceType">
            <summary>The resource type in which all the entities expanded by this segment will be of.</summary>
            <remarks>This is usually the resource type of the <see cref="T:System.Data.Services.Providers.ResourceSetWrapper"/> for this node,
            but it can also be a derived type of that resource type.
            This can happen if navigation property points to a resource set but uses a derived type.
            It can also happen if service operation returns entities from a given resource set
            but it returns derived types.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.RootProjectionNode.ExpandPaths">
            <summary>The collection of expand paths.</summary>
            <remarks>Used by V1 providers to pass the V1 way of representing description
            of expands in the query to the <see cref="T:System.Data.Services.IExpandProvider"/>.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.RootProjectionNode.UseExpandPathsForSerialization">
            <summary>Flag which is set when the ExpandPaths property should be used to determine the expanded
            properties to serialize instead of using the ProjectedNode tree.</summary>
            <remarks>This flag is set if the old IExpandProvider was used to process expansions and thus it could have
            modified the ExpandPaths, in which case the serialization needs to use that to comply with the provider.
            Note that this can never be set to true if projections where used in the query, so in that case
            there's no possiblity for the ExpandPaths to differ from the ProjectedNode tree.
            If projections are in place, we only apply the expansion removal caused by "*" projection expressions
            to the tree and leave the ExpandPaths unaffected, as they should not be used in that case.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.RootProjectionNode.ProjectionsSpecified">
            <summary>Flag used to mark that projections were used in the query.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.RootProjectionNode.ExpansionsSpecified">
            <summary>Returns true if there are any expansions in this tree.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.RootProjectionNode.ExpansionOnDerivedTypesSpecified">
            <summary>Returns true if there are any expanded navigation property on derived types in this tree.</summary>
            <remarks>There are bunch of reasons we need to know if there are any derived property expansions
            specified in the tree.
            1> For the V1 IExpandProvider interface, we do not want to support expansion on derived navigation properties.
            2> When building the expression tree, we will apply the orderby, skip and take before the select, unlike we did in V1.
            3> For EF provider, we need to make sure that we use the in-build expand provider, instead of doing .Include
            </remarks>
        </member>
        <member name="T:System.Data.Services.Providers.OperationWrapper">
            <summary>Use this class to represent an operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationWrapper.operation">
            <summary>
            Wrapped instance of the operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationWrapper.actionTargetSegmentByResourceType">
            <summary>
            Used to cache the target segment for this operation by resource type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationWrapper.serviceOperationRights">
            <summary>Access rights to this service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationWrapper.serviceActionRights">
            <summary>Access rights to this service action.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationWrapper.resourceSet">
            <summary>Entity set from which entities are read, if applicable.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.OperationWrapper.#ctor(System.Data.Services.Providers.Operation)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Providers.OperationWrapper"/> instance.
            </summary>
            <param name="operationBase">OperationBase instance to be wrapped.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OperationWrapper.ApplyConfiguration(System.Data.Services.DataServiceConfiguration,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Apply the given configuration to the resource set.
            </summary>
            <param name="configuration">data service configuration instance.</param>
            <param name="provider">data service provider wrapper instance for accessibility validation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.OperationWrapper.GetResultSet(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Gets the result set for the operation.
            </summary>
            <param name="provider">Provider instance to resolve the path expression.</param>
            <param name="bindingSet">Binding resource set.</param>
            <returns>Returns the result resource set for the operation.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.OperationWrapper.GetActionTargetSegmentByResourceType(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Gets the target segment of the service action based on the resource type. If the action name collides with a property of the 
            <paramref name="resourceType"/>, then this method resolves the name collision by prefixing the action name with the <paramref name="containerName"/>.
            </summary>
            <param name="resourceType">The resource type against which to get the target of the service action.</param>
            <param name="containerName">The name of the container, containing this operation. Used to resolve service action name collision with the resource property if any.</param>
            <returns>The name of the operation wrapper or the name prefixed with the <paramref name="containerName"/> in case of name collision with the 
            <paramref name="resourceType"/> property.</returns>
            <remarks>This method maintains a cache of action targets by resource type for efficiency.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.Method">
            <summary>Protocol (for example HTTP) method the service operation responds to.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.MimeType">
            <summary>MIME type specified on primitive results, possibly null.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.Name">
            <summary>Name of the service operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.Parameters">
            <summary>Returns all the parameters for the given service operations.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ResultKind">
            <summary>Kind of result expected from this operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ResultType">
            <summary>Element of result type.</summary>
            <remarks>
            Note that if the method returns an IEnumerable&lt;string&gt;, 
            this property will be typeof(string).
            </remarks>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ReturnType">
            <summary>Return type of the operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ServiceOperation">
            <summary>
            Gets the wrapped service operation
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ServiceAction">
            <summary>
            Gets the wrapped service action
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.IsVisible">
            <summary>Whether the operation is visible to service consumers.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ServiceOperationRights">
            <summary>Access rights to this service operation.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ServiceActionRights">
            <summary>Access rights to this service action.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ResourceSet">
            <summary>Entity set from which entities are read (possibly null).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ResultSetPathExpression">
            <summary>Path expression to calculate the result resource set of the function if the function returns an entity or a collection of entity.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.BindingParameter">
            <summary>
            The binding parameter to this function/action; null if this function/action is top-level or this operation is not a function or action.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.OperationParameterBindingKind">
            <summary>
            The <see cref="P:System.Data.Services.Providers.OperationWrapper.OperationParameterBindingKind"/> value of the underlying operation.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.Kind">
            <summary>
            The kind of the current service operation
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.OperationWrapper.ReturnInstanceType">
            <summary>
            Gets the Clr return type.
            </summary>
        </member>
        <member name="T:System.Data.Services.QueryInterceptorAttribute">
            <summary>
            Use this attribute on a DataService method to indicate than this method should be invoked to intercept queries.
            </summary>
        </member>
        <member name="F:System.Data.Services.QueryInterceptorAttribute.entitySetName">
            <summary>Entity set name that the method filters.</summary>
        </member>
        <member name="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> class for the entity set specified by the <paramref name="entitySetName" /> parameter.</summary>
            <param name="entitySetName">The name of the entity set that contains the entity to which the interceptor applies.</param>
        </member>
        <member name="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName">
            <summary>Gets the name of the entity set that contains the entity to which the interceptor applies.</summary>
            <returns>A string that indicates the name of the entity set that contains the entity to which the interceptor applies.</returns>
        </member>
        <member name="T:System.Data.Services.RequestDescription">
            <summary>
            Use this class to describe the data request a client has
            submitted to the service.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.containerName">
            <summary>The name of the container for results.</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.rootProjectionNode">
            <summary>Root of the projection and expansion tree.</summary>
            <remarks>If this is null - no projections or expansions were part of the request.</remarks>
        </member>
        <member name="F:System.Data.Services.RequestDescription.mimeType">
            <summary>The MIME type for the requested resource, if specified.</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.resultUri">
            <summary>URI for the result (without the query component).</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.segmentInfos">
            <summary>SegmentInfo containing information about every segment in the uri</summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.requestMaxVersion">
            <summary>
            Maximum version that can be understood by the client, this is the value of MaxDataServiceVersion header in request.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.serviceMaxProtocolVersion">
            <summary>
            The maximum protocol version the service supports.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.effectiveMaxResponseVersion">
            <summary>
            The effective max protocol version of the response (the lesser of the service and request max versions).
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.responsePayloadKind">
            <summary>
            Storage for the response payload kind once it has been determined.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.responseBodyOrETagShouldBeWritten">
            <summary>
            Storage for whether or not the response body or etag should be written once it has been determined.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestDescription.responseBodyShouldBeWritten">
            <summary>
            Storage for whether or not the response body should be written once it has been determined.
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestDescription.#ctor(System.Data.Services.RequestTargetKind,System.Data.Services.RequestTargetSource,System.Uri)">
            <summary>
            Initializes a new RequestDescription for a query specified by the
            request Uri.
            </summary>
            <param name="targetKind">The kind of target for the request.</param>
            <param name="targetSource">The source for this target.</param>
            <param name="resultUri">URI to the results requested (with no query component).</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.#ctor(System.Collections.Generic.IList{System.Data.Services.SegmentInfo},System.Uri)">
            <summary>
            Initializes a new RequestDescription for a query specified by the
            request Uri.
            </summary>
            <param name="segmentInfos">list containing information about each segment of the request uri</param>
            <param name="resultUri">URI to the results requested (with no query component).</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.#ctor(System.Data.Services.RequestDescription,System.Linq.Expressions.Expression,System.Data.Services.Providers.RootProjectionNode)">
            <summary>Initializes a new RequestDescription based on an existing one.</summary>
            <param name="other">Other description to base new description on.</param>
            <param name="resultExpression">Query results for new request description.</param>
            <param name="rootProjectionNode">Projection segment describing the projections on the top level of the query.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.CreateSingleResultRequestDescription(System.Data.Services.RequestDescription,System.Object)">
            <summary>
            Create a new request description from the given request description and new entity as the result.
            </summary>
            <param name="description">Existing request description.</param>
            <param name="entity">entity that needs to be the result of the new request.</param>
            <returns>a new instance of request description containing information about the given entity.</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.CreateSingleResultRequestDescription(System.Data.Services.RequestDescription,System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>
            Create a new request description from the given request description and new entity as the result.
            </summary>
            <param name="description">Existing request description.</param>
            <param name="entity">entity that needs to be the result of the new request.</param>
            <param name="targetResourceType">The new target resource type for the new request description.</param>
            <returns>a new instance of request description containing information about the given entity.</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.UpdatePayloadKindFromValueIfNeeded(System.Data.Services.QueryResultInfo,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Updates the current payload kind from the given query results if needed. This is to account for open-property values
            being either 'value' or 'binaryvalue' depending on the instance type.
            </summary>
            <param name="queryResults">The query results.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.AnalyzeClientPreference(System.Data.Services.IDataService)">
            <summary>
            Processes and applies the client preference for return content.
            </summary>
            <param name="service">Service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.ApplyCountOption(System.Data.Services.IDataService)">
            <summary>
            Processes and applies the count option if present in the last segment.
            </summary>
            <param name="service">Service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.ParseExpandAndSelect(System.Data.Services.IDataService)">
            <summary>
            Parses the select query option.
            </summary>
            <param name="dataService">The data service.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.DetermineResponseFormat(System.Data.Services.IDataService)">
            <summary>
            Processes the accept header and determines the format of the response.
            </summary>
            <param name="service">Service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.UpdateVersion(System.Data.Services.IDataService)">
            <summary>Updates the request and response versions based on response format and the target resource set</summary>
            <param name="service">data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.UpdateVersion(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.IDataService)">
            <summary>Updates the request and response versions based on response format and the target resource set</summary>
            <param name="resourceSet">resourceSet to check for friendly feeds presence</param>
            <param name="service">data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.UpdateResponseVersionForPostMediaResource(System.Data.Services.Providers.ResourceType,System.Data.Services.IDataService)">
            <summary>
            Check and updates the response version for POST MR operation.
            </summary>
            <param name="resourceType">Resource type for the MLE.</param>
            <param name="dataService">Data service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.VerifyRequestVersion(System.Version,System.Data.Services.IDataService)">
            <summary>
            Raise the minimum client version requirement for this request
            </summary>
            <param name="requiredVersion">The required version for this request.</param>
            <param name="service">The data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.GetIndexOfTargetEntityResource">
            <summary>
            Returns the last segment info whose target request kind is resource
            </summary>
            <returns>The index of the parent resource</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.HandleCallbackQueryOption(System.Data.Services.IDataService)">
            <summary>
            Handle the $callback query option.
            </summary>
            <param name="service">Data Service.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.VerifyAndRaiseResponseVersion(System.Version,System.Data.Services.IDataService)">
            <summary>
            Raise the response version for this request
            </summary>
            <param name="version">Response version for this request.</param>
            <param name="service">The data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.VerifyAndRaiseActualResponseVersion(System.Version,System.Data.Services.IDataService)">
            <summary>
            Raise the response version for this request
            </summary>
            <param name="version">Response version for this request.</param>
            <param name="service">The data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.VerifyProtocolVersion(System.Version,System.Data.Services.IDataService)">
            <summary>
            Raise the version for features used in the user's request
            </summary>
            <param name="featureVersion">The feature version required for this request.</param>
            <param name="service">The data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.ApplyRequestMinVersion(System.Data.Services.IDataService)">
            <summary>
            Update the response version to be at least equal to the MinDSV received in the request.
            </summary>
            <param name="service">The data service instance</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.DetermineWhetherResponseBodyOrETagShouldBeWritten(System.Data.Services.HttpVerbs)">
            <summary>
            Determines the whether response body should be written based on the request verb and the uri.
            NOTE: Does not consider the client's preference when determining this.
            </summary>
            <param name="requestVerb">The request verb.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.DetermineWhetherResponseBodyShouldBeWritten(System.Data.Services.HttpVerbs)">
            <summary>
            Determines the whether response body should be written based on the request verb, the uri, and the client's preference.
            </summary>
            <param name="requestVerb">The request verb.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.InferContainerNameFromSegments(System.Collections.Generic.IList{System.Data.Services.SegmentInfo})">
            <summary>
            Infers a container name for the request description from its segments.
            </summary>
            <param name="segmentInfos">The segments of the request.</param>
            <returns>The container name for the request.</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.InferMimeTypeFromSegments(System.Collections.Generic.IList{System.Data.Services.SegmentInfo})">
            <summary>
            Infers the expected mime type for the response from the properties and operations in the request's segments.
            </summary>
            <param name="segmentInfos">The segments of the request.</param>
            <returns>The mime type.</returns>
        </member>
        <member name="M:System.Data.Services.RequestDescription.InitializeVersion(System.Data.Services.IDataService)">
            <summary>
            Initialize the version headers.
            </summary>
            <param name="service">Service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.CopyFrom(System.Data.Services.RequestDescription)">
            <summary>
            Copies settings from another request-description instance.
            </summary>
            <param name="other">The description to copy from.</param>
        </member>
        <member name="M:System.Data.Services.RequestDescription.DetermineResponsePayloadKind">
            <summary>
            Determines the kind of the response payload based on the current request.
            </summary>
            <returns>The kind of the response payload.</returns>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ContainerName">
            <summary>The name of the container for results.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.RootProjectionNode">
            <summary>Root of the projection and expansion tree.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ResultUri">
            <summary>URI for the result (without the query component).</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.SegmentInfos">
            <summary>Returns the list containing the information about each segment that make up the request uri</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.MimeType">
            <summary>The MIME type for the requested resource, if specified.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.CountOption">
            <summary>Returns the request's counting options</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.SkipTokenExpressionCount">
            <summary>Number of expressions in the $skiptoken for top level expression</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.SkipTokenProperties">
            <summary>Collection of properties in the $skiptoken for top level expression</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.CountValue">
            <summary>Returns the value of the row count</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.RequestVersion">
            <summary>
            Version of the request, this is the value of DataServiceVersion header in request.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ResponseVersion">
            <summary>The server response version</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ActualResponseVersion">
            <summary>The actual server response version. Because of V1/V2 bug, there are few places that we set
            the response version to V1 even though the actual response version is V2 because of backward
            compat bug.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.Preference">
            <summary>Client preference for payload in response.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ShouldWriteResponseBodyOrETag">
            <summary>
            If the server needs to write a response body or etag in the response based on the request verb and uri.
            NOTE: The client's preference is not considered when determining this.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ShouldWriteResponseBody">
            <summary>
            If the server needs to write a response body in the response based on the request verb, uri, and client preference.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ResponseFormat">
            <summary>Gets the format of the response.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.PayloadMetadataParameterInterpreter">
            <summary>Gets the payload metadata parameter interpreter for the request.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ExpandAndSelect">
            <summary>
            Gets the select query option value.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.RequestExpression">
            <summary>The base query for the request, before client-specified composition.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsSingleResult">
            <summary>Whether the result of this request is a single element.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetKind">
            <summary>The kind of target being requested.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetResourceType">
            <summary>The type of resource targetted by this request.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetResourceSet">
            <summary>The resource set of the resource targetted by this request.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.TargetSource">
            <summary>The type of source for the request target.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.Property">
            <summary>
            Returns the resource property on which this query is targeted
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.LastSegmentInfo">
            <summary>Returns the last segment</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.LinkUri">
            <summary>Returns true if the request description refers to a link uri. Otherwise returns false.</summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsRequestForEnumServiceOperation">
            <summary>
            Is the request for an IEnumerable&lt;T&gt; returning service operation.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsRequestForNonEntityProperty">
            <summary>
            Returns true if the request is targetting a non-entity property
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsETagHeaderAllowed">
            <summary>
            Checks whether etag headers are allowed (both request and response) for this request.
            ETag request headers are mainly If-Match and If-None-Match headers
            ETag response header is written only when its valid to specify one of the above mentioned request headers.
            </summary>
            <value> description about the request uri. </value>
            <value> true if If-Match or If-None-Match are allowed request headers for this request, otherwise false. </value>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsNamedStream">
            <summary>
            Determine if the request target is a named stream.
            </summary>
            <value> request description. </value>
            <value> True if the request target is a named stream. </value>
        </member>
        <member name="P:System.Data.Services.RequestDescription.StreamProperty">
            <summary>
            Get the target stream info for the current default or named stream request.
            </summary>
            <value> request description </value>
            <value> Stream info instance for the request </value>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsServiceActionRequest">
            <summary>
            Returns true if the given request description represents a service action request; false otherwise.
            </summary>
            <value> Request description in question. </value>
            <value> true if the given request description represents a service action request; false otherwise. </value>
        </member>
        <member name="P:System.Data.Services.RequestDescription.ResponsePayloadKind">
            <summary>
            Get the payload kind of the response based on the request description
            </summary>
            <value> Request description. </value>
            <value> ODataPayloadKind for the response. </value>
        </member>
        <member name="P:System.Data.Services.RequestDescription.IsAtomResponse">
            <summary>
            Gets a value indicating whether the response to this request will be Atom.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestDescription.JsonPaddingFunctionName">
            <summary>
            Function name specified in $callback for JSONP.
            </summary>
            
            <remarks>
            This should be passed to ODataLib for normal requests only. Errors and top-level $batch requests do not work with JSONP
            anyway, so we do not pass this to ODataLib in those cases.
            </remarks>
        </member>
        <member name="T:System.Data.Services.RequestQueryProcessor">
            <summary>Use this class to process a web data service request URI.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.ApplyExpansionsMethodInfo">
            <summary>MethodInfo for IExpandProvider.ApplyExpansions().</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.description">
            <summary>Original description over which query composition takes place.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.service">
            <summary>Service with data and configuration.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.setQueryApplicable">
            <summary>Whether the $orderby, $skip, $take and $count options can be applied to the request.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.pagingApplicable">
            <summary>Whether the top level request is a candidate for paging.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.skipTokenExpressionBuilder">
            <summary>The skip-token expression builder to use.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.appliedCustomPaging">
            <summary>Has custom paging already been applied?</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.expandPaths">
            <summary>List of paths to be expanded.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.rootProjectionNode">
            <summary>Root projection segment of the tree specifying projections and expansions for the query.</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.topLevelOrderingInfo">
            <summary>Collection of ordering expressions for the current query</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.skipCount">
            <summary>Value of $skip argument</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.topCount">
            <summary>Value of $top argument</summary>
        </member>
        <member name="F:System.Data.Services.RequestQueryProcessor.queryExpression">
            <summary>Query expression being composed.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.#ctor(System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>Initializes a new <see cref="T:System.Data.Services.RequestQueryProcessor"/> instance.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="description">Description for request processed so far.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessQuery(System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>
            Processes query arguments and returns a request description for 
            the resulting query.
            </summary>
            <param name="service">Service with data and configuration information.</param>
            <param name="description">Description for request processed so far.</param>
            <returns>A new <see cref="T:System.Data.Services.RequestDescription"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyProjectionForProperty(System.Data.Services.Providers.ExpandedProjectionNode,System.String,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>
            Apply projection for the given property to the parent projection node.
            </summary>
            <param name="parentNode">The parent node which the new node will be added to.</param>
            <param name="propertyName">Name of the property that needs to be projected.</param>
            <param name="property">ResourceProperty instance containing information about the property - this will be null for open properties.</param>
            <param name="targetResourceType">ResourceType instance on which the property needs to be expanded.</param>
            <returns>A new or an existing instance of the ExpandedProjectionNode for the given property.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplySelectionForOperations(Microsoft.Data.OData.Query.SemanticAst.OperationSegment,System.Data.Services.Providers.ExpandedProjectionNode,System.Data.Services.Providers.ResourceType)">
            <summary>
            Applies the selection for the given operation segment to the given projection node.
            </summary>
            <param name="operationSegment">The operation segment to apply to the projection node.</param>
            <param name="currentNode">The current projection node.</param>
            <param name="targetResourceType">The target type based on type segments.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyPathSelection(Microsoft.Data.OData.Query.SemanticAst.ODataPath,System.Data.Services.Providers.ExpandedProjectionNode)">
            <summary>
            Applies the given path-based selection item to the given projection node.
            </summary>
            <param name="path">The path being selected.</param>
            <param name="currentNode">The current projection node.</param>
            <returns>A new or an existing instance of the ExpandedProjectionNode for path of the selection item.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GetTargetResourceTypeFromTypeSegments(System.Collections.Generic.IEnumerable{Microsoft.Data.OData.Query.SemanticAst.ODataPathSegment},System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the target resource type based on type segments in the given path.
            </summary>
            <param name="path">The path to traverse.</param>
            <param name="startingType">The type to start on.</param>
            <returns>The final target resource type of the path based on type segments.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GetRootProjectionNode">
            <summary>Gets the root projection node or creates one if no one exists yet.</summary>
            <returns>The root node of the projection tree.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyExpandPathsToProjectionNodes">
            <summary>Checks and resolved all textual expand paths and removes unnecessary paths.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ExtractExpandPathSegmentCollections(Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,System.Data.Services.ExpandSegmentCollection,System.Data.Services.Providers.ExpandedProjectionNode,System.Data.Services.Providers.RootProjectionNode)">
            <summary>
            Performs a depth-first walk down the expand tree, copying and adding to the current path as it goes. When the bottom of a path is reached, the path is added to the overall set of paths.
            </summary>
            <param name="expandClause">The expand clause to extract paths from.</param>
            <param name="currentPath">The current path so far for this depth-first traversal of the tree. Starts out null.</param>
            <param name="currentNode">The current node of the expand tree.</param>
            <param name="rootNode">The root node of the expand tree.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CreateExpandSegment(Microsoft.Data.OData.Query.SemanticAst.ExpandedNavigationSelectItem,System.Data.Services.Providers.ResourceType)">
            <summary>
            Creates an instance of <see cref="T:System.Data.Services.ExpandSegment"/> based on the metadata in the given <see cref="T:Microsoft.Data.OData.Query.SemanticAst.ExpandedNavigationSelectItem"/>.
            </summary>
            <param name="expandItem">The metadata-bound expand segment to create the <see cref="T:System.Data.Services.ExpandSegment"/> from.</param>
            <param name="currentResourceType">The current resource type.</param>
            <returns>The created <see cref="T:System.Data.Services.ExpandSegment"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CheckSetQueryApplicable">
            <summary>Checks that set query options are applicable to this request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessExpand">
            <summary>Processes the $expand argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyProjectionsToExpandTree">
            <summary>Builds the tree of <see cref="T:System.Data.Services.Providers.ProjectionNode"/> to represent the $select query option.</summary>
            <remarks>This method assumes that $expand was already processed. And we have the tree
            of <see cref="T:System.Data.Services.Providers.ExpandedProjectionNode"/> objects for the $expand query option already built.</remarks>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyProjectionsToExpandTree(Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,System.Data.Services.Providers.ExpandedProjectionNode)">
            <summary>
            Applies projections from the given select/expand clause to the tree represented by the given node.
            </summary>
            <param name="selectExpandClause">The clause to apply.</param>
            <param name="currentNode">The expand tree to apply projections to.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessExpandAndSelect">
            <summary>Processes the $expand and $select query options.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessSelect">
            <summary>Processes the $select argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GenerateQueryResult">
            <summary>
            Generate the queryResults for the request
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessFilter">
            <summary>Processes the $filter argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessSkipToken">
            <summary>Processes the $skiptoken argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyStandardPaging(System.String)">
            <summary>Applies standard paging to the query.</summary>
            <param name="skipToken">Skip token obtained from query parameters.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ApplyCustomPaging(System.String)">
            <summary>Applies custom paging to the query.</summary>
            <param name="skipToken">Skip token obtained from query parameters.</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessOrderBy">
            <summary>Processes the $orderby argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessCount">
            <summary>Processes the $inlinecount argument of the request.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ObtainOrderingExpressions">
            <summary>
            Builds the collection of ordering expressions including implicit ordering if paging is required at top level
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessQuery">
            <summary>
            Processes query arguments and returns a request description for 
            the resulting query.
            </summary>
            <returns>A modified <see cref="T:System.Data.Services.RequestDescription"/> that includes query information.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProjectSkipTokenForNonExpand">
            <summary>
            In case $expand is not provided while the results are still paged, we need to create a wrapper
            for the object in order to project the skip tokens corresponding to the result sequence
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GetSkipTokenWrapperTypeAndDescription(System.Text.StringBuilder)">
            <summary>
            Obtains the wrapper type for the $skiptoken along with description of properties in the wrapper
            </summary>
            <param name="skipTokenDescription">Description for the skip token properties</param>
            <returns>Type of $skiptoken wrapper</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.GetSkipTokenBindings(System.Type,System.String,System.Linq.Expressions.ParameterExpression)">
            <summary>
            Given the wrapper type and description, returns bindings for the wrapper type for skip token
            </summary>
            <param name="skipTokenWrapperType">Wrapper type</param>
            <param name="skipTokenDescription">Description</param>
            <param name="expandParameter">Top level parameter type</param>
            <returns>Array of bindings for skip token</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.UpdateOrderingInfoWithSkipTokenWrapper(System.Type)">
            <summary>
            Updates the topLevelOrderingInfo member with the new collection of expressions that 
            dereference the ExpandedElement property on the top level wrapper object
            </summary>
            <param name="resultWrapperType">Type of top level wrapper object</param>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ProcessSkipAndTop">
            <summary>Processes the $skip and/or $top argument of the request by composing query with Skip and/or Take methods.</summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ObtainSkipTopCounts">
            <summary>
            Finds out the appropriate value for skip and top parameters for the current request
            </summary>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.ReadSkipOrTopArgument(System.String,System.Int32@)">
            <summary>
            Checks whether the specified argument should be processed and what 
            its value is.
            </summary>
            <param name="queryItem">Name of the query item, $top or $skip.</param>
            <param name="count">The value for the query item.</param>
            <returns>true if the argument should be processed; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.RequestQueryProcessor.CheckAndApplyCustomPaging(System.Object[])">
            <summary>Checks if custom paging is already applied, if not, applies it and raises response version.</summary>
            <param name="skipTokenValues">Values of skip tokens.</param>
        </member>
        <member name="P:System.Data.Services.RequestQueryProcessor.IsStandardPaged">
            <summary>
            Is the top level container for the query paged i.e. we need to use StandardPaging.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestQueryProcessor.IsPageSizeDefined">
            <summary>
            Does the top level container for the query have page size limits defined.
            </summary>
        </member>
        <member name="P:System.Data.Services.RequestQueryProcessor.IsCustomPaged">
            <summary>Do we need to use CustomPaging for this service.</summary>
        </member>
        <member name="T:System.Data.Services.RequestTargetKind">
            <summary>
            Provides values to describe the kind of thing targetted by a 
            client request.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Nothing">
            <summary>Nothing specific is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.ServiceDirectory">
            <summary>A top-level directory of service capabilities.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Resource">
            <summary>Entity Resource is requested - it can be a collection or a single value.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.ComplexObject">
            <summary>A single complex value is requested (eg: an Address).</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Primitive">
            <summary>A single value is requested (eg: a Picture property).</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.PrimitiveValue">
            <summary>A single value is requested (eg: the raw stream of a Picture).</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Metadata">
            <summary>System metadata.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.VoidOperation">
            <summary>A data-service-defined operation that doesn't return anything.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Batch">
            <summary>The request is a batch request.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Link">
            <summary>The request is a link operation - bind or unbind or simple get</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.OpenProperty">
            <summary>An open property is requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.OpenPropertyValue">
            <summary>An open property value is requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.MediaResource">
            <summary>A stream property value is requested.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetKind.Collection">
            <summary>A single collection of primitive or complex values is requested.</summary>
        </member>
        <member name="T:System.Data.Services.RequestTargetSource">
            <summary>
            Provides values to describe the source of the request results.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.None">
            <summary>No source for data.</summary>
            <remarks>
            This value is seen when a source hasn't been determined yet, or
            when the source is intrinsic to the system - eg a metadata request.
            </remarks>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.EntitySet">
            <summary>An entity set provides the data.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.ServiceOperation">
            <summary>A service operation provides the data.</summary>
        </member>
        <member name="F:System.Data.Services.RequestTargetSource.Property">
            <summary>A property of an entity or a complex object provides the data.</summary>
        </member>
        <member name="T:System.Data.Services.RequestUriProcessor">
            <summary>
            Use this class to process a web data service request Uri.
            </summary>
        </member>
        <member name="F:System.Data.Services.RequestUriProcessor.RecursionLimit">
            <summary>Recursion limit on segment length.</summary>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ProcessRequestUri(System.Uri,System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Parses the request Uri that the host is exposing and returns
            information about the intended results.
            </summary>
            <param name="absoluteRequestUri">Request uri that needs to get processed.</param>
            <param name="service">Data service for which the request is being processed.</param>
            <param name="internalQuery">true if this is a uri in the request payload body, false if this is the request uri for the current request.
            If this parameter value is true, it means that we are trying to get to an entity whose uri is specified in the request body, and hence
            we should not be doing any version checks while processing this uri.</param>
            <returns>
            An initialized RequestDescription instance describing what the
            request is for.
            </returns>
            <exception cref="T:System.Data.Services.DataServiceException">
            A <see cref="T:System.Data.Services.DataServiceException"/> with status code 404 (Not Found) is returned if an identifier
            in a segment cannot be resolved; 400 (Bad Request) is returned if a syntax
            error is found when processing a restriction (parenthesized text) or
            in the query portion.
            </exception>
            <remarks>
            Very important: no rights are checked on the last segment of the request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.AppendEscapedSegment(System.Uri,System.String)">
            <summary>Appends a segment with the specified escaped <paramref name='segmentIdentifier' />.</summary>
            <param name='uri'>URI to append to.</param>
            <param name='segmentIdentifier'>Segment text, already escaped.</param>
            <returns>A new URI with a new segment escaped.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.AppendUnescapedSegment(System.Uri,System.String)">
            <summary>Appends a segment with the specified unescaped <paramref name='text' />.</summary>
            <param name='uri'>URI to append to.</param>
            <param name='text'>Segment text, not yet escaped.</param>
            <returns>A new URI with a new segment escaped.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetAbsoluteUriFromReference(System.String,System.Data.Services.DataServiceOperationContext)">
            <summary>Gets the absolute URI that a reference (typically from a POST or PUT body) points to.</summary>
            <param name="reference">Textual, URI-encoded reference.</param>
            <param name="operationContext">Context for current operation.</param>
            <returns>The absolute URI that <paramref name="reference"/> resolves to.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetAbsoluteUriFromReference(System.String,System.Uri,System.Version)">
            <summary>Gets the absolute URI that a reference (typically from a POST or PUT body) points to.</summary>
            <param name="reference">Textual, URI-encoded reference.</param>
            <param name="absoluteServiceUri">Absolure URI for service, used to validate that the URI points within.</param>
            <param name="dataServiceVersion"> The value of the 'DataServiceVersion' header in the request body as Version </param>
            <returns>The absolute URI that <paramref name="reference"/> resolves to.</returns>
            <remarks>This method does not verify that the uri is relative to the service.</remarks>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetAbsoluteUriFromReference(System.Uri,System.Uri,System.Version)">
            <summary>Gets the absolute URI that a reference (typically from a POST or PUT body) points to.</summary>
            <param name="referenceAsUri">Textual, URI-encoded reference.</param>
            <param name="absoluteServiceUri">Absolure URI for service, used to validate that the URI points within.</param>
            <param name="dataServiceVersion"> The value of the 'DataServiceVersion' header in the request body as Version </param>
            <returns>The absolute URI that <paramref name="referenceAsUri"/> resolves to.</returns>
            <remarks>This method does not verify that the uri is relative to the service.</remarks>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetResultUri(System.Data.Services.DataServiceOperationContext)">
            <summary>Gets the URI to the results, without the query component.</summary>
            <param name="operationContext">OperationContext with request information.</param>
            <returns>The URI to the results, without the query component.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.EnumerateSegments(System.Uri,System.Uri)">
            <summary>
            Returns an object that can enumerate the segments in the specified path (eg: /abc/pqr -&gt; abc, pqr).
            </summary>
            <param name="absoluteRequestUri">A valid path portion of an uri.</param>
            <param name="baseUri">baseUri for the request that is getting processed.</param>
            <returns>An enumerable object of unescaped segments.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ParsePath(System.Uri,System.Data.Services.IDataService)">
            <summary>
            Parses the path part of the request URI using the ODL uri parser.
            </summary>
            <param name="absoluteRequestUri">The absolute request URI.</param>
            <param name="service">The data service.</param>
            <returns>The parsed path.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ApplyKeyToExpression(System.Data.Services.SegmentInfo)">
            <summary>
            Apply the key predicates extracted from the segment's query portion
            </summary>
            <param name="segment">The segment on which the query is extracted</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeExpressionForEntitySet(System.Data.Services.SegmentInfo,System.Data.Services.IDataService,System.Boolean,System.Boolean)">
            <summary>
            Gets the query root for the segment.
            </summary>
            <param name="segment">Segment to compose the query.</param>
            <param name="service">The data service instance.</param>
            <param name="isLastSegment">true if <paramref name="segment"/> is the last segment; false otherwise.</param>
            <param name="checkRights">true if we need to check rights for this segment; false otherwise.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeExpressionForServiceOperation(System.Data.Services.SegmentInfo,System.Data.Services.IDataService,System.Boolean,System.Data.Services.SegmentInfo)">
            <summary>
            Invokes the service operation for the segment.
            </summary>
            <param name="segment">The segment</param>
            <param name="service">The service instance</param>
            <param name="checkRights">true if we need to check rights for the operation; false otherwise.</param>
            <param name="lastSegment">the last segment of the request.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeExpressionForServiceAction(System.Data.Services.SegmentInfo,System.Data.Services.SegmentInfo,System.Data.Services.IDataService)">
            <summary>
            Invokes the service action for the segment.
            </summary>
            <param name="segment">Segment info for the service action.</param>
            <param name="previousSegment">Previous segment.</param>
            <param name="service">Data service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ShouldRequestQuery(System.Data.Services.IDataService,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Whether a query should be requested and composed with interceptors for a segment.</summary>
            <param name="service">Service under which request is being analyzed.</param>
            <param name="isLastSegment">Whether this is the last segment of the URI.</param>
            <param name="isAfterLink">Is the current segment being checked after a $links segment.</param>
            <param name="hasKeyValues">The segment has query portion.</param>
            <returns>true if the segments should be read and composed with interceptors; false otherwise.</returns>
            <remarks>
            For V1 providers we always get the query root or else we introduce a breaking change.
            If this is an insert operation and the current segment is the first and last segment,
            we don't need to get the query root as we won't even invoke the query.
            Note that we need to make sure we only skip the query root if the query portion is null, this
            is because in the deep insert case, we can be doing a binding to a single entity and we would
            need the query root for that entity.
            We shall also skip requesting the query if the request is for an update on $links for non-V1 providers.
            </remarks>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeExpressionForSegments(System.Collections.Generic.IList{System.Data.Services.SegmentInfo},System.Data.Services.IDataService,System.Boolean)">
            <summary>Composes query expressions for the given <paramref name="segments"/> array.</summary>
            <param name="segments">Segments to process.</param>
            <param name="service">Service for which segments are being processed.</param>
            <param name="isCrossReferencingUri">Whether the uri contains cross-references like $1, etc.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeExpressionForTypeNameSegment(System.Data.Services.SegmentInfo,System.Data.Services.SegmentInfo)">
            <summary>
            Compose the query expression for a type name segment.
            </summary>
            <param name="segment">The type name segment.</param>
            <param name="previous">The previous segment.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ComposeExpressionForProperty(System.Data.Services.SegmentInfo,System.Data.Services.SegmentInfo,System.Data.Services.IDataService,System.Boolean,System.Boolean)">
            <summary>
            Composes the query expression for properties
            </summary>
            <param name="segment">Segment to compose the expression for.</param>
            <param name="previous">The previous segment.</param>
            <param name="service">The data service instance.</param>
            <param name="lastSegment">true if <paramref name="segment"/> is also the last segment; false otherwise.</param>
            <param name="checkRights">true if we need to check rights for this segment; false otherwise.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.GetItemTypeFromResourceType(System.Data.Services.Providers.ResourceType,System.Boolean@)">
            <summary>
            If <paramref name="type"/> is an EntityCollection or Collection type, return its ItemType; otherwise return <paramref name="type"/>.
            </summary>
            <param name="type">Resource type in question.</param>
            <param name="isCollection">Returns true if <paramref name="type"/> is a collection type or an EntityCollection type.</param>
            <returns>If <paramref name="type"/> is an EntityCollection or Collection type, return its ItemType; otherwise return <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ReadOperationParameters(System.Data.Services.AstoriaRequestMessage,System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Reads the parameters for the specified <paramref name="operation"/> from the <paramref name="host"/>.
            </summary>
            <param name="host">RequestMessage with request information.</param>
            <param name="operation">Operation with parameters to be read.</param>
            <returns>A new object[] with parameter values.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ParseOperationParameter(System.Type,System.String)">
            <summary>
            Parses an operation parameter from the request query string.
            </summary>
            <param name="parameterType">Type of the parameter.</param>
            <param name="queryStringValue">The query string value.</param>
            <returns>The parsed operation parameter value.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.ValidateBindingParameterAndReadPayloadParametersForAction(System.Data.Services.IDataService,System.Data.Services.SegmentInfo,System.Data.Services.SegmentInfo)">
            <summary>
            Validates the binding parameter and reads the payload parameters for the given action.
            </summary>
            <param name="dataService">Data service instance.</param>
            <param name="actionSegment">The segment for the action whose parameters is being read.</param>
            <param name="previousSegment">The segment before the action.</param>
            <returns>A new Expression[] with parameter values.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectElement(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with a single element out of the specified query.</summary>
            <param name="queryExpression">Base query to project from.</param>
            <param name="property">Property to project.</param>
            <returns>A query with a composed primitive property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectMultiple(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with multiple elements out of the specified query.</summary>
            <param name="queryExpression">Base query to project from.</param>
            <param name="property">Property to project.</param>
            <returns>A query with a composed primitive property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectOpenProperty(System.Linq.Expressions.Expression,System.String)">
            <summary>Project a property with a single element out of the specified query over an late bound (possibily open) property.</summary>
            <param name="queryExpression">Base query to project from.</param>
            <param name="propertyName">Name of property to project.</param>
            <returns>A query with a composed property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectDerivedResourceType(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceType)">
            <summary>
            Filters the given query based on the given resource type.
            </summary>
            <param name="queryExpression">source query expression.</param>
            <param name="resourceType">resource type based on which the query needs to be filtered.</param>
            <returns>an instance of IQueryable with the filtered expression.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectLateBoundProperty(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with a single element out of the specified query over an late bound (possibily open) property.</summary>
            <param name="queryExpression">Base query to project from.</param>
            <param name="property">Resource property containing the metadata for the late bound property.</param>
            <returns>A query with a composed property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectLateBoundPropertyMultiple(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceProperty)">
            <summary>Project a property with a single element out of the specified query over an late bound (possibily open) property.</summary>
            <param name="queryExpression">Base query to project from.</param>
            <param name="property">Resource property containing the metadata for the late bound property.</param>
            <returns>A query with a composed property projection.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.SelectResourceByKey(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceType,Microsoft.Data.OData.Query.SemanticAst.KeySegment)">
            <summary>Selects a single resource by key values.</summary>
            <param name="queryExpression">Base query for resources</param>
            <param name="resourceType">resource type whose keys are specified</param>
            <param name="key">Key values for the given resource type.</param>
            <returns>A new query that selects the single resource that matches the specified key values.</returns>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.InvokeRequestExpression(System.Data.Services.RequestDescription,System.Data.Services.IDataService)">
            <summary>
            Calls the Execution provider to invoke the request expressions for the current request
            </summary>
            <param name="description">Request description.</param>
            <param name="service">Service instance.</param>
        </member>
        <member name="M:System.Data.Services.RequestUriProcessor.CheckNoDollarFormat(System.Data.Services.IDataService)">
            <summary>
            Checks that $format is not on a $batch request
            </summary>
            <param name="service">Service to check.</param>
        </member>
        <member name="T:System.Data.Services.UpdateOperations">
            <summary>Describes an action performed on a resource.</summary>
            <remarks>
            This enumeration has been patterned after the DataRowAction
            (http://msdn2.microsoft.com/en-us/library/system.data.datarowaction.aspx)
            enumeration (with a few less values).
            </remarks>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.None">
            <summary>The resource has not changed.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.Add">
            <summary>The resource has been added to a container.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.Change">
            <summary>The resource has changed.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateOperations.Delete">
            <summary>The resource has been deleted from a container.</summary>
        </member>
        <member name="T:System.Data.Services.EntitySetRights">
            <summary>
            Provides values to describe the kind of thing targetted by a 
            client request.
            </summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.None">
            <summary>Specifies no rights on this resource.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.ReadSingle">
            <summary>Specifies the right to read one resource per request.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.ReadMultiple">
            <summary>Specifies the right to read multiple resources per request.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteAppend">
            <summary>Specifies the right to append new resources to the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteReplace">
            <summary>Specifies the right to update existing resource in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteDelete">
            <summary>Specifies the right to delete existing resource in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.WriteMerge">
            <summary>Specifies the right to update existing resource in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.AllRead">
            <summary>Specifies the right to read single or multiple resources in a single request.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.AllWrite">
            <summary>Specifies the right to append, delete or update resources in the container.</summary>
        </member>
        <member name="F:System.Data.Services.EntitySetRights.All">
            <summary>Specifies all rights to the container.</summary>
        </member>
        <member name="T:System.Data.Services.ResponseBodyWriter">
            <summary>
            Use this class to encapsulate writing the body of the outgoing response 
            for a data request.
            </summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.encoding">
            <summary>Encoding, if available.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.service">
            <summary>RequestMessage for the request being processed.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.queryResults">
            <summary>Enumerator for results.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.requestDescription">
            <summary>Description of request made to the system.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.messageWriter">
            <summary>ODataMessageWriter using which the response needs to be written.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.actualResponseMessageWhoseHeadersMayBeOverridden">
            <summary>IODataResponseMessage containing all the response headers. For an inner batch message, note that this
            is the actual ODataLib message, and it's headers will be overridden when after SerializeResponseBody finishes.
            So, if using this to set headers, BE VERY CAREFUL.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.contentFormat">
            <summary>The content format.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.mediaResourceStream">
            <summary>If the target is a Media Resource, this holds the read stream for the Media Resource.</summary>
        </member>
        <member name="F:System.Data.Services.ResponseBodyWriter.messageWriterBuilder">
            <summary>
            Object to create a message writer.
            </summary>
        </member>
        <member name="M:System.Data.Services.ResponseBodyWriter.#ctor(System.Data.Services.IDataService,System.Data.Services.QueryResultInfo,System.Data.Services.RequestDescription,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>Initializes a new <see cref="T:System.Data.Services.ResponseBodyWriter"/> that can write the body of a response.</summary>
            <param name="service">Service for the request being processed.</param>
            <param name="queryResults">Enumerator for results.</param>
            <param name="requestDescription">Description of request made to the system.</param>        
            <param name="actualResponseMessageWhoseHeadersMayBeOverridden">IODataResponseMessage instance for the response.</param>
        </member>
        <member name="M:System.Data.Services.ResponseBodyWriter.Write(System.IO.Stream)">
            <summary>Writes the request body to the specified <see cref="T:System.IO.Stream"/>.</summary>
            <param name="stream">Stream to write to.</param>
        </member>
        <member name="M:System.Data.Services.ResponseBodyWriter.GetModelFromService">
            <summary>
            Gets the EDM model from the service.
            </summary>
            <returns>The EDM model or null.</returns>
        </member>
        <member name="P:System.Data.Services.ResponseBodyWriter.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.ResponseBodyWriter.Provider">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.DataServiceProviderWrapper"/> for this response.</summary>
        </member>
        <member name="P:System.Data.Services.ResponseBodyWriter.PayloadKind">
            <summary>Content format for response.</summary>
        </member>
        <member name="T:System.Data.Services.SegmentInfo">
            <summary>Contains the information regarding a segment that makes up the uri</summary>
        </member>
        <member name="M:System.Data.Services.SegmentInfo.#ctor">
            <summary>Empty constructor.</summary>
        </member>
        <member name="M:System.Data.Services.SegmentInfo.#ctor(System.Data.Services.SegmentInfo)">
            <summary>Copy constructor.</summary>
            <param name="other">Another <see cref="T:System.Data.Services.SegmentInfo"/> to get a shallow copy of.</param>
        </member>
        <member name="M:System.Data.Services.SegmentInfo.CheckSegmentRights">
            <summary>
            Checks the EntitySetRights and ServiceOperationRights of a segment.
            </summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.Identifier">
            <summary>Returns the identifier for this segment i.e. string part without the keys.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.Key">
            <summary>Returns the values that constitute the key as specified in the request.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.RequestEnumerable">
            <summary>Returns the query that's being composed for this segment</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.SingleResult">
            <summary>Whether the segment targets a single result or not.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetResourceSet">
            <summary>resource set if applicable.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetResourceType">
            <summary>The type of element targeted by this segment.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetKind">
            <summary>The kind of resource targeted by this segment.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.TargetSource">
            <summary>Returns the source for this segment</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.Operation">
            <summary>Service operation being invoked.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.ProjectedProperty">
            <summary>Returns the property that is being projected in this segment, if there's any.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.RequestExpression">
            <summary>Returns the expression for this segment.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.IsTypeIdentifierSegment">
            <summary>
            Returns true if the current segment is a type identifier segment.
            </summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.HasKeyValues">
            <summary>Returns true if this segment has a key filter with values; false otherwise.</summary>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.IsDirectReference">
            <summary>
            Determines whether the target kind is a direct reference to an element
            i.e. either you have a $value or you are accessing a resource via key property
            (/Customers(1) or /Customers(1)/BestFriend/Orders('Foo'). Either case the value
            cannot be null.
            </summary>
            <returns>
            A characteristic of a direct reference is that if its value
            is null, a 404 error should be returned.
            </returns>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.IsServiceActionSegment">
            <summary>
            Gets a value indicating whether this segemnt represents a service action.
            </summary>
            <value> true if this segment represents a service action; false otherwise. </value>
        </member>
        <member name="P:System.Data.Services.SegmentInfo.BindingType">
            <summary>
            Gets the binding type of the segment to use for action/function resolution.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityDeserializer">
            <summary>
            Implements deserializer for entities.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.ODataMessageReaderDeserializer">
            <summary>
            Base class for all deserializers using the ODataMessageReader.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Deserializer">
            <summary>
            Provides a abstract base deserializer class
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.RecursionLimit">
            <summary>Maximum recursion limit on deserializer.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.service">
            <summary>Data service for which the deserializer will act.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.tracker">
            <summary>Tracker for actions taken during deserialization.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.update">
            <summary> Indicates whether the payload is for update or not </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.recursionDepth">
            <summary>Depth of recursion.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.objectCount">
            <summary>number of resources (entity or complex type) referred in this request.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Deserializer.description">
            <summary>Request description for the top level target entity.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.Deserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.#ctor(System.Data.Services.Serializers.Deserializer)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.Deserializer"/> based on a different one.</summary>
            <param name="parent">Parent deserializer for the new instance.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.System#IDisposable#Dispose">
            <summary>Releases resources held onto by this object.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateDeserializer(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Boolean,System.Data.Services.UpdateTracker)">
            <summary>
            Creates a new <see cref="T:System.Data.Services.Serializers.Deserializer"/> for the specified stream.
            </summary>
            <param name="description">description about the request uri.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="update">indicates whether this is a update operation or not</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <returns>A new instance of <see cref="T:System.Data.Services.Serializers.Deserializer"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetResourceToModify(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Boolean,System.Object@,System.Data.Services.Providers.ResourceSetWrapper@,System.Boolean)">
            <summary>
            Returns the last segment info whose target request kind is resource
            </summary>
            <param name="description">description about the target request</param>
            <param name="service">data service type to which the request was made</param>
            <param name="allowCrossReferencing">whether cross-referencing is allowed for the resource in question.</param>
            <param name="entityResource">entity resource which is getting modified.</param>
            <param name="entityContainer">entity container of the entity which is getting modified.</param>
            <param name="checkETag">whether to check the etag for the entity resource that is getting modified.</param>
            <returns>Returns the object that needs to get modified</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetEntityResourceToModify(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Boolean,System.Data.Services.Providers.ResourceSetWrapper@)">
            <summary>
            Returns the entity that need to get modified
            </summary>
            <param name="description">description about the target request</param>
            <param name="service">data service type to which the request was made</param>
            <param name="allowCrossReferencing">whether cross-referencing is allowed for the resource in question.</param>
            <param name="entityContainer">entity container of the entity which is getting modified.</param>
            <returns>Returns the entity that needs to get modified</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ModifyResource(System.Data.Services.RequestDescription,System.Object,System.Object,System.Data.Services.IDataService)">
            <summary>
            Modify the value of the given resource to the given value
            </summary>
            <param name="description">description about the request</param>
            <param name="resourceToBeModified">resource that needs to be modified</param>
            <param name="requestValue">the new value for the target resource</param>
            <param name="service">Service this request is against</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetResource(System.Data.Services.SegmentInfo,System.String,System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Get the resource referred by the given segment
            </summary>
            <param name="segmentInfo">information about the segment.</param>
            <param name="fullTypeName">full name of the resource referred by the segment.</param>
            <param name="service">data service type to which the request was made</param>
            <param name="checkForNull">whether to check if the resource is null or not.</param>
            <returns>returns the resource returned by the provider.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateMediaLinkEntry(System.String,System.IO.Stream,System.Data.Services.IDataService,System.Data.Services.RequestDescription,System.Data.Services.UpdateTracker)">
            <summary>
            Creates a Media Link Entry.
            </summary>
            <param name="fullTypeName">Full type name for the MLE to be created.</param>
            <param name="requestStream">Request stream from the host.</param>
            <param name="service">Service this request is against.</param>
            <param name="description">Description of the target request.</param>
            <param name="tracker">Update tracker instance to fire change interceptor calls</param>
            <returns>Newly created Media Link Entry.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.SetStreamPropertyValue(System.Object,System.IO.Stream,System.Data.Services.IDataService,System.Data.Services.RequestDescription)">
            <summary>
            Copy the contents of the request stream into the default stream of the specified entity.
            </summary>
            <param name="resourceToBeModified">Entity with the associated stream which we will write to.</param>
            <param name="requestStream">Request stream from the host</param>
            <param name="service">Service this is request is against</param>
            <param name="description">Description of the target request.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetCrossReferencedResource(System.Data.Services.SegmentInfo)">
            <summary>
            Gets the resource from the segment enumerable.
            </summary>
            <param name="segmentInfo">segment from which resource needs to be returned.</param>
            <returns>returns the resource contained in the request enumerable.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.HandleBindOperation(System.Data.Services.RequestDescription,System.Object,System.Data.Services.IDataService,System.Data.Services.UpdateTracker)">
            <summary>
            Handle bind operation
            </summary>
            <param name="description">information about the request uri.</param>
            <param name="linkResource">the child resource which needs to be linked.</param>
            <param name="service">data service instance</param>
            <param name="tracker">update tracker instance to fire change interceptor calls</param>
            <returns>returns the parent object to which an new object was linked to.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateNewCollection">
            <summary>Creates a new value for a collection property.</summary>
            <returns>The new collection as an IList.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetReadOnlyCollection(System.Collections.IList)">
            <summary>Returns a read-only version of the specified collection.</summary>
            <param name="collection">The collection to convert to read-only.</param>
            <returns>A read-only collection.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.XmlHasNullAttributeWithTrueValue(System.Xml.XmlReader)">
            <summary>
            returns true if the null attribute is specified and the value is true
            </summary>
            <param name="reader">xml reader from which attribute needs to be read</param>
            <returns>true if the null attribute is specified and the attribute value is true</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetIndexOfEntityResourceToModify(System.Data.Services.RequestDescription)">
            <summary>
            Returns the index of the entity that need to get modified
            </summary>
            <param name="description">description about the target request</param>
            <returns>Returns the index of the entity that needs to get modified</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ReadPayloadParameters(System.Data.Services.SegmentInfo,System.Data.Services.IDataService)">
            <summary>
            Reads the action parameters from the payload.
            </summary>
            <param name="actionSegment">Segment info for the action whose parameters are being read.</param>
            <param name="dataService">Data service instance.</param>
            <returns>A dictionary of parameter name and parameter value pairs.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ReadEntity(System.Data.Services.Providers.ResourceType@)">
            <summary>
            Deserializes the given stream into clr object as specified in the payload
            </summary>
            <param name="entityTypeInPayload">The payload entity type for the instance we are returning.</param>
            <returns>the object instance that it created and populated from the reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.HandlePostRequest(System.Data.Services.Providers.ResourceType@)">
            <summary>
            Handles post request.
            </summary>
            <param name="targetResourceType">Returns the true target resource type of the request.
            i.e. if a more derived type is on the payload, the type from the payload is returned here.</param>
            <returns>returns the resource that is getting inserted or binded - as specified in the payload.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.HandlePutRequest">
            <summary>
            Update the resource specified in the given request description.
            </summary>
            <returns>Returns the entity being modified.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.UpdateObjectCount(System.Int32)">
            <summary>
            Update the object count value to the given value.
            </summary>
            <param name="value">value to be set for object count.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.SetPropertyValue(System.Data.Services.Providers.ResourceProperty,System.Object,System.Object,System.Data.Services.IDataService)">
            <summary>
            Set the value of the given resource property to the new value
            </summary>
            <param name="resourceProperty">property whose value needs to be updated</param>
            <param name="declaringResource">instance of the declaring type of the property for which the property value needs to be updated</param>
            <param name="propertyValue">new value for the property</param>
            <param name="service">Service this is request is against</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.SetOpenPropertyValue(System.Object,System.String,System.Object,System.Data.Services.IDataService)">
            <summary>
            Set the value of the open property
            </summary>
            <param name="declaringResource">instance of the declaring type of the property for which the property value needs to be updated</param>
            <param name="propertyName">name of the open property to update</param>
            <param name="propertyValue">new value for the property</param>
            <param name="service">Service this request is against</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.ReadStringFromStream(System.IO.StreamReader)">
            <summary>
            Reads the content from the stream reader and returns it as string
            </summary>
            <param name="streamReader">stream reader from which the content needs to be read</param>
            <returns>string containing the content as read from the stream reader</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CheckForBindingInPutOperations(System.Data.Services.HttpVerbs)">
            <summary>
            Make sure binding operations cannot be performed in PUT operations
            </summary>
            <param name="requestVerb">http method name for the request.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CreateSegment(System.Data.Services.Providers.ResourceProperty,System.String,System.Data.Services.Providers.ResourceSetWrapper,System.Boolean)">
            <summary>Creates a new SegmentInfo for the specified <paramref name="property"/>.</summary>
            <param name="property">Property to create segment info for (possibly null).</param>
            <param name="propertyName">Name for the property.</param>
            <param name="propertySet">Target resource set for the property.</param>
            <param name="singleResult">Whether a single result is expected.</param>
            <returns>
            A new <see cref="T:System.Data.Services.SegmentInfo"/> instance that describes the specfied <paramref name="property"/>
            as a target, or an open proprty if <paramref name="property"/> is null.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.Deserialize(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the given payload and return the top level object.
            </summary>
            <param name="segmentInfo">Info about the object being created.</param>
            <returns>Instance of the object created.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.Dispose(System.Boolean)">
            <summary>
            Provides an opportunity to clean-up resources.
            </summary>
            <param name="disposing">
            Whether the call is being made from an explicit call to 
            IDisposable.Dispose() rather than through the finalizer.
            </param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.RecurseEnter">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.RecurseLeave">
            <summary>Marks the fact that a recursive method is leaving.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetTargetResourceToBind(System.String,System.Boolean)">
            <summary>
            Returns the target/child resource to bind to an resource, which might be getting inserted or modified.
            Since this is a target resource, null is a valid value here (for e.g. /Customers(1)/BestFriend value
            can be null)
            </summary>
            <param name="uri">uri referencing to the resource to be returned.</param>
            <param name="checkNull">whether the resource can be null or not.</param>
            <returns>returns the resource as referenced by the uri. Throws 404 if the checkNull is true and the resource returned is null.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetTargetResourceToBind(System.Uri,System.Boolean)">
            <summary>
            Returns the target/child resource to bind to an resource, which might be getting inserted or modified.
            Since this is a target resource, null is a valid value here (for e.g. /Customers(1)/BestFriend value
            can be null)
            </summary>
            <param name="referencedUri">uri referencing to the resource to be returned.</param>
            <param name="checkNull">whether the resource can be null or not.</param>
            <returns>returns the resource as referenced by the uri. Throws 404 if the checkNull is true and the resource returned is null.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetObjectFromSegmentInfo(System.Data.Services.Providers.ResourceType,System.Data.Services.SegmentInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a resource referenced by the given segment info.
            </summary>
            <param name="resourceType">resource type whose instance needs to be created</param>
            <param name="segmentInfo">segment info containing the description of the uri</param>
            <param name="verifyETag">verify etag value of the current resource with one specified in the request header</param>
            <param name="checkForNull">validate that the resource cannot be null.</param>
            <param name="replaceResource">reset the resource as referred by the segment.</param>
            <returns>a new instance of the given resource type with key values populated</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.CheckAndIncrementObjectCount">
            <summary>
            Check and increment the object count
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.UpdateAndCheckRequestResponseDSV(System.Data.Services.Providers.ResourceType,System.Boolean)">
            <summary>
            Bump the minimum DSV requirement based on the specifics of the given resource type.
            </summary>
            <param name="resourceType">Resource type to inspect</param>
            <param name="topLevel">True if resourceType is the type for the top level element in the payload.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetCollectionTypeFromName(System.String,System.String)">
            <summary>
            Returns collection type for the specified type name from the payload.
            </summary>
            <param name="typeName">Collection type name read from payload.</param>
            <param name="propertyName">The name of the property being read.</param>
            <returns>Collection type.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.IsQueryRequired(System.Data.Services.RequestDescription,System.Object)">
            <summary>
            Returns true if we need to query the provider before updating.
            </summary>
            <param name="requestDescription">request description</param>
            <param name="requestValue">value corresponding to the payload for this request</param>
            <returns>returns true if we need to issue an query to satishfy the request</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Deserializer.GetEntityResourceToModify(System.Data.Services.RequestDescription,System.Data.Services.IDataService,System.Boolean,System.Data.Services.Providers.ResourceSetWrapper@,System.Int32@)">
            <summary>
            Returns the entity that need to get modified
            </summary>
            <param name="description">description about the target request</param>
            <param name="service">data service type to which the request was made</param>
            <param name="allowCrossReferencing">whether cross-referencing is allowed for the resource in question.</param>
            <param name="entityContainer">entity container of the entity which is getting modified.</param>
            <param name="entityResourceIndex">index of the segment which refers to the entity getting modified.</param>
            <returns>Returns the entity that needs to get modified</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Tracker">
            <summary>Tracker for actions taken during deserialization.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Service">
            <summary>Data service for which the deserializer will act.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Updatable">
            <summary>Return the IUpdatable object to use to make changes to entity states</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.Update">
            <summary>
            Returns true if the request method is a PUT, MERGE, or PATCH method
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.MaxObjectCount">
            <summary>Returns the current count of number of objects referred by this request.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.IsAtomRequest">
            <summary>
            Gets a value indicating whether the request is Atom
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.IsVerboseJsonRequest">
            <summary>
            Gets a value indicating whether the request is verbose json
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.IsJsonLightRequest">
            <summary>
            Gets a value indicating whether the request is json light
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.RequestDescription">
            <summary>Request description for the top level target entity.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Deserializer.ResponseWillBeSent">
            <summary>
            Whether a response will be sent for the POST/PUT/MERGE request.
            </summary>
            <returns>true if response will be sent, false otherwise.</returns>
        </member>
        <member name="F:System.Data.Services.Serializers.ODataMessageReaderDeserializer.messageReader">
            <summary>
            The message reader being used.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.ODataMessageReaderDeserializer.isAtomRequest">
            <summary>
            Cached value indicating whether the request is Atom
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.ODataMessageReaderDeserializer.isVerboseJsonRequest">
            <summary>
            Cached value indicating whether the request is verbose JSON
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.ODataMessageReaderDeserializer.isJsonLightRequest">
            <summary>
            Cached value indicating whether the request is JSON Light
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.ODataMessageReaderDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
            <param name="enableWcfDataServicesServerBehavior">If true, the message reader settings will use the WcfDataServicesServer behavior;
            if false, the message reader settings will use the default behavior.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.ConvertPrimitiveValue(System.Object,System.Data.Services.Providers.ResourceType@)">
            <summary>
            Converts a primitive value read by ODataMessageReader into a primitive value acceptable by WCF DS.
            </summary>
            <param name="value">The value reported by ODataMessageReader.</param>
            <param name="resourceType">The resource type of the value to read, null if it is an open property value.</param>
            <returns>The value converted to the WCF DS value space.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.AssertReaderFormatIsExpected(Microsoft.Data.OData.ODataMessageReader,Microsoft.Data.OData.ODataFormat[])">
            <summary>
            Asserts that the format of the given reader is one of the given expected formats
            </summary>
            <param name="reader">The current reader</param>
            <param name="expectedFormats">The expected formats</param>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.Read(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the input request payload and returns the WCF DS value representation of it.
            </summary>
            <param name="segmentInfo">Info about the request to read.</param>
            <returns>The WCF DS representation of the value read.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.Deserialize(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the given payload and return the top level object.
            </summary>
            <param name="segmentInfo">Info about the object being created.</param>
            <returns>Instance of the object created.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.Dispose(System.Boolean)">
            <summary>Provides an opportunity to clean-up resources.</summary>
            <param name="disposing">
            Whether the call is being made from an explicit call to 
            IDisposable.Dispose() rather than through the finalizer.
            </param>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.ConvertValue(System.Object,System.Data.Services.Providers.ResourceType@)">
            <summary>
            Converts the value reported by OData reader into WCF DS resource.
            </summary>
            <param name="odataValue">The value reported by the reader.</param>
            <param name="resourceType">The expected resource type of the value. This should be null if we were reading open value.</param>
            <returns>The converted WCF DS resource. In case of complex or collection this will be a newly created instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.ApplyProperty(Microsoft.Data.OData.ODataProperty,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>Applies a property from the reader to the specified resource.</summary>
            <param name='property'>The OData property to apply.</param>
            <param name='resourceType'>Type of resource.</param>
            <param name='resource'>Resource to set value on.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.GetTypeReference(System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets the IEdmModel type reference for a specified <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type to get the type reference for.</param>
            <param name="customAnnotations">Custom annotations to use when creating type reference.</param>
            <returns>The type reference.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.GetSchemaType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the IEdmModel schema type for the specified <paramref name="resourceType"/>
            </summary>
            <param name="resourceType">The resource type to get the schema type for.</param>
            <returns>The schema type.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.GetFunctionImport(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Gets the IEdmFunctionImport for a specified <paramref name="serviceOperation"/>.
            </summary>
            <param name="serviceOperation">The service action or function to get the function import for.</param>
            <returns>The function import.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.GetEntitySet(System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Gets the entity set for the specified <paramref name="resourceSet"/>
            </summary>
            <param name="resourceSet">ResourceSet instance.</param>
            <returns>an IEdmEntitySet instance for the given resource set.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.ConvertComplexValue(Microsoft.Data.OData.ODataComplexValue,System.Data.Services.Providers.ResourceType@)">
            <summary>
            Converts the complex value reported by OData reader into WCF DS complex resource.
            </summary>
            <param name="complexValue">The complex value reported by the reader.</param>
            <param name="complexResourceType">The expected resource type of the complex value. null if it's an open value.</param>
            <returns>The newly created WCF DS complex resource.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ODataMessageReaderDeserializer.ConvertCollection(Microsoft.Data.OData.ODataCollectionValue,System.Data.Services.Providers.ResourceType)">
            <summary>
            Converts the collection reported by OData reader into WCF DS collection resource.
            </summary>
            <param name="collection">The collection reported by the reader.</param>
            <param name="resourceType">The expected collection resource type.</param>
            <returns>THe newly created WCF DS collection resource.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.ODataMessageReaderDeserializer.MessageReader">
            <summary>
            The message reader to use for reading the request body.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.ODataMessageReaderDeserializer.IsAtomRequest">
            <summary>
            Gets a value indicating whether the request is Atom
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.ODataMessageReaderDeserializer.IsVerboseJsonRequest">
            <summary>
            Gets a value indicating whether the request is verbose json
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.ODataMessageReaderDeserializer.IsJsonLightRequest">
            <summary>
            Gets a value indicating whether the request is json light
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.EntityDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.Read(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the input request payload and returns the WCF DS value representation of it.
            </summary>
            <param name="segmentInfo">Info about the request to read.</param>
            <returns>The WCF DS representation of the value read.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ReadEntry(Microsoft.Data.OData.ODataReader,System.Data.Services.SegmentInfo)">
            <summary>
            Reads an entry from the <paramref name="odataReader"/> and all it's children including expanded entries and feeds.
            </summary>
            <param name="odataReader">The ODataReader to read from.</param>
            <param name="topLevelSegmentInfo">The segment info for the top-level entry to read.</param>
            <returns>The <see cref="T:Microsoft.Data.OData.ODataEntry"/> with annotations which store the navigation links and their expanded values.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.CreateEntityResource(System.Data.Services.SegmentInfo,Microsoft.Data.OData.ODataEntry,System.Data.Services.Serializers.EntityDeserializer.ODataEntryAnnotation,System.Boolean)">
            <summary>
            Creates or gets an entity resource token instance based on the data from entry in the payload.
            The resource is then set on the entry annotation.
            </summary>
            <param name="segmentInfo">The segment info describing the entity in question.</param>
            <param name="entry">The OData entry instance read from the payload.</param>
            <param name="entryAnnotation">The entry annotation for the entry to process.</param>
            <param name="topLevel">true if this is a top-level entry, false otherwise.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyEntityProperties(System.Data.Services.SegmentInfo,Microsoft.Data.OData.ODataEntry,System.Data.Services.Serializers.EntityDeserializer.ODataEntryAnnotation)">
            <summary>
            Applies properties and navigation links to the entity resource token instance based on the data from entry in the payload.
            </summary>
            <param name="segmentInfo">The segment info describing the entity in question.</param>
            <param name="entry">The OData entry instance read from the payload.</param>
            <param name="entryAnnotation">The entry annotation for the entry to process.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.CreateNestedEntityAndApplyProperties(System.Data.Services.SegmentInfo,Microsoft.Data.OData.ODataEntry)">
            <summary>
            Create the entity resource update token and applies properties and navigation links to the entity resource token instance 
            based on the data from entry in the payload.
            </summary>
            <param name="segmentInfo">The segment info describing the entity in question.</param>
            <param name="entry">The OData entry instance read from the payload.</param>
            <returns>The entity resource update token for the created entity.</returns>
            <remarks>This method should only be called on nested entries!</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.GetEntryResourceType(Microsoft.Data.OData.ODataEntry,System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the resource type for an entry based on the type name from the payload.</summary>
            <param name="entry">The entry to get the type for.</param>
            <param name="expectedType">Expected base type for the entity.</param>
            <returns>Resolved type.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyValueProperties(Microsoft.Data.OData.ODataEntry,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>
            Applies non-navigation properties.
            </summary>
            <param name="entry">The entry object to read the properties from.</param>
            <param name="entityResourceType">The type of the entity to apply the properties to.</param>
            <param name="entityResource">The entity resource to apply the properties to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyNavigationProperties(System.Data.Services.Serializers.EntityDeserializer.ODataEntryAnnotation,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>
            Applies navigation properties.
            </summary>
            <param name="entryAnnotation">The entry annotation for the entry to process.</param>
            <param name="entityResourceSet">The resource set into which the entity belongs to.</param>
            <param name="entityResourceType">The type of the entity to apply the properties to.</param>
            <param name="entityResource">The entity resource to apply the properties to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyNavigationProperty(Microsoft.Data.OData.ODataNavigationLink,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Object)">
            <summary>
            Applies a navigation link as a navigation property.
            </summary>
            <param name="navigationLink">The navigation link read from the payload to apply.</param>
            <param name="entityResourceSet">The resource set into which the entity belongs to.</param>
            <param name="entityResourceType">The type of the entity to apply the properties to.</param>
            <param name="navigationProperty">The navigation property which coresponds with the navigation link.</param>
            <param name="entityResource">The entity resource to apply the properties to.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyEntityReferenceLinkInNavigationProperty(System.Data.Services.Providers.ResourceProperty,System.Object,Microsoft.Data.OData.ODataEntityReferenceLink)">
            <summary>
            Applies an entity reference link (value of a navigation link) to an entity.
            </summary>
            <param name="navigationProperty">The navigation property for which the entity reference link was specified.</param>
            <param name="entityResource">The entity resource to apply the value to.</param>
            <param name="entityReferenceLink">The entity reference link to apply.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyFeedInNavigationProperty(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceSetWrapper,System.Object,Microsoft.Data.OData.ODataFeed)">
            <summary>
            Applies a feed which is the content of a navigation property to the specified entity resource.
            </summary>
            <param name="navigationProperty">The navigation property for which the feed was specified.</param>
            <param name="targetResourceSet">The resource set of the target of the navigation property.</param>
            <param name="entityResource">The entity resource to apply the value to.</param>
            <param name="feed">The feed to apply.</param>
            <remarks>Note that the targetResourceSet will be filled for non-ATOM formats, but it will be null for ATOM.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.ApplyEntryInNavigationProperty(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceSetWrapper,System.Object,Microsoft.Data.OData.ODataEntry)">
            <summary>
            Applies an entry which is the content of a navigation property to the specified entity resource.
            </summary>
            <param name="navigationProperty">The navigation property for which the feed was specified.</param>
            <param name="targetResourceSet">The resource set of the target of the navigation property.</param>
            <param name="entityResource">The entity resource to apply the value to.</param>
            <param name="entry">The entry to apply. This can be null if the null value should be applied.</param>
            <remarks>Note that the targetResourceSet will be filled for non-ATOM formats, but it will be null for ATOM.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.SetResourceReferenceToNull(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Sets a resource reference to null.
            </summary>
            <param name="entityResource">The entity resource to set the resource reference on.</param>
            <param name="navigationProperty">The navigation property for which to set the reference to null.</param>
            <remarks>This verifies that the navigation property is a resource reference and fails otherwise.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.SetResourceReferenceToUrl(System.Object,System.Data.Services.Providers.ResourceProperty,System.String)">
            <summary>
            Sets a resource reference to resource referenced by a URL.
            </summary>
            <param name="entityResource">The entity resource to set the resource reference on.</param>
            <param name="navigationProperty">The navigation property for which to set the reference to null.</param>
            <param name="url">The URL which points to the resource to set as the value of the navigation property.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityDeserializer.GetNavigationPropertyTargetResourceSet(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets a target resource set for the specified navigation property.
            </summary>
            <param name="parentResourceSet">The resource set of the entity on which the navigation property is accessed.</param>
            <param name="parentResourceType">The resourec type of the entity on which the navigation property is accessed.</param>
            <param name="navigationProperty">The navigation property to access.</param>
            <returns>The target resource set of the navigation property.</returns>
            <remarks>This method validates that the resource set is accessible and it performs appropriate version checks.</remarks>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityDeserializer.ODataEntryAnnotation">
            <summary>
            The annotation used on ODataEntry instances to store the list of navigation links for that entry.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityDeserializer.ODataEntryAnnotation.EntityResource">
            <summary>The entity resource update token for the entry.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.EntityDeserializer.ODataEntryAnnotation.EntityResourceType">
            <summary>The resolved entity type for the entry.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityDeserializer.ODataFeedAnnotation">
            <summary>
            The annotation used on ODataFeed instances to store the list of entries in that feed.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityDeserializer.ODataNavigationLinkAnnotation">
            <summary>
            The annotation used on ODataNavigationLink instances to store the list of children for that navigation link.
            </summary>
            <remarks>
            A navigation link for a singleton navigation property can only contain one item - either ODataEntry or ODataEntityReferenceLink.
            A navigation link for a collection navigation property can contain any number of items - each is either ODataFeed or ODataEntityReferenceLink.
            </remarks>
        </member>
        <member name="T:System.Data.Services.Serializers.ParameterDeserializer">
            <summary>
            Implements deserializer for Action parameters payload.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.ParameterDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.ParameterDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.ParameterDeserializer.Read(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the Action parameters payload and returns the WCF DS value representation of each parameter.
            </summary>
            <param name="segmentInfo">Info about the parameters payload to read.</param>
            <returns>The WCF DS representation of the parameters read.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.ParameterDeserializer.ReadCollectionParameterValue(Microsoft.Data.OData.ODataCollectionReader)">
            <summary>
            Reads the items from a collection and return it as an ODataCollectionValue.
            </summary>
            <param name="collectionReader">Collection reader to read from.</param>
            <returns>An ODataCollectionValue instance containing all items in the collection.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.DataStringEscapeBuilder">
            <summary>
            Take a URI string and escape the data portion of it
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DataStringEscapeBuilder.SensitiveCharacters">
            <summary>
            Sensitive characters that we should always skip
            This should be the set of Http control characters intersecting with 
            the set of characters OData literal format allows outside of strings
            (In V3: only +, as used in double literals ex. 3E+8)
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DataStringEscapeBuilder.input">
            <summary>
            input string
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DataStringEscapeBuilder.output">
            <summary>
            output string
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DataStringEscapeBuilder.index">
            <summary>
            the current index
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.DataStringEscapeBuilder.quotedDataBuilder">
            <summary>
            current quoted data string
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.DataStringEscapeBuilder.#ctor(System.String)">
            <summary>
            constructor
            </summary>
            <param name="dataString">The string to be escaped.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.DataStringEscapeBuilder.EscapeDataString(System.String)">
            <summary>
            Escape a URI string's data string portion
            </summary>
            <param name="input">The input string</param>
            <returns>The escaped string</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.DataStringEscapeBuilder.Build">
            <summary>
            Build a new escaped string
            </summary>
            <returns>The escaped string</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.DataStringEscapeBuilder.ReadQuotedString(System.Char)">
            <summary>
            Read quoted string
            </summary>
            <param name="quoteStart">The character that started the quote</param>
        </member>
        <member name="T:System.Data.Services.Serializers.EntityReferenceLinkDeserializer">
            <summary>
            Implements deserializer for entity reference links (the $links payloads).
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityReferenceLinkDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.EntityReferenceLinkDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntityReferenceLinkDeserializer.Read(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the input request payload and returns the WCF DS value representation of it.
            </summary>
            <param name="segmentInfo">Info about the request to read. For entity reference requests this is null.</param>
            <returns>The WCF DS representation of the value read. For entity reference link this is the Uri of the link.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.MediaResourceDeserializer">
            <summary>
            Implements deserializer for media resources.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.MediaResourceDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.MediaResourceDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MediaResourceDeserializer.Deserialize(System.Data.Services.SegmentInfo)">
            <summary>
            Create the object graph from the given payload and return the top level object.
            </summary>
            <param name="segmentInfo">Info about the object being created.</param>
            <returns>Instance of the object created.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.MediaResourceDeserializer.IsAtomRequest">
            <summary>
            Gets a value indicating whether the request is Atom
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.MediaResourceDeserializer.IsVerboseJsonRequest">
            <summary>
            Gets a value indicating whether the request is verbose json
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.MediaResourceDeserializer.IsJsonLightRequest">
            <summary>
            Gets a value indicating whether the request is json light
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.CollectionPropertyValueEnumerable">
            <summary>Implementation of IEnumerable interface to be used as the value of a collection property
            when passed the provider.</summary>
            <remarks>This implementation can only be enumerated once and doesn't provide any other interfaces
            then the IEnumerable.
            The IEnumerator returned by this does not support Reset and implement IDisposable.</remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.sourceEnumerable">
            <summary>The source enumerable this class is wrapping.</summary>
            <remarks>This is reset to null once an enumerator was created
            and is used to detect possible multiple calls to GetEnumerator.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.#ctor(System.Collections.IEnumerable)">
            <summary>Constructor.</summary>
            <param name="sourceEnumerable">The source enumerable which contains the values to report.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.GetEnumerator">
            <summary>Returns an enumerator to use for enumerating over the results.</summary>
            <returns>Enumerator to use for enumerating over the results.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator">
            <summary>Implementation of the IEnumerator interface.</summary>
            <remarks>This implementation also implements IDisposable to denote
            that callers should call Dispose once done with it.</remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator.sourceEnumerator">
            <summary>The enumerator to get the values from.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator.#ctor(System.Collections.IEnumerator)">
            <summary>Constructor.</summary>
            <param name="sourceEnumerator">The source enumerator which is used to get the actual values to report.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator.MoveNext">
            <summary>Moves to the next result.</summary>
            <returns>true if next result is available, false if no more results are available.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator.Reset">
            <summary>Resets the enumeration.</summary>
            <remarks>This method is not supported.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator.Dispose">
            <summary>Diposes the enumerator.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.CollectionPropertyValueEnumerable.CollectionPropertyValueEnumerator.Current">
            <summary>The current result.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.PropertyDeserializer">
            <summary>
            Implements deserializer for top level properties.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.PropertyDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.PropertyDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.PropertyDeserializer.Read(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the input request payload and returns the WCF DS value representation of it.
            </summary>
            <param name="segmentInfo">Info about the request to read.</param>
            <returns>The WCF DS representation of the value read.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.RawValueDeserializer">
            <summary>
            Implements deserializer for raw values.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.RawValueDeserializer.#ctor(System.Boolean,System.Data.Services.IDataService,System.Data.Services.UpdateTracker,System.Data.Services.RequestDescription)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Services.Serializers.RawValueDeserializer"/>.
            </summary>
            <param name="update">true if we're reading an update operation; false if not.</param>
            <param name="dataService">Data service for which the deserializer will act.</param>
            <param name="tracker">Tracker to use for modifications.</param>
            <param name="requestDescription">The request description to use.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.RawValueDeserializer.Read(System.Data.Services.SegmentInfo)">
            <summary>
            Reads the input request payload and returns the WCF DS value representation of it.
            </summary>
            <param name="segmentInfo">Info about the request to read.</param>
            <returns>The WCF DS representation of the value read.</returns>
        </member>
        <member name="T:System.Data.Services.ServiceOperationRights">
            <summary>
            Provides values to describe the kind of thing targetted by a 
            client request.
            </summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.None">
            <summary>Specifies no rights on this service operation.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.ReadSingle">
            <summary>Specifies the right to read one resource per request.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.ReadMultiple">
            <summary>Specifies the right to read multiple resources per request.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.AllRead">
            <summary>Specifies the right to read single or multiple resources in a single request.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.All">
            <summary>Specifies all rights to the service operation.</summary>
        </member>
        <member name="F:System.Data.Services.ServiceOperationRights.OverrideEntitySetRights">
            <summary>Actually use ServiceOperationRights, not EntitySetRights for the service operation.</summary>
        </member>
        <member name="T:System.Data.Services.SingleResultAttribute">
            <summary>
            Use this attribute on a DataService service operation method 
            to indicate than the IQueryable returned should contain a single element.
            </summary>
        </member>
        <member name="M:System.Data.Services.SingleResultAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Services.SingleResultAttribute" /> class. </summary>
        </member>
        <member name="T:System.Data.Services.UpdatableWrapper">
            <summary>
            This class wraps all the calls to IUpdatable interface.
            </summary>
        </member>
        <member name="F:System.Data.Services.UpdatableWrapper.service">
            <summary> data service instance.</summary>
        </member>
        <member name="F:System.Data.Services.UpdatableWrapper.updateProvider">
            <summary> instance implementation of IUpdatable.</summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.#ctor(System.Data.Services.IDataService)">
            <summary>
            creates an instance of UpdatableWrapper, which wraps all the calls to IUpdatable interface.
            </summary>
            <param name="serviceInstance">instance of the data service.</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.GetOrLoadUpdateProvider">
            <summary>
            Tries to load the update provider implementation if it has not already been loaded, then return the loaded IUpdatable implementation.
            </summary>
            <returns>Returns an IUpdatable implementation.</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.CreateResource(System.String,System.String)">
            <summary>
            Creates the resource of the given type and belonging to the given container
            </summary>
            <param name="containerName">container name to which the resource needs to be added</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and belonging to the given container</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.GetResource(System.Linq.IQueryable,System.String)">
            <summary>
            Gets the resource of the given type that the query points to
            </summary>
            <param name="query">query pointing to a particular resource</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and as referenced by the query</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ScheduleInvokable(System.Data.Services.Providers.IDataServiceInvokable)">
            <summary>
            Queues up the <paramref name="invokable"/> to be invoked during IUpdatable.SaveChanges().
            </summary>
            <param name="invokable">The invokable instance whose Invoke() method will be called during IUpdatable.SaveChanges().</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ResetResource(System.Object)">
            <summary>
            Resets the value of the given resource to its default value
            </summary>
            <param name="resource">resource whose value needs to be reset</param>
            <returns>same resource with its value reset</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SetETagValues(System.Object,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            If the provider implements IConcurrencyProvider, then this method passes the etag values
            to the provider, otherwise compares the etag itself.
            </summary>
            <param name="resourceCookie">etag values for the given resource.</param>
            <param name="container">container for the given resource.</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <returns>the value of the property for the given target resource</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SetReference(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given reference property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>
            Adds the given value to the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeAdded">value of the property which needs to be added</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>
            Removes the given value from the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeRemoved">value of the property which needs to be removed</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.DeleteResource(System.Object)">
            <summary>
            Delete the given resource
            </summary>
            <param name="targetResource">resource that needs to be deleted</param>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.SaveChanges">
            <summary>
            Saves all the pending changes made till now
            </summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ResolveResource(System.Object)">
            <summary>
            Returns the actual instance of the resource represented by the given resource object
            </summary>
            <param name="resource">object representing the resource whose instance needs to be fetched</param>
            <returns>The actual instance of the resource represented by the given resource object</returns>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ClearChanges">
            <summary>
            Revert all the pending changes.
            </summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.DisposeProvider">
            <summary>
            Dispose the update provider instance
            </summary>
        </member>
        <member name="M:System.Data.Services.UpdatableWrapper.ParseETagValue(System.Collections.Generic.IList{System.Data.Services.Providers.ResourceProperty},System.String)">
            <summary>
            Parse the given etag value in the If-Match request header.
            </summary>
            <param name="etagProperties">List of etag properties for the type whose etag values we are parsing.</param>
            <param name="ifMatchHeaderValue">value of the If-Match header as specified in the request.</param>
            <returns>returns the etag value as a list containing the property name and its corresponding value. If the If-Match header value is '*', then returns an empty collection.</returns>
        </member>
        <member name="P:System.Data.Services.UpdatableWrapper.UpdateProvider2">
            <summary>
            Get the instance of IDataServiceUpdateProvider2.
            </summary>
        </member>
        <member name="P:System.Data.Services.UpdatableWrapper.UpdateProvider">
            <summary>
            Get the instance of IUpdatable.
            </summary>
        </member>
        <member name="T:System.Data.Services.UpdateTracker">
            <summary>Provides a class used to track updates for callbacks.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateTracker.service">
            <summary>Underlying data service instance.</summary>
        </member>
        <member name="F:System.Data.Services.UpdateTracker.items">
            <summary>
            A dictionary of containers mapping to the changes on those 
            containers, each of which consists of an element and the
            action taken on it.
            </summary>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.#ctor(System.Data.Services.IDataService)">
            <summary>Initializes a new <see cref="T:System.Data.Services.UpdateTracker"/> instance.</summary>
            <param name="service">underlying data source instance.</param>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.FireNotification(System.Data.Services.IDataService,System.Object,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.UpdateOperations)">
            <summary>Fires the notification for a single action.</summary>
            <param name="service">Service on which methods should be invoked.</param>
            <param name="target">Object to be tracked.</param>
            <param name="container">Container in which object is changed.</param>
            <param name="action">Action affecting target.</param>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.CreateUpdateTracker(System.Data.Services.IDataService)">
            <summary>
            Create a new instance of update tracker
            </summary>
            <param name="service">underlying data service.</param>
            <returns>
            Returns a new instance of UpdateTracker.
            </returns>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.FireNotifications">
            <summary>Fires all notifications</summary>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.TrackAction(System.Object,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.UpdateOperations)">
            <summary>
            Tracks the specified <paramref name="target"/> for a 
            given <paramref name="action "/> on the <paramref name="container"/>.
            </summary>
            <param name="target">Object to be tracked.</param>
            <param name="container">Container in which object is changed.</param>
            <param name="action">Action affecting target.</param>
            <remarks>
            If <paramref name="target"/> was already being tracked, the actions are OR'ed together.
            </remarks>
        </member>
        <member name="M:System.Data.Services.UpdateTracker.AssertActionValues(System.Object,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>Asserts valid value for tracking update actions.</summary>
            <param name="target">Object to be tracked.</param>
            <param name="container">Container in which object is changed.</param>
        </member>
        <member name="T:System.Data.Services.VersionUtil">
            <summary>
            A set of utility methods for dealing with versions and versioning.
            </summary>
        </member>
        <member name="F:System.Data.Services.VersionUtil.Version1Dot0">
            <summary>Version 1.0.</summary>
        </member>
        <member name="F:System.Data.Services.VersionUtil.Version2Dot0">
            <summary>Version 2.0.</summary>
        </member>
        <member name="F:System.Data.Services.VersionUtil.Version3Dot0">
            <summary>Version 3.0.</summary>
        </member>
        <member name="F:System.Data.Services.VersionUtil.KnownDataServiceVersions">
            <summary>
            Default set of known data service versions, currently 1.0, 2.0 and 3.0
            </summary>
        </member>
        <member name="F:System.Data.Services.VersionUtil.DataServiceDefaultResponseVersion">
            <summary>
            The default response version of the data service. If no version is set for a particular response
            The DataService will respond with this version (1.0)
            </summary>
        </member>
        <member name="M:System.Data.Services.VersionUtil.ToVersion(System.Data.Services.Common.DataServiceProtocolVersion)">
            <summary>Given a <see cref="T:System.Data.Services.Common.DataServiceProtocolVersion"/> enumeration returns the <see cref="T:System.Version"/> instance with the same version number.</summary>
            <param name="protocolVersion">The protocol version enum value to convert.</param>
            <returns>The version instance with the version number for the specified protocol version.</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.RaiseMetadataEdmSchemaVersion(System.Data.Services.Providers.MetadataEdmSchemaVersion,System.Data.Services.Providers.MetadataEdmSchemaVersion)">
            <summary>
            If necessary raises the metadata edm schema version.
            </summary>
            <param name="versionToRaise">Version to raise.</param>
            <param name="targetVersion">New version to raise to.</param>
            <returns>New version if the target version is greater than the existing version.</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.RaiseVersion(System.Version,System.Version)">
            <summary>
            If necessary raises version to the version requested by the user.
            </summary>
            <param name="versionToRaise">Version to raise.</param>
            <param name="targetVersion">New version to raise to.</param>
            <returns>New version if the requested version is greater than the existing version.</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.RaiseVersion(System.Data.Services.Providers.MetadataEdmSchemaVersion,System.Data.Services.Providers.MetadataEdmSchemaVersion)">
            <summary>
            If necessary raises version to the version requested by the user.
            </summary>
            <param name="versionToRaise">Version to raise.</param>
            <param name="targetVersion">New version to raise to.</param>
            <returns>New version if the requested version is greater than the existing version.</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.CheckMaxProtocolVersion(System.Version,System.Version)">
            <summary>
            Check the feature version with the max protocol version specified in the server configuration.
            </summary>
            <param name="featureVersion">feature version that is required to understand the current request.</param>
            <param name="maxProtocolVersion">maxProtocolVersion that is specified in the server configuration.</param>
        </member>
        <member name="M:System.Data.Services.VersionUtil.CheckRequestVersion(System.Version,System.Version)">
            <summary>
            Verify that the specified request version is greater than or equal to the required request version
            </summary>
            <param name="requiredRequestVersion">Minimum version required to process the request.</param>
            <param name="actualRequestVersion">Request version as specified in the request header.</param>
        </member>
        <member name="M:System.Data.Services.VersionUtil.GetEffectiveMaxResponseVersion(System.Version,System.Version)">
            <summary>
            Returns the highest response version possible, which is the min of MPV and RequestMaxDSV
            </summary>
            <param name="maxProtocolVersion">MPV as defined in the server.</param>
            <param name="requestMaxVersion">Request MaxDSV header value.</param>
            <returns>the minimum of <paramref name="maxProtocolVersion"/> and <paramref name="requestMaxVersion"/>.</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.GetResponseVersionForError(System.String,System.Version,System.Version,System.Version)">
            <summary>
            Gets the response version for an error payload.
            </summary>
            <param name="acceptableContentTypes">A comma-separated list of client-supported MIME Accept types.</param>
            <param name="requestMinVersion">The MinDataServiceVersion of the request.</param>
            <param name="requestMaxVersion">The MaxDataServiceVersion of the request.</param>
            <param name="maxProtocolVersion">The max protocol version as specified in the config.</param>
            <returns>The response version to be used for an error payload.</returns>
            <remarks>
            This function is specific to exceptions. For V1 and V2, if the request header has a MinDSV, we will still return 
            RequestDescription.DataServiceDefaultResponseVersion. This helps avoid breaking changes. For V3, we return
            what is in the request header, provided the version is valid.
            </remarks>
        </member>
        <member name="M:System.Data.Services.VersionUtil.IsKnownRequestVersion(System.Version)">
            <summary>
            Verify that the request version is a version we know.
            </summary>
            <param name="requestVersion">request version from the header</param>
            <returns>returns true if the request version is known</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.MatchToKnownVersion(System.Version)">
            <summary>
            Determines the highest known version which is less than or equal to the given version.
            </summary>
            <param name="version">The version to match.</param>
            <returns>The highest known version which is less than or equal to the given version.</returns>
        </member>
        <member name="M:System.Data.Services.VersionUtil.UpdateMetadataVersion(System.Data.Services.Providers.DataServiceProviderWrapper,System.Version@,System.Data.Services.Providers.MetadataEdmSchemaVersion@)">
            <summary>
            Goes through all visible types in the provider and determine the metadata version.
            </summary>
            <param name="provider">Provider wrapper instance.</param>
            <param name="metadataVersion">Returns the metadata version.</param>
            <param name="edmSchemaVersion">Returns the edm schema version.</param>
        </member>
        <member name="M:System.Data.Services.VersionUtil.UpdateMetadataVersionForResourceType(System.Data.Services.Providers.ResourceType,System.Version@,System.Data.Services.Providers.MetadataEdmSchemaVersion@)">
            <summary>
            Update the various versions based on the metadata of the given resource type
            </summary>
            <param name="resourceType">resource type whose metadata needs to be looked at.</param>
            <param name="metadataVersion">Reference to the metadata version to be updated.</param>
            <param name="edmSchemaVersion">Reference to the edm schema version to be updated.</param>
        </member>
        <member name="T:System.Data.Services.WebUtil">
            <summary>Utility methods for this project.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.PublicInstanceBindingFlags">
            <summary>Bindings Flags for public instance members.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.EmptyObjectArray">
            <summary>A zero-length object array.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.EmptyStringArray">
            <summary>A zero-length string array.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.EmptyKeyValuePairStringObject">
            <summary>A zero-length keyValuePair of string and object.</summary>
        </member>
        <member name="F:System.Data.Services.WebUtil.GenericExpandedWrapperTypes">
            <summary>
            Collection of ExpandedWrapper types and their corresponding number of parameters
            </summary>
        </member>
        <member name="M:System.Data.Services.WebUtil.ApplyHostHeader(System.Uri,System.String)">
            <summary>
            Applies the host specified in a request if available to the given <paramref name="baseUri"/>.
            </summary>
            <param name="baseUri">URI to update with host (and port) information.</param>
            <param name="requestHost">RequestMessage header (possibly null or empty)</param>
            <returns>The updated URI.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckArgumentNull``1(``0,System.String)">
            <summary>
            Checks the argument value for null and throw ArgumentNullException if it is null
            </summary>
            <typeparam name="T">type of the argument</typeparam>
            <param name="value">argument whose value needs to be checked</param>
            <param name="parameterName">name of the argument</param>
            <returns>returns the argument back</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckStringArgumentNullOrEmpty(System.String,System.String)">
            <summary>
            Checks the string argument value for empty or null and throw ArgumentNullException if it is null
            </summary>
            <param name="value">argument whose value needs to be checked</param>
            <param name="parameterName">name of the argument</param>
            <returns>returns the argument back</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckServiceOperationResultKind(System.Data.Services.Providers.ServiceOperationResultKind,System.String)">
            <summary>
            Check whether the given value for ServiceOperationResultKind is valid. If not, throw argument exception.
            </summary>
            <param name="kind">value for ServiceOperationResultKind</param>
            <param name="parameterName">name of the parameter</param>
            <exception cref="T:System.ArgumentException">if the value is not valid.</exception>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceTypeKind(System.Data.Services.Providers.ResourceTypeKind,System.String)">
            <summary>
            Check whether the given value for ResourceTypeKind is valid. If not, throw argument exception.
            </summary>
            <param name="kind">value for ResourceTypeKind</param>
            <param name="parameterName">name of the parameter</param>
            <exception cref="T:System.ArgumentException">if the value is not valid.</exception>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceNotCollectionForOpenProperty(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Checks that the given ResourceType's ResourceTypeKind is not Collection or EntityCollection, and throws an error
            saying that open properties cannot have collections if needed.
            </summary>
            <param name="resourceType">ResourceType to check.</param>
            <param name="propertyName">Name of the property that was assigned a value of type <paramref name="resourceType"/>.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceContainerRights(System.Data.Services.EntitySetRights,System.String)">
            <summary>Checks that the <paramref name="rights"/> are valid and throws an exception otherwise.</summary>
            <param name="rights">Value to check.</param>
            <param name="parameterName">Name of parameter for the exception message.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckServiceOperationRights(System.Data.Services.ServiceOperationRights,System.String)">
            <summary>Checks that the <paramref name="rights"/> are valid and throws an exception otherwise.</summary>
            <param name="rights">Value to check.</param>
            <param name="parameterName">Name of parameter for the exception message.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckServiceActionRights(System.Data.Services.ServiceActionRights,System.String)">
            <summary>Checks that the <paramref name="rights"/> are valid and throws an exception otherwise.</summary>
            <param name="rights">Value to check.</param>
            <param name="parameterName">Name of parameter for the exception message.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckResourceExists(System.Boolean,System.String)">
            <summary>Checks the specifid value for syntax validity.</summary>
            <param name="resourceExists">Whether syntax is valid.</param>
            <param name="identifier">segment indentifier for which the resource was null.</param>
            <remarks>This helper method is used to keep syntax check code more terse.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckSyntaxValid(System.Boolean)">
            <summary>Checks the specific value for syntax validity.</summary>
            <param name="valid">Whether syntax is valid.</param>
            <remarks>This helper method is used to keep syntax check code more terse.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.ResolveTypeIdentifier(System.Data.Services.Providers.DataServiceProviderWrapper,System.String,System.Data.Services.Providers.ResourceType,System.Boolean)">
            <summary>
            Try and resolve the path identifier as resource type
            </summary>
            <param name="provider">provider instance.</param>
            <param name="identifier">identifier as specified in the path.</param>
            <param name="previousSegmentResourceType">expected resource type.</param>
            <param name="previousSegmentIsTypeSegment">whether the previous path segment was a type identifier or not.</param>
            <returns>an instance of resource type with the same name as the identifier. If there is no resource type with the given name, returns null.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.DebugEnumIsDefined``1(``0)">
            <summary>
            Debug.Assert(Enum.IsDefined(typeof(T), value))
            </summary>
            <typeparam name="T">type of enum</typeparam>
            <param name="value">enum value</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.Dispose(System.Object)">
            <summary>Disposes of <paramref name="o"/> if it implements <see cref="T:System.IDisposable"/>.</summary>
            <param name="o">Object to dispose, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.EnsureLastSegmentEmpty(System.Uri)">
            <summary>Adds an empty last segment as necessary to the specified <paramref name="absoluteUri"/>.</summary>
            <param name="absoluteUri">An absolute URI.</param>
            <returns><paramref name="absoluteUri"/> with an empty last segment (ie, "ending with '/'").</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetTypeName(System.Type)">
            <summary>Gets the public name for the specified <paramref name='type' />.</summary>
            <param name='type'>Type to get name for.</param>
            <returns>A public name for the specified <paramref name='type' />, empty if it cannot be found.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.RecurseEnterQueryParser(System.Int32,System.Int32@)">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
            <param name="recursionLimit">Maximum recursion limit.</param>
            <param name="recursionDepth">Depth of recursion.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.RecurseEnter(System.Int32,System.Int32@)">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
            <param name="recursionLimit">Maximum recursion limit.</param>
            <param name="recursionDepth">Depth of recursion.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.RecurseLeave(System.Int32@)">
            <summary>Marks the fact that a recursive method is leaving.</summary>
            <param name="recursionDepth">Depth of recursion.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.StringToSimpleArray(System.String)">
            <summary>Converts comma-separated entries with no quotes into a text array.</summary>
            <param name="text">Text to convert.</param>
            <returns>A string array that represents the comma-separated values in the text.</returns>
            <remarks>This method can be used to provide a simpler API facade instead of identifier arrays.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.HasMediaLinkEntryInHierarchy(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Test if any of the types in the hierarchy of <paramref name="baseType"/> is a Media Link Entry.
            </summary>
            <param name="baseType">base type of the hierarchy</param>
            <param name="provider">IDataServiceMetadataProvider interface instance</param>
            <returns>Returns true if <paramref name="baseType"/> or at least one of its descendants is a Media Link Entry.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CopyStream(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>copy from one stream to another</summary>
            <param name="input">input stream</param>
            <param name="output">output stream</param>
            <param name="buffer">reusable buffer</param>
            <returns>count of copied bytes</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CopyStream(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>copy from one stream to another</summary>
            <param name="input">input stream</param>
            <param name="output">output stream</param>
            <param name="bufferSize">size of buffer to use during copying. If 0 is specified, the default of 64K will be used.</param>
            <returns>count of copied bytes</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CreateNewInstanceConstructor(System.Type,System.String,System.Type)">
            <summary>
            Creates a delegate that when called creates a new instance of the specified <paramref name="type" />.
            </summary>
            <param name="type">Type of the instance.</param>
            <param name="fullName">full name of the given clr type.
            If the type name is not specified, it takes the full name from the clr type.</param>
            <param name="targetType">Type to return from the delegate.</param>
            <returns>A delegate that when called creates a new instance of the specified <paramref name="type" />.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsPrimitiveType(System.Type)">
            <summary>Checks whether the specified type is a known primitive type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if the specified type is known to be a primitive type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.TryResolveResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.String)">
            <summary>
            Try to resolve a type by name by first trying primitive types and then provider's types
            </summary>
            <param name="provider">Provider to resolve non-primitive types against</param>
            <param name="typeName">Type name</param>
            <returns>ResourceType object for this type, or null if none found</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.Object)">
            <summary>
            Get a primitive or EDM type from an instance
            </summary>
            <param name="provider">Provider to get EDM types from, in case <paramref name="obj"/> is not a primitive.</param>
            <param name="obj">Instance to get the type from</param>
            <returns>A ResourceType for this instance or null if it is not a known type</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetNonPrimitiveResourceType(System.Data.Services.Providers.DataServiceProviderWrapper,System.Object)">
            <summary>
            Get the non primitive type resource and checks that the given instance represents a single resource.
            </summary>
            <param name="provider">underlying data source.</param>
            <param name="obj">instance of the resource.</param>
            <returns>returns the resource type representing the given resource instance.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.ElementType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns the ItemType if <paramref name="type"/> is a EntityCollectionResourceType or a CollectionResourceType,
            otherwise return <paramref name="type"/>.
            </summary>
            <param name="type">Resource type in question.</param>
            <returns>Returns the ItemType if <paramref name="type"/> is a EntityCollectionResourceType or a CollectionResourceType,
            otherwise return <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsValidMimeType(System.String)">
            <summary>
            Checks whether the specified <paramref name="mimeType"/>
            is a valid MIME type with no parameters.
            </summary>
            <param name="mimeType">Simple MIME type.</param>
            <returns>
            true if the specified <paramref name="mimeType"/> is valid; 
            false otherwise.
            </returns>
            <remarks>
            See http://tools.ietf.org/html/rfc2045#section-5.1 for futher details.
            </remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsElementIEnumerable(System.Object,System.Collections.IEnumerable@)">
            <summary>
            Checks whether the specified element is an <see cref="T:System.Collections.IEnumerable"/>
            of other elements.
            </summary>
            <param name="element">Element to check (possibly null).</param>
            <param name="enumerable"><paramref name="element"/>, or null if <see cref="T:System.Collections.IEnumerable"/> is not supported.</param>
            <returns>
            true if <paramref name="element"/> supports IEnumerable and is not
            a primitive type (strings and byte arrays are also enumerables, but
            they shouldn't be iterated over, so they return false).
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsETagValueValid(System.String,System.Boolean)">
            <summary>
            Returns false if the given etag value is not valid.
            Look in http://www.ietf.org/rfc/rfc2616.txt?number=2616 (Section 14.26) for more information
            </summary>
            <param name="etag">etag value to be checked.</param>
            <param name="allowStrongEtag">true if we allow strong etag values.</param>
            <returns>returns true if the etag value is valid, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.TypeAllowsNull(System.Type)">
            <summary>Checks whether the specified <paramref name='type' /> can be assigned null.</summary>
            <param name='type'>Type to check.</param>
            <returns>true if type is a reference type or a Nullable type; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetTypeAllowingNull(System.Type)">
            <summary>Gets a type for <paramref name="type"/> that allows null values.</summary>
            <param name="type">Type to base resulting type on.</param>
            <returns>
            <paramref name="type"/> if it's a reference or Nullable&lt;&gt; type;
            Nullable&lt;<paramref name="type"/>&gt; otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsNullableType(System.Type)">
            <summary>Checks whether the specified type is a generic nullable type.</summary>
            <param name="type">Type to check.</param>
            <returns>true if <paramref name="type"/> is nullable; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetETagValue(System.Object,System.Data.Services.Providers.ResourceType,System.Collections.Generic.ICollection{System.Data.Services.Providers.ResourceProperty},System.Data.Services.IDataService,System.Boolean)">
            <summary>Returns the etag for the given resource.</summary>
            <param name="resource">Resource for which etag value needs to be returned.</param>
            <param name="resourceType">Resource type of the <paramref name="resource"/>.</param>
            <param name="etagProperties">list of etag properties for the given resource</param>
            <param name="service">Service to which the request was made.</param>
            <param name="getMethod">whether the request was a get method or not.</param>
            <returns>ETag value for the given resource, with values encoded for use in a URI.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetETagValue(System.Data.Services.IDataService,System.Object,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>Returns the etag for the given resource.</summary>
            <param name="service">Data service to which the request was made.</param>
            <param name="resource">Resource for which etag value needs to be returned.</param>
            <param name="resourceType">ResourceType instance containing metadata about <paramref name="resource"/>.</param>
            <param name="container">resource set to which the resource belongs to.</param>
            <returns>ETag value for the given resource, with values encoded for use in a URI.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetRequestEnumerator(System.Collections.IEnumerable)">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the specified <paramref name="enumerable"/>,
            mapping well-known exceptions to the appropriate HTTP status code.
            </summary>
            <param name="enumerable">Request enumerable to get enumerator for.</param>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the specified <paramref name="enumerable"/>.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CompareAndGetETag(System.Object,System.Object,System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.IDataService,System.Boolean@)">
            <summary>
            Given the request description, query for the parent entity resource
            and compare the etag, if specified in the header
            </summary>
            <param name="parentEntityResource">entity resource for which etag needs to be checked.</param>
            <param name="parentEntityToken">token as returned by the IUpdatable interface methods.</param>
            <param name="container">container to which the entity resource belongs to.</param>
            <param name="service">Underlying service to which the request was made to.</param>
            <param name="writeResponseForGetMethods">out bool which indicates whether response needs to be written for GET operations</param>
            <returns>current etag value for the given entity resource.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.WriteETagValueInResponseHeader(System.Data.Services.RequestDescription,System.String,Microsoft.Data.OData.IODataResponseMessage)">
            <summary>
            Write the etag header value in the response
            </summary>
            <param name="requestDescription">description about the request made</param>
            <param name="etagValue">etag value that needs to be written.</param>
            <param name="responseMessage">responseMessage implementation for this data service.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.XmlReaderEnsureElement(System.Xml.XmlReader)">
            <summary>
            If the specified reader is not on an element, advances to one, skipping document declaration
            nodes (typically at the beginning of a document), comments, processing instructions and 
            whitespace.
            </summary>
            <param name="reader">Reader to reposition.</param>
            <returns>
            true if the reader is left on an element; false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetService``1(System.Object)">
            <summary>
            Checks whether a given object implements IServiceProvider and if it supports the specified service interface
            </summary>
            <typeparam name="T">The type representing the requested service</typeparam>
            <param name="target">Object that acts as the service provider</param>
            <returns>An object implementing the requested service, or null if not available</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetWrapperType(System.Type[],System.Func{System.Object,System.String})">
            <summary>
            Gets the type corresponding to the wrapper based in input parameter types
            </summary>
            <param name="wrapperParameters">Parameter types</param>
            <param name="errorGenerator">Delegate that generates the error</param>
            <returns>Closed generic type</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsExpandedWrapperType(System.Type)">
            <summary>
            Checks if the given type is an ExpandedWrapper type
            </summary>
            <param name="inputType">Input closed type</param>
            <returns>true if the given type is one of ExpandedWrapper types</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Returns an enumeration that picks one element from each enumerable and projects from them.
            </summary>
            <typeparam name="T1">Type of first enumerable.</typeparam>
            <typeparam name="T2">Type of second enumerable.</typeparam>
            <typeparam name="TResult">Type of zipped projection.</typeparam>
            <param name="left">Left enumerable.</param>
            <param name="right">Right enumerable.</param>
            <param name="resultSelector">Projecting function.</param>
            <returns>An enumeration with the projected results.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetAttributeEx(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            get attribute value from specified namespace or empty namespace
            </summary>
            <param name="reader">reader</param>
            <param name="attributeName">attributeName</param>
            <param name="namespaceUri">namespaceUri</param>
            <returns>attribute value</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetEmptyStreamWriter">
            <summary>
            Disposes the stream provider and returns a no-op method for a stream-writing action.
            </summary>
            <returns>A delegate that can serialize the result.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetPropertyValue(System.Data.Services.Providers.DataServiceProviderWrapper,System.Object,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.String)">
            <summary>
            Get the value of the given property.
            </summary>
            <param name="provider">underlying data provider.</param>
            <param name="resource">instance of the type which contains this property.</param>
            <param name="resourceType">resource type instance containing metadata about the declaring type.</param>
            <param name="resourceProperty">resource property instance containing metadata about the property.</param>
            <param name="propertyName">Name of the property to read if <paramref name="resourceProperty"/> is not given.</param>
            <returns>the value of the given property.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsNullValue(System.Object)">
            <summary>
            Returns true if the specified value should be treated as a null value
            </summary>
            <param name="propertyValue">The property value to check for being null.</param>
            <returns>true if the value should be treated as null, or false otherwise.</returns>
            <remarks>This methods checks for being CLR null as well as DBNull.Value.</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsSpatial(System.Type)">
            <summary>
            Test if the type is an ISpatial derived type
            </summary>
            <param name="type">the type to be tested</param>
            <returns>true if the type implements the ISpatial interface, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.SetResponseHeadersForBatchRequests(Microsoft.Data.OData.IODataResponseMessage,System.Data.Services.BatchServiceHost)">
            <summary>
            Sets the response headers for the given operation message.
            </summary>
            <param name="operationResponseMessage">ODataBatchOperationResponseMessage instance for the batch operation.</param>
            <param name="batchHost">RequestMessage containing all the response headers for the batch operation.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsBinaryResourceType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Checks if the given resource type instance is one of the known binary primitive types.
            </summary>
            <param name="resourceType">Resource type instance.</param>
            <returns>True if the given resource type instance is one of the known binary primitive types, otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.ValidateAndAddAnnotation(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.String,System.String,System.Object)">
            <summary>
            Validate the given annotation.
            </summary>
            <param name="customAnnotations">Reference to the dictionary instance where custom annotations are stored.</param>
            <param name="namespaceName">NamespaceName to which the custom annotation belongs to.</param>
            <param name="name">Name of the annotation.</param>
            <param name="annotation">Value of the annotation.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CreateFullNameForCustomAnnotation(System.String,System.String)">
            <summary>
            Creates the full name for a custom annotation.
            </summary>
            <param name="namespaceName">Namespace to which the custom annotation belongs to.</param>
            <param name="name">Name of the annotation.</param>
            <returns>The full name for the annotation</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.SkipInsignificantNodes(System.Xml.XmlReader)">
            <summary>
            Reads from the XML reader skipping insignificant nodes.
            </summary>
            <param name="reader">The XML reader to read from.</param>
            <remarks>Do not use MoveToContent since for backward compatibility reasons we skip over nodes reported as Text which have
            whitespace only content (even though the XmlReader should report those as Whitespace).</remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.CreateMessageReaderSettings(System.Data.Services.IDataService,System.Boolean)">
            <summary>
            Creates ODataMessageReaderSettings for the specified data service.
            </summary>
            <param name="dataService">The data service instance to create the settings for.</param>
            <param name="enableWcfDataServicesServerBehavior">If true, the new reader settings will use the WcfDataServicesServer behavior;
            if false, the new reader settings will use the default behavior.</param>
            <returns>New instance of the message reader settings.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckNullDirectReference(System.Object,System.Data.Services.SegmentInfo)">
            <summary>
            Ensures that if there is a direct reference like "/Customers(4)" or $value then the result object is not null.
            </summary>
            <param name="result">Query result entity or value.</param>
            <param name="segmentInfo">Segment details for the <paramref name="result"/>.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetEntitySet(System.Data.Services.Providers.DataServiceProviderWrapper,Microsoft.Data.Edm.IEdmModel,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Returns the entity set for the given resource set.
            </summary>
            <param name="provider">Underlying data provider.</param>
            <param name="model">IEdmModel instance containing all the metadata information.</param>
            <param name="resourceSet">ResourceSetWrapper instance.</param>
            <returns>an IEdmEntitySet instance for the given resource set.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetNonNullableType(System.Type)">
            <summary>Gets a non-nullable version of the specified type.</summary>
            <param name="type">Type to get non-nullable version for.</param>
            <returns>
            <paramref name="type"/> if type is a reference type or a 
            non-nullable type; otherwise, the underlying value type.
            </returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckEmptyQueryArguments(System.Data.Services.IDataService,System.Boolean)">
            <summary>Checks that no query arguments were sent in the request.</summary>
            <param name="service">Service to check.</param>
            <param name="checkForOnlyV2QueryParameters">true if only V2 query parameters must be checked, otherwise all the query parameters will be checked.</param>
            <remarks>
            Regular processing checks argument applicability, but for
            service operations that return an IEnumerable this is part
            of the contract on service operations, rather than a structural
            check on the request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckEmptySetQueryArguments(System.Data.Services.IDataService)">
            <summary>Checks that no set query arguments were sent in the request.</summary>
            <param name="service">Service to check.</param>
        </member>
        <member name="M:System.Data.Services.WebUtil.CheckV2EmptyQueryArguments(System.Data.Services.IDataService)">
            <summary>Checks that no query arguments were sent in the request.</summary>
            <param name="service">Service to check.</param>
            <remarks>
            Regular processing checks argument applicability, but for
            service operations that return an IEnumerable this is part
            of the contract on service operations, rather than a structural
            check on the request.
            </remarks>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsCrossReferencedSegment(System.Data.Services.SegmentInfo,System.Data.Services.IDataService)">
            <summary>
            Test if the given segment is a cross referenced segment in a batch operation
            </summary>
            <param name="segmentInfo">Segment in question</param>
            <param name="service">service instance</param>
            <returns>True if the given segment is a cross referenced segment</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetDeclaringTypeForProperty(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the resource type which the resource property is declared on.
            </summary>
            <param name="resourceType">resource type to start looking</param>
            <param name="resourceProperty">resource property in question</param>
            <param name="rootType">root type in the hierarchy at which we need to stop.</param>
            <returns>actual resource type that declares the property or the root type if the property is declared in a more base type than the given root type.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsNullOrWhitespace(System.String)">
            <summary>
            Checks whether the specifies string is null or blank.
            </summary>
            <param name="text">Text to check.</param>
            <returns>true if text is null, empty, or all whitespace characters.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.GetHostAndPort(System.String,System.String,System.String@,System.Int32@)">
            <summary>Gets the host and port parts of a RequestMessage header if they are both present.</summary>
            <param name="hostHeader">RequestMessage header value (non-null).</param>
            <param name="scheme">Scheme for the host and port values.</param>
            <param name="host">If the result is true, the host part of the header.</param>
            <param name="port">If the result is false, the port part of the header.</param>
            <returns>true if the header has a host and port part, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebUtil.IsWhitespace(System.String)">
            <summary>Checks whether the specifies string is null or blank.</summary>
            <param name="text">Text to check.</param>
            <returns>true if text is null, empty, or all whitespace characters.</returns>
        </member>
        <member name="T:System.Data.Services.WebUtil.ExpandWrapperTypeWithIndex">
            <summary>
            Represents a pair of Expanded wrapper with the index in  the array
            The only reason to create this class is to avoid CA908 for KeyValuePairs
            </summary>
        </member>
        <member name="P:System.Data.Services.WebUtil.ExpandWrapperTypeWithIndex.Type">
            <summary>Type</summary>
        </member>
        <member name="P:System.Data.Services.WebUtil.ExpandWrapperTypeWithIndex.Index">
            <summary>Index</summary>
        </member>
        <member name="T:System.Data.Services.WebUtil.ValidatedNotNullAttribute">
            <summary>
            A workaround to a problem with FxCop which does not recognize the CheckArgumentNotNull method
            as the one which validates the argument is not null.
            </summary>
            <remarks>This has been suggested as a workaround in msdn forums by the VS team. Note that even though this is production code
            the attribute has no effect on anything else.</remarks>
        </member>
        <member name="T:System.Data.Services.XmlConstants">
            <summary>
            Class that contains all the constants for various schemas.
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ClrServiceInitializationMethodName">
            <summary>"InitializeService" method name for service initialize.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentID">
            <summary>id of the corresponding body</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentLength">
            <summary>byte-length of the corresponding body</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentType">
            <summary>mime-type of the corresponding body</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentDisposition">
            <summary>content disposition of the response (a hint how to handle the response)</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpDataServiceVersion">
            <summary>'DataServiceVersion' - HTTP header name for data service version.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMinDataServiceVersion">
            <summary>'MinDataServiceVersion' - HTTP header name for minimum understood data service version.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMaxDataServiceVersion">
            <summary>'MaxDataServiceVersion' - HTTP header name for maximum understood data service version.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpPrefer">
            <summary>
            'Prefer' - HTTP request header name for client preferences. 
            Refer to: http://tools.ietf.org/id/draft-snell-http-prefer-02.txt for details.
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpPreferenceApplied">
            <summary>
            'Preference-Applied' - HTTP response header name for client preference response.
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpCacheControlNoCache">
            <summary>'no-cache' - HTTP value for Cache-Control header.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpCharsetParameter">
            <summary>'charset' - HTTP parameter name.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodGet">
            <summary>HTTP method name for GET requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodPost">
            <summary>HTTP method name for POST requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodPut">
            <summary> Http Put Method name - basically used for updating resource.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodDelete">
            <summary>HTTP method name for delete requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodMerge">
            <summary>HTTP method name for MERGE requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMethodPatch">
            <summary>HTTP method name for PATCH requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringExpand">
            <summary>HTTP query string parameter value for expand.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringFilter">
            <summary>HTTP query string parameter value for filtering.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringOrderBy">
            <summary>HTTP query string parameter value for ordering.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringSkip">
            <summary>HTTP query string parameter value for skipping elements.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringTop">
            <summary>HTTP query string parameter value for limiting the number of elements.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringInlineCount">
            <summary>HTTP query string parameter value for counting query result set</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringSkipToken">
            <summary>HTTP query string parameter value for skipping results based on paging.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SkipTokenPropertyPrefix">
            <summary>Property prefix for the skip token property in expanded results for a skip token</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringValueCount">
            <summary>HTTP query string parameter value for counting query result set</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringSelect">
            <summary>HTTP query string parameter value for projection.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringFormat">
            <summary>HTTP query string parameter for specifying the requested content-type of the response.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQueryStringCallback">
            <summary>HTTP query string parameter for specifying the a callback function name for JSONP (JSON padding).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpQValueParameter">
            <summary>'q' - HTTP q-value parameter name.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpXMethod">
            <summary>'X-HTTP-Method' - HTTP header name for requests that want to tunnel a method through POST.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestAccept">
            <summary>HTTP name for Accept header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestAcceptCharset">
            <summary>HTTP name for Accept-Charset header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestIfMatch">
            <summary>HTTP name for If-Match header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpRequestIfNoneMatch">
            <summary>HTTP name for If-None-Match header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpUserAgent">
            <summary>HTTP name for User-Agent header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMultipartBoundary">
            <summary>multi-part keyword in content-type to identify batch separator</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XContentTypeOptions">
            <summary>'X-Content-Type-Options' - HTTP header for Internet Explorer 8 and 9 to specify options for content-type handling.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XContentTypeOptionNoSniff">
            <summary>An 'X-Content-Type-Options' HTTP header argument to instruct IE8/9 not to sniff the content and instead display it according to the content-type header.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseAllow">
            <summary>'Allow' - HTTP response header for allowed verbs.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseCacheControl">
            <summary>HTTP name for Cache-Control header.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseETag">
            <summary>HTTP name for ETag header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseLocation">
            <summary>HTTP name for location header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpDataServiceId">
            <summary>HTTP name for DataServiceId header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpResponseStatusCode">
            <summary>HTTP name for Status-Code header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMultipartBoundaryBatchResponse">
            <summary>multi-part mixed batch separator for response stream</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpMultipartBoundaryChangesetResponse">
            <summary>multi-part mixed changeset separator</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpContentTransferEncoding">
            <summary>Content-Transfer-Encoding header for batch requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpVersionInBatching">
            <summary>Http Version in batching requests and response.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpAnyETag">
            <summary>To checks if the resource exists or not.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpWeakETagPrefix">
            <summary>Weak etags in HTTP must start with W/.
            Look in http://www.ietf.org/rfc/rfc2616.txt?number=2616 section 14.19 for more information.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpAccept">
            <summary>The mime type that client wants the response to be in.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpAcceptCharset">
            <summary>The character set the client wants the response to be in.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpCookie">
            <summary>The name of the Cookie HTTP header</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.HttpSlug">
            <summary>The Slug header name. Used by ATOM to hint the server on which MR is being POSTed.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeAny">
            <summary>MIME type for requesting any media type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationOctetStream">
            <summary>MIME type general binary bodies (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationAtom">
            <summary>MIME type for ATOM bodies (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationJsonODataMinimalMetadata">
            <summary>MIME type for JSON bodies in light mode with minimal metadata.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationJsonODataFullMetadata">
            <summary>MIME type for JSON bodies in light mode with full metadata.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationJsonODataNoMetadata">
            <summary>MIME type for JSON bodies in light mode with no metadata.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationJson">
            <summary>MIME type for JSON bodies (implies light in V3, verbose otherwise) (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationJsonODataVerbose">
            <summary>MIME type for JSON bodies in verbose mode (http://www.iana.org/assignments/media-types/application/).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationHttp">
            <summary>MIME type for batch requests - this mime type must be specified in CUD changesets or GET batch requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationXml">
            <summary>MIME type for XML bodies.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeMetadata">
            <summary>"application/xml", MIME type for metadata requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeApplicationType">
            <summary>'application' - MIME type for application types.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeJsonSubType">
            <summary>'json' - constant for MIME JSON subtypes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeXmlSubType">
            <summary>'xml' - constant for MIME xml subtypes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeODataParameterName">
            <summary>'odata' - parameter name for JSON MIME types.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeMultiPartMixed">
            <summary>MIME type for changeset multipart/mixed</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeTextPlain">
            <summary>MIME type for plain text bodies.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeTextType">
            <summary>'text' - MIME type for text subtypes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MimeTextXml">
            <summary>MIME type for XML bodies (deprecated).</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.BatchRequestContentTransferEncoding">
            <summary>Content-Transfer-Encoding value for batch requests.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Utf8Encoding">
            <summary>text for the utf8 encoding</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriHttpAbsolutePrefix">
            <summary>A prefix that turns an absolute-path URI into an absolute-URI.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriMetadataSegment">
            <summary>A segment name in a URI that indicates metadata is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriValueSegment">
            <summary>A segment name in a URI that indicates a plain primitive value is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriBatchSegment">
            <summary>A segment name in a URI that indicates metadata is being requested.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriLinkSegment">
            <summary>A segment name in a URI that indicates that this is a link operation.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriCountSegment">
            <summary>A segment name in a URI that indicates that this is a count operation.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriRowCountAllOption">
            <summary>A const value for the query parameter $inlinecount to set counting mode to inline</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriRowCountOffOption">
            <summary>A const value for the query parameter $inlinecount to set counting mode to none</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AnyMethodName">
            <summary>Uri method name for Enumerable.Any().</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AllMethodName">
            <summary>Uri method name for Enumerable.All().</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ImplicitFilterParameter">
            <summary>Implicit parameter "it" used for Queryable.Where lambda.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.WcfBinaryElementName">
            <summary>"Binary" - WCF element name for binary content in XML-wrapping streams.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNamespacePrefix">
            <summary> Schema Namespace prefix for atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomContentElementName">
            <summary>XML element name to mark content element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEntryElementName">
            <summary>XML element name to mark entry element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomFeedElementName">
            <summary>XML element name to mark feed element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomAuthorElementName">
            <summary>'author' - XML element name for ATOM 'author' element for entries.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomContributorElementName">
            <summary>'contributor' - XML element name for ATOM 'author' element for entries.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomCategoryElementName">
            <summary>'category' - XML element name for ATOM 'category' element for entries.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomLinkElementName">
            <summary>XML element name to mark link element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmContentKind">
            <summary>Type of content for syndication property which can be one of Plaintext, Html or XHtml</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmKeepInContent">
            <summary>Whether to keep the property value in the content section</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmNsPrefix">
            <summary>TargetNamespace prefix for non-syndication mapping</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmNsUri">
            <summary>TargetNamespace URI for non-syndication mapping</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmTargetPath">
            <summary>Target element or attribute name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MetadataAttributeEpmSourcePath">
            <summary>Source property name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndAuthorEmail">
            <summary>author/email</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndAuthorName">
            <summary>author/name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndAuthorUri">
            <summary>author/uri</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndPublished">
            <summary>published</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndRights">
            <summary>rights</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndSummary">
            <summary>summary</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndTitle">
            <summary>title</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomUpdatedElementName">
            <summary>'updated' - XML element name for ATOM 'updated' element for entries.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContributorEmail">
            <summary>contributor/email</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContributorName">
            <summary>contributor/name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContributorUri">
            <summary>contributor/uri</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndUpdated">
            <summary>updated</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContentKindPlaintext">
            <summary>Plaintext</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContentKindHtml">
            <summary>HTML</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.SyndContentKindXHtml">
            <summary>XHTML</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomHRefAttributeName">
            <summary>XML element name to mark href attribute element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomHRefLangAttributeName">
            <summary>XML attribute name to mark the hreflang attribute in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomSummaryElementName">
            <summary>XML element name to mark summary element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNameElementName">
            <summary>XML element name to mark author/name or contributor/name element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEmailElementName">
            <summary>XML element name to mark author/email or contributor/email element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomUriElementName">
            <summary>XML element name to mark author/uri or contributor/uri element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishedElementName">
            <summary>XML element name to mark published element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomRightsElementName">
            <summary>XML element name to mark rights element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingCollectionElementName">
            <summary>XML element name to mark 'collection' element in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingServiceElementName">
            <summary>XML element name to mark 'service' element in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingWorkspaceDefaultValue">
            <summary>XML value for a default workspace in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPublishingWorkspaceElementName">
            <summary>XML element name to mark 'workspace' element in APP.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomTitleElementName">
            <summary>XML element name to mark title element in Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomTypeAttributeName">
            <summary>XML attribute name to specify the type of the element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomSelfRelationAttributeValue">
            <summary> Atom link relation attribute value for self links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEditRelationAttributeValue">
            <summary> Atom link relation attribute value for edit links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEditMediaRelationAttributeValue">
            <summary> Atom link relation attribute value for edit-media links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomAlternateRelationAttributeValue">
            <summary>Link relation: alternate - refers to a substitute for this context.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomRelatedRelationAttributeValue">
            <summary>Link relation: related - identifies a related resource.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomEnclosureRelationAttributeValue">
            <summary>Link relation: enclosure - identifies a related resource that is potentially large and might require special handling.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomViaRelationAttributeValue">
            <summary>Link relation: via - identifies a resource that is the source of the information in the link's context.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomDescribedByRelationAttributeValue">
            <summary>Link relation: describedby - refers to a resource providing information about the link's context.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomServiceRelationAttributeValue">
            <summary>Link relation: service - indicates a URI that can be used to retrieve a service document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNullAttributeName">
            <summary> Atom attribute which indicates the null value for the element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomETagAttributeName">
            <summary> Atom attribute which indicates the etag value for the declaring entry element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomInlineElementName">
            <summary>'Inline' - wrapping element for inlined entry/feed content.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomPropertiesElementName">
            <summary>Element containing property values when 'content' is used for media link entries</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.RowCountElement">
            <summary>'count' element</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlCollectionItemElementName">
            <summary>'element', the XML element name for items in enumerations.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorElementName">
            <summary>XML element name for an error.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorCodeElementName">
            <summary>XML element name for an error code.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorInnerElementName">
            <summary>XML element name for the inner error details.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorInternalExceptionElementName">
            <summary>XML element name for an internal exception.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorTypeElementName">
            <summary>XML element name for an exception type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorStackTraceElementName">
            <summary>XML element name for an exception stack trace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlErrorMessageElementName">
            <summary>XML element name for an error message.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlFalseLiteral">
            <summary>'false' literal, as used in XML.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlTrueLiteral">
            <summary>'true' literal, as used in XML.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlBaseAttributeName">
            <summary>XML attribute value to indicate the base URI for a document or element.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlLangAttributeName">
            <summary>'lang' XML attribute name for annotation language.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlSpaceAttributeName">
            <summary>XML attribute name for whitespace parsing control.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlSpacePreserveValue">
            <summary>XML attribute value to indicate whitespace should be preserved.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlBaseAttributeNameWithPrefix">
            <summary>XML attribute name to pass to the XMLReader.GetValue API to get the xml:base attribute value.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmV1Namespace">
            <summary> Schema Namespace For Edm.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmV1dot1Namespace">
            <summary> Schema Namespace For Edm 1.1.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmV1dot2Namespace">
            <summary> Schema Namespace For Edm 1.2.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmAnnotationsNamespace">
            <summary>XML namespace for annotations in EDM such as 'StoreGeneratedPattern' </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebNamespace">
            <summary>XML namespace for data services.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMetadataNamespace">
            <summary>XML namespace for data service annotations.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebRelatedNamespace">
            <summary>XML namespace for data service links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebRelatedLinkNamespace">
            <summary>XML namespace for data service related $links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMediaResourceNamespace">
            <summary>XML namespace for data service named media resources.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMediaResourceEditNamespace">
            <summary>XML namespace for data service edit-media link for named media resources.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebSchemeNamespace">
            <summary>ATOM Scheme Namespace For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AppNamespace">
            <summary>Schema Namespace for Atom Publishing Protocol.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AtomNamespace">
            <summary> Schema Namespace For Atom.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlnsNamespacePrefix">
            <summary> Schema Namespace prefix For xmlns.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlNamespacePrefix">
            <summary> Schema Namespace prefix For xml.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebNamespacePrefix">
            <summary> Schema Namespace Prefix For DataWeb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMetadataNamespacePrefix">
            <summary>'adsm' - namespace prefix for DataWebMetadataNamespace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.XmlNamespacesNamespace">
            <summary>'http://www.w3.org/2000/xmlns/' - namespace for namespace declarations.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxNamespace">
            <summary> Edmx namespace in metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxNamespacePrefix">
            <summary> Prefix for Edmx Namespace in metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.IanaLinkRelationsNamespace">
            <summary>IANA link relations namespace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EmptyNamespace">
            <summary>The empty namespace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Association">
            <summary> Association Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.AssociationSet">
            <summary> AssociationSet Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ComplexType">
            <summary> ComplexType Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Dependent">
            <summary> Dependent Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmCollectionTypeName">
            <summary>The name of the EDM collection type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ActualEdmType">
            <summary>
            Attribute name used to indicate the real type of an EDM property or parameter, in cases where it needs to be different
            from the Type attribute of the Property or Parameter element. This is used to support collection types and binary keys,
            which are incompatible with EDM 1.1, which we are currently using for validation purposes.
            This attribute is inserted into the CSDL in memory while codegen is processing properties that require special
            type handling and should only be used in that scenario. This is not a real EDM or Data Services attribute.
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmTypeRefElementName">
            <summary>TypeRef element name in CSDL document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmEntitySetAttributeName">
            <summary>EntitySet attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmEntitySetPathAttributeName">
            <summary>EntitySetPath attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmBindableAttributeName">
            <summary>ExtensionMethod attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmComposableAttributeName">
            <summary>Composable attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmSideEffectingAttributeName">
            <summary>SideEffecting attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmFunctionImportElementName">
            <summary>FunctionImport element name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmModeAttributeName">
            <summary>Mode attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmModeInValue">
            <summary>Mode attribute value for 'in' direction in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmParameterElementName">
            <summary>Parameter element name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmReturnTypeAttributeName">
            <summary>ReturnType attribute name in CSDL documents.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ActualReturnTypeAttributeName">
            <summary>
            Attribute name used to indicate the real type of an EDM function import return type, in cases where it needs to be different
            from the ReturnType attribute of the function import element. This is used to support special primitive types,
            which are incompatible with EDM 1.1, which we are currently using for validation purposes.
            This attribute is inserted into the CSDL in memory while codegen is processing function imports that require special
            type handling and should only be used in that scenario. This is not a real EDM or Data Services attribute.
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.End">
            <summary> End Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntityType">
            <summary> EntityType Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntityContainer">
            <summary> EntityContainer Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Key">
            <summary> Key Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.NavigationProperty">
            <summary> NavigationProperty Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.OnDelete">
            <summary> OnDelete Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Principal">
            <summary> Principal Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Property">
            <summary> Property Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.PropertyRef">
            <summary> PropetyRef Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ReferentialConstraint">
            <summary> ReferentialConstraint Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Role">
            <summary> Role Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Schema">
            <summary> Schema Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxElement">
            <summary> Edmx Element Name in the metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxDataServicesElement">
            <summary> Edmx DataServices Element Name in the metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxVersion">
            <summary>Version attribute for the root Edmx Element in the metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmxVersionValue">
            <summary>Value of the version attribute in the root edmx element in metadata document.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ActionElementName">
            <summary>Element name for m:action.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.FunctionElementName">
            <summary>Element name for m:function</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ActionMetadataAttributeName">
            <summary>maps to m:action|m:function\@metadata</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ActionTargetAttributeName">
            <summary>maps to m:action|m:function\@target</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ActionTitleAttributeName">
            <summary>maps to m:action|m:function\@title</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.BaseType">
            <summary> BaseType attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntitySet">
            <summary> EntitySet attribute and Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EntitySetPath">
            <summary> EntitySetPath attribute and Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.FromRole">
            <summary> FromRole attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Abstract">
            <summary>Abstract attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Multiplicity">
            <summary>Multiplicity attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Name">
            <summary>Name attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Namespace">
            <summary>Namespace attribute Element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ToRole">
            <summary>ToRole attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Type">
            <summary>Type attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Relationship">
            <summary>Relationship attribute Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Using">
            <summary>Using element Name in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.Many">
            <summary>Value for Many multiplicity in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.One">
            <summary>Value for One multiplicity in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ZeroOrOne">
            <summary>Value for ZeroOrOne multiplicity in csdl.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlNullableAttributeName">
            <summary>Nullable facet name in CSDL.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlPrecisionAttributeName">
            <summary>The attribute name of the 'Precision' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlScaleAttributeName">
            <summary>The attribute name of the 'Scale' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlMaxLengthAttributeName">
            <summary>The attribute name of the 'MaxLength' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlFixedLengthAttributeName">
            <summary>The attribute name of the 'FixedLength' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlUnicodeAttributeName">
            <summary>The attribute name of the 'Unicode' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlCollationAttributeName">
            <summary>The attribute name of the 'Collation' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlSridAttributeName">
            <summary>The attribute name of the 'SRID' facet.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlConcurrencyAttributeName">
            <summary>Name of the concurrency attribute.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlDefaultValueAttributeName">
            <summary>Name of the default value attribute.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlMaxLengthAttributeMaxValue">
            <summary>The special value for the 'MaxLength' facet to indicate that it has the max length.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlStoreGeneratedPattern">
            <summary>The attribute name of the 'StoreGeneratedPattern' annotation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlStoreGeneratedPatternComputed">
            <summary>The 'Computed' value for the 'StoreGeneratedPattern' annotation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CsdlStoreGeneratedPatternIdentity">
            <summary>The 'Identity' value for the 'StoreGeneratedPattern' annotation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebMimeTypeAttributeName">
            <summary>'MimeType' - attribute name for property MIME type attributes.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebOpenTypeAttributeName">
            <summary>'OpenType' - attribute name to indicate a type is an OpenType property.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebAccessHasStreamAttribute">
            <summary>'HasStream' - attribute name to indicate a type has a default stream property.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataWebAccessDefaultStreamPropertyValue">
            <summary>'true' - attribute value to indicate a type has a default stream property.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.IsDefaultEntityContainerAttribute">
            <summary>Attribute to indicate whether this is a default entity container or not.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.ServiceOperationHttpMethodName">
            <summary>Attribute name in the csdl to indicate whether the service operation must be called using POST or GET verb.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.UriElementName">
            <summary>uri element name for link bind/unbind operations</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.NextElementName">
            <summary>next element name for link paging</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LinkCollectionElementName">
            <summary>XML element name for writing out collection of links.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonError">
            <summary>JSON property name for an error.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorCode">
            <summary>JSON property name for an error code.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorInner">
            <summary>JSON property name for the inner error details.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorInternalException">
            <summary>JSON property name for an internal exception.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorMessage">
            <summary>JSON property name for an error message.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorStackTrace">
            <summary>JSON property name for an exception stack trace.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorType">
            <summary>JSON property name for an exception type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.JsonErrorValue">
            <summary>JSON property name for an error message value.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmNamespace">
            <summary>namespace for edm primitive types.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmBinaryTypeName">
            <summary>edm binary primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmBooleanTypeName">
            <summary>edm boolean primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmByteTypeName">
            <summary>edm byte primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDateTimeTypeName">
            <summary>edm datetime primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDecimalTypeName">
            <summary>edm decimal primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDoubleTypeName">
            <summary>edm double primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGuidTypeName">
            <summary>edm guid primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmSingleTypeName">
            <summary>edm single primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmSByteTypeName">
            <summary>edm sbyte primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmInt16TypeName">
            <summary>edm int16 primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmInt32TypeName">
            <summary>edm int32 primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmInt64TypeName">
            <summary>edm int64 primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmStringTypeName">
            <summary>edm string primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmStreamTypeName">
            <summary>edm stream primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.CollectionTypeQualifier">
            <summary>edm string indicating that the value may be collection.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeographyTypeName">
            <summary>Edm Geography type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmPointTypeName">
            <summary>Edm Geodetic point type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmLineStringTypeName">
            <summary>Edm Geodetic linestring type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmPolygonTypeName">
            <summary>Represents a geography Polygon type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeographyCollectionTypeName">
            <summary>Represents a geography GeomCollection type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmMultiPolygonTypeName">
            <summary>Represents a geography MultiPolygon type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmMultiLineStringTypeName">
            <summary>Represents a geography MultiLineString type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmMultiPointTypeName">
            <summary>Represents a geography MultiPoint type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryTypeName">
            <summary>Represents an arbitrary Geometry type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryPointTypeName">
            <summary>Represents a geometry Point type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryLineStringTypeName">
            <summary>Represents a geometry LineString type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryPolygonTypeName">
            <summary>Represents a geometry Polygon type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryCollectionTypeName">
            <summary>Represents a geometry GeomCollection type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryMultiPolygonTypeName">
            <summary>Represents a geometry MultiPolygon type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryMultiLineStringTypeName">
            <summary>Represents a geometry MultiLineString type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmGeometryMultiPointTypeName">
            <summary>Represents a geometry MultiPoint type.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmTimeTypeName">
            <summary>edm string primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.EdmDateTimeOffsetTypeName">
            <summary>edm string primitive type name</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersion1Dot0">
            <summary>'1.0' - the version 1.0 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersion2Dot0">
            <summary>'2.0' - the version 2.0 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersion3Dot0">
            <summary>'3.0' - the version 3.0 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersionCurrent">
            <summary>'2.0;' - the text for the current server version text.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersionCurrentMajor">
            <summary>1 - the version 1 text for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.DataServiceVersionCurrentMinor">
            <summary>0 - the current minor version for a data service.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixBinary">
            <summary>'binary' constant prefixed to binary literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixDateTime">
            <summary>'datetime' constant prefixed to datetime literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixGuid">
            <summary>'guid' constant prefixed to guid literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixGeography">
            <summary>'geography' constant prefixed to geography literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixGeometry">
            <summary>'geometry' constant prefixed to geometry literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixDateTimeOffset">
            <summary>'guid' constant prefixed to guid literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixTime">
            <summary>'guid' constant prefixed to guid literals.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralPrefixShortBinary">
            <summary>'X': Prefix to binary type string representation.</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralSuffixDecimal">
            <summary>'M': Suffix for decimal type's string representation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralSuffixInt64">
            <summary>'L': Suffix for long (int64) type's string representation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralSuffixSingle">
            <summary>'f': Suffix for float (single) type's string representation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.LiteralSuffixDouble">
            <summary>'D': Suffix for double (Real) type's string representation</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.NullLiteralInETag">
            <summary>null liternal that needs to be return in ETag value when the value is null</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MicrosoftDataServicesRequestUri">
            <summary>Incoming message property name for the original reqeust uri</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.MicrosoftDataServicesRootUri">
            <summary>Incoming message property name for the original root service uri</summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GeoRssNamespace">
            <summary>
            GeoRss namespace
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GeoRssPrefix">
            <summary>
            The "georss" prefix
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GmlNamespace">
            <summary>
            Gml Namespace
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GmlPrefix">
            <summary>
            Gml Prefix
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GeoRssWhere">
            <summary>
            Embedded Gml tag inside Georss
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GeoRssPoint">
            <summary>
            GeoRss representation of a point
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GeoRssLine">
            <summary>
            GeoRss representation of a line
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GmlPosition">
            <summary>
            Gml representation of a point
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GmlPositionList">
            <summary>
            Gml representation of a point array
            </summary>
        </member>
        <member name="F:System.Data.Services.XmlConstants.GmlLineString">
            <summary>
            Gml representation of a linestring
            </summary>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCache`1">
            <summary>
            Use this class to cache metadata through ProviderMetadataCacheItem instances.
            </summary>
            <typeparam name="T">Type of the item to be cached.</typeparam>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache`1.cache">
            <summary>AppDomain-wide cache for metadata items.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache`1.cacheLock">
            <summary>Reader/writer lock for AppDomain <see cref="F:System.Data.Services.Caching.MetadataCache`1.cache"/>.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache`1.AddCacheItem(System.Type,System.Object,`0)">
            <summary>Adds a new cache item, and returns the item that is put in the cache.</summary>
            <param name="serviceType">Type of service with metadata being cached.</param>
            <param name="dataContextInstance">
            Data context instance being cached, possibly segmenting the cache 
            space for <paramref name="serviceType"/>.
            </param>
            <param name="item">Item being added.</param>
            <returns>The item being put in the cache (possibly an existing one).</returns>
            <remarks>This method is thread-safe but not re-entrant.</remarks>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache`1.TryLookup(System.Type,System.Object)">
            <summary>Tries to look up metadata for the specifed service type and context instance.</summary>
            <param name="serviceType">Type of service with metadata being cached.</param>
            <param name="dataContextInstance">
            Data context instance being cached, possibly segmenting the cache 
            space for <paramref name="serviceType"/>.
            </param>
            <returns>The cached metadata item, if one exists.</returns>
            <remarks>This method is thread-safe but not re-entrant.</remarks>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey">
            <summary>This type is used as the key in the metadata cache.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.dataContextConnection">
            <summary>Connection string used to segment service type.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.hashCode">
            <summary>Hash code for this instance.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.serviceType">
            <summary>Service type.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.#ctor(System.Type,System.Data.Objects.ObjectContext)">
            <summary>Initializes a new MetadataCacheKey instance.</summary>
            <param name='serviceType'>Service type for key.</param>
            <param name='dataContextInstance'>Data context instace for key, possibly null.</param>
        </member>
        <member name="T:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.Comparer">
            <summary>Comparer for metadata cache keys.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.Comparer.Equals(System.Data.Services.Caching.MetadataCache{`0}.MetadataCacheKey,System.Data.Services.Caching.MetadataCache{`0}.MetadataCacheKey)">
            <summary>Compares the specified keys.</summary>
            <param name="x">First key.</param>
            <param name="y">Second key.</param>
            <returns>true if <paramref name="x"/> equals <paramref name="y"/>, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Caching.MetadataCache`1.MetadataCacheKey.Comparer.GetHashCode(System.Data.Services.Caching.MetadataCache{`0}.MetadataCacheKey)">
            <summary>Gets the hash code for the object.</summary>
            <param name="obj">Object.</param>
            <returns>The hash code for this key.</returns>
        </member>
        <member name="T:System.Data.Services.Caching.ProviderMetadataCacheItem">
            <summary>Use this class to cache metadata for providers.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ProviderMetadataCacheItem.entitySets">
            <summary> list of top level entity sets</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ProviderMetadataCacheItem.serviceOperations">
            <summary>Collection of service operations, keyed by name.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ProviderMetadataCacheItem.type">
            <summary>Target type for the data provider.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ProviderMetadataCacheItem.typeCache">
            <summary>Cache of resource properties per type.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ProviderMetadataCacheItem.childTypesCache">
            <summary>Cache of immediate derived types per type.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ProviderMetadataCacheItem.queryRootCache">
            <summary>Cache of IL's instructions for getting the query root for sets.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.ProviderMetadataCacheItem.#ctor(System.Type)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Caching.ProviderMetadataCacheItem"/> instance.</summary>
            <param name="type">Type of data context for which metadata will be generated.</param>
        </member>
        <member name="M:System.Data.Services.Caching.ProviderMetadataCacheItem.TryGetResourceType(System.Type)">
            <summary>
            Gets the ResourceType for the given CLR type.
            </summary>
            <param name="type">CLR type.</param>
            <returns>ResourceType instance for the given CLR type.</returns>
        </member>
        <member name="M:System.Data.Services.Caching.ProviderMetadataCacheItem.TryGetResourceTypeCacheItem(System.Type)">
            <summary>
            Gets the ResourceType for the given CLR type.
            </summary>
            <param name="type">CLR type.</param>
            <returns>ResourceType instance for the given CLR type.</returns>
        </member>
        <member name="M:System.Data.Services.Caching.ProviderMetadataCacheItem.AddResourceType(System.Type,System.Data.Services.Providers.ResourceType)">
            <summary>
            Adds the given ResourceType to the cache.
            </summary>
            <param name="type">CLR type.</param>
            <param name="resourceType">ResourceType instance.</param>
        </member>
        <member name="P:System.Data.Services.Caching.ProviderMetadataCacheItem.ServiceOperations">
            <summary>Collection of service operations, keyed by name.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.ProviderMetadataCacheItem.ResourceTypeCacheItems">
            <summary>Cache of ResourceTypeCacheItems which contains the ResourceType and its metadata.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.ProviderMetadataCacheItem.ChildTypesCache">
            <summary>Cache of immediate derived types per type.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.ProviderMetadataCacheItem.EntitySets">
            <summary> list of top level entity sets</summary>
        </member>
        <member name="P:System.Data.Services.Caching.ProviderMetadataCacheItem.Type">
            <summary>Target type for the data provider.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.ProviderMetadataCacheItem.QueryRootCache">
            <summary>Returns the cache of IL's instructions for getting the query root for sets.</summary>
        </member>
        <member name="T:System.Data.Services.Caching.ResourceTypeCacheItem">
            <summary>
            Class to cache information for the given resource type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Caching.ResourceTypeCacheItem.resourceType">
            <summary>ResourceType instance for which the metadata needs to be cached.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ResourceTypeCacheItem.resourcePropertyMetadataCache">
            <summary>Cache for storing the metadata about the property.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.ResourceTypeCacheItem.constructorDelegate">
            <summary>Constructor Delegate for the resource type.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.ResourceTypeCacheItem.#ctor(System.Data.Services.Providers.ResourceType)">
            <summary>
            Creates a new instance of ResourceTypeCacheItem.
            </summary>
            <param name="resourceType">ResourceType instance.</param>
        </member>
        <member name="M:System.Data.Services.Caching.ResourceTypeCacheItem.GetResourcePropertyCacheItem(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the cache item for the given property.
            </summary>
            <param name="property">ResourceProperty instance.</param>
            <returns>the cache item for the given property.</returns>
        </member>
        <member name="M:System.Data.Services.Caching.ResourceTypeCacheItem.AddResourcePropertyCacheItem(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Caching.ResourcePropertyCacheItem)">
            <summary>
            Add the given property metadata to the cache.
            </summary>
            <param name="property">ResourceProperty instance.</param>
            <param name="propertyCacheItem">Cache item containing the metadata about the property.</param>
        </member>
        <member name="P:System.Data.Services.Caching.ResourceTypeCacheItem.ConstructorDelegate">
            <summary>Cached delegate to create a new instance of this type.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.ResourceTypeCacheItem.ResourceType">
            <summary>Gets the instance of ResourceType whose metadata is getting cached in this cache item.</summary>
        </member>
        <member name="T:System.Data.Services.Caching.ResourcePropertyCacheItem">
            <summary>
            Class for storing metadata for a given ResourceProperty.
            </summary>
        </member>
        <member name="F:System.Data.Services.Caching.ResourcePropertyCacheItem.propertyInfo">
            <summary>PropertyInfo instance for the given ResourceProperty.</summary>
        </member>
        <member name="M:System.Data.Services.Caching.ResourcePropertyCacheItem.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Creates a new instance of ResourcePropertyCacheItem.
            </summary>
            <param name="propertyInfo">PropertyInfo instance for the given ResourceProperty.</param>
        </member>
        <member name="P:System.Data.Services.Caching.ResourcePropertyCacheItem.PropertyInfo">
            <summary>
            Returns PropertyInfo instance for the given ResourceProperty.
            </summary>
        </member>
        <member name="T:System.Data.Services.Caching.DataServiceCacheItem">
            <summary>Use this class to cache data service information (configuration + metadata for builtin providers).</summary>
        </member>
        <member name="F:System.Data.Services.Caching.DataServiceCacheItem.configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="F:System.Data.Services.Caching.DataServiceCacheItem.staticConfiguration">
            <summary>
            Service configuration information which is static such as query/change interceptors.
            </summary>
        </member>
        <member name="F:System.Data.Services.Caching.DataServiceCacheItem.visibleTypeCache">
            <summary>
            Keep track of the calculated visibility of resource types.
            </summary>
        </member>
        <member name="F:System.Data.Services.Caching.DataServiceCacheItem.resourceSetWrapperCache">
            <summary>
            Maps resource set names to ResourceSetWrappers.
            </summary>
        </member>
        <member name="F:System.Data.Services.Caching.DataServiceCacheItem.resourceAssociationSetCache">
            <summary>
            Maps names to ResourceAssociationSets.
            </summary>
        </member>
        <member name="M:System.Data.Services.Caching.DataServiceCacheItem.#ctor(System.Data.Services.DataServiceConfiguration,System.Data.Services.DataServiceStaticConfiguration)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Caching.ProviderMetadataCacheItem"/> instance.</summary>
            <param name="dataServiceConfiguration">IDataServiceConfiguration instance containing all the configuration data.</param>
            <param name="staticConfiguration">Static configuration information which includes query/change interceptors.</param>
        </member>
        <member name="P:System.Data.Services.Caching.DataServiceCacheItem.Configuration">
            <summary>Service configuration information.</summary>
        </member>
        <member name="P:System.Data.Services.Caching.DataServiceCacheItem.StaticConfiguration">
            <summary>
            Static configuration information.
            </summary>
        </member>
        <member name="P:System.Data.Services.Caching.DataServiceCacheItem.VisibleTypeCache">
            <summary>
            Keep track of the calculated visibility of resource types.
            </summary>
        </member>
        <member name="P:System.Data.Services.Caching.DataServiceCacheItem.ResourceSetWrapperCache">
            <summary>
            Maps resource set names to ResourceSetWrappers.
            </summary>
        </member>
        <member name="P:System.Data.Services.Caching.DataServiceCacheItem.ResourceAssociationSetCache">
            <summary>
            Maps names to ResourceAssociationSets.
            </summary>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionConstants">
            <summary>This type provides constants used in Astoria expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordAdd">
            <summary>"add" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordAnd">
            <summary>"and" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordAscending">
            <summary>"asc" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordDescending">
            <summary>"desc" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordDivide">
            <summary>"div" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordEqual">
            <summary>"eq" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordFalse">
            <summary>"false" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordGreaterThan">
            <summary>"gt" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordGreaterThanOrEqual">
            <summary>"ge" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordLessThan">
            <summary>"lt" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordLessThanOrEqual">
            <summary>"le" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordModulo">
            <summary>"mod" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordMultiply">
            <summary>"mul" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordNot">
            <summary>"not" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordNotEqual">
            <summary>"ne" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordNull">
            <summary>"null" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordOr">
            <summary>"or" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordSub">
            <summary>"sub" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.KeywordTrue">
            <summary>"true" keyword for expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.InfinityLiteral">
            <summary>'INF' literal, as used in XML for infinity.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionConstants.NaNLiteral">
            <summary>'NaN' literal, as used in XML for not-a-number values.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionLexer">
            <summary>Use this class to parse an expression in the Astoria URI format.</summary>
            <remarks>
            Literals (non-normative "handy" reference - see spec for correct expression):
            Null        null
            Boolean     true | false
            Int32       (digit+)
            Int64       (digit+)(L|l)
            Decimal     (digit+ ['.' digit+])(M|m)
            Float       (digit+ ['.' digit+][e|E [+|-] digit+)(f|F)
            Double      (digit+ ['.' digit+][e|E [+|-] digit+)
            String      "'" .* "'"
            DateTime    datetime"'"dddd-dd-dd[T|' ']dd:mm[ss[.fffffff]]"'"
            Binary      (binary|X)'digit*'
            GUID        guid'digit*'
            </remarks>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.AdditionalUnicodeCategoriesForIdentifier">
            <summary>
            For an identifier, EMD supports chars that match the regex  [\p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Lm}\p{Nl}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\p{Cf}]
            IsLetterOrDigit covers Ll, Lu, Lt, Lo, Lm, Nd, this set covers the rest 
            </summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.text">
            <summary>Text being parsed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.textLen">
            <summary>Length of text being parsed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.textPos">
            <summary>Position on text being parsed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.ch">
            <summary>Character being processed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.token">
            <summary>Token being processed.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionLexer.ignoreWhitespace">
            <summary>Lexer ignores whitespace</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.#ctor(System.String)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.ExpressionLexer"/>.</summary>
            <param name="expression">Expression to parse.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.NextToken">
            <summary>Reads the next token, skipping whitespace as necessary, advancing the Lexer.</summary>
            <remarks>Throws on error.</remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ReadDottedIdentifier">
            <summary>
            Starting from an identifier, reads a sequence of dots and 
            identifiers, and returns the text for it, with whitespace 
            stripped.
            </summary>
            <returns>The dotted identifier starting at the current identifie.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ReadDottedIdentifier(System.Boolean)">
            <summary>
            Starting from an identifier, reads a sequence of dots and identifiers, 
            and can end in a star, and returns the text for it, with whitespace 
            stripped.
            Ex: identifier1.identifier2, identifier1.*, etc.
            </summary>
            <param name="allowEndWithDotStar">If true, the dotted identifier may end in .*; if false, the dotted identifier must not end in *.</param>
            <returns>The dotted identifier starting at the current identifier.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.PeekNextToken">
            <summary>Returns the next token without advancing the lexer.</summary>
            <returns>The next token.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ExpandIdentifierAsFunction">
            <summary>
            Check whether the current identifier is a function. If so, expand the token text to the function signature
            </summary>
            <returns>True if the current identifier is a function call</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ValidateToken(System.Data.Services.Parsing.ExpressionTokenKind)">
            <summary>Validates the current token is of the specified kind.</summary>
            <param name="t">Expected token kind.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseError(System.String)">
            <summary>Creates an exception for a parse error.</summary>
            <param name="message">Message text.</param>
            <returns>A new Exception.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.NextTokenImplementation">
            <summary>Reads the next token, skipping whitespace as necessary.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ExpandWhenMatch(System.Data.Services.Parsing.ExpressionTokenKind)">
            <summary>
            Expand the token selection if the next token matches the input token
            </summary>
            <param name="id">the list of token id to match</param>
            <returns>true if matched</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.HandleTypePrefixedLiterals">
            <summary>Handles lexemes that are formed by an identifier followed by a quoted string.</summary>
            <remarks>This method modified the token field as necessary.</remarks>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.NextChar">
            <summary>Advanced to the next character.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseFromDigit">
            <summary>Parses a token that starts with a digit.</summary>
            <returns>The kind of token recognized.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseWhitespace">
            <summary>
            Parses white spaces
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ParseIdentifier">
            <summary>Parses an identifier by advancing the current character.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.SetTextPos(System.Int32)">
            <summary>Sets the text position.</summary>
            <param name="pos">New text position.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionLexer.ValidateDigit">
            <summary>Validates the current character is a digit.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.CurrentToken">
            <summary>Token being processed.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.ExpressionText">
            <summary>Text being parsed.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.IsValidStartingCharForIdentifier">
            <summary>
            Is the current char a valid starting char for an identifier.
            Valid starting chars for identifier include all that are supported by EDM ([\p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Lm}\p{Nl}]) and '_'.
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionLexer.IsValidNonStartingCharForIdentifier">
            <summary>
            Is the current char a valid non-starting char for an identifier.
            Valid non-starting chars for identifier include all that are supported 
            by EDM  [\p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Lm}\p{Nl}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\p{Cf}]. 
            This list includes '_', which is ConnectorPunctuation (Pc)
            </summary>
        </member>
        <member name="T:System.Data.Services.Parsing.FunctionDescription">
            <summary>Use this class to represent a system function for Astoria expressions.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.FunctionNameCast">
            <summary>Function name for type casts.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.FunctionNameIsOf">
            <summary>Function name for type checks.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.FunctionNameClrStringReplace">
            <summary>CLR function name for replace.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.member">
            <summary>CLR member for property or method invocation.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.name">
            <summary>Function name.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.parameterTypes">
            <summary>Parameter types for method invocation.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.FunctionDescription.conversionFunction">
            <summary>Conversion to expression for this function.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.#ctor(System.Reflection.MemberInfo,System.Type[])">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionDescription"/>.</summary>
            <param name="member">CLR member for property or method invocation.</param>
            <param name="parameterTypes">Parameter types for method invocation.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.#ctor(System.String,System.Type[],System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[],System.Linq.Expressions.Expression})">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionDescription"/>.</summary>
            <param name="name">Name for conversion function.</param>
            <param name="parameterTypes">Parameter types for method invocation.</param>
            <param name="conversionFunction">Conversion to expression for this function.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.#ctor(System.Reflection.MemberInfo,System.Type[],System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[],System.Linq.Expressions.Expression},System.String)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Parsing.FunctionDescription"/>.</summary>
            <param name="member">CLR member for property or method invocation.</param>
            <param name="parameterTypes">Parameter types for method invocation.</param>
            <param name="conversionFunction">Conversion to expression for this function.</param>
            <param name="name">Name for conversion function.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.InstanceMethodConversionFunction(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs an instance method invocation.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for method invocation; first one should be the target 'this'.</param>
            <returns>A new expression with the method invocation.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.StaticMethodConversionFunction(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a static method invocation.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for method invocation.</param>
            <returns>A new expression with the method invocation.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.InstancePropertyConversionFunction(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs an instance property access.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Argument for property access; instance.</param>
            <returns>A new expression with the property access.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.InvokeOpenTypeMethod(System.Linq.Expressions.Expression[])">
            <summary>
            Invoke the open typed method for this function.
            </summary>
            <param name="arguments">list of parameters to pass to the late bound method.</param>
            <returns>A new expression with the late bound function</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BuildSignatureList(System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Parsing.FunctionDescription})">
            <summary>Builds a list of function signatures.</summary>
            <param name="name">Function name.</param>
            <param name="descriptions">Function descriptions.</param>
            <returns>A string with ';'-separated list of function signatures.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.CreateFunctions">
            <summary>Creates and populates a dictionary of system functions.</summary>
            <returns>A new dictionary of functions.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.SubstringOf(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Transforms a URI-style "substringof(a,b)" function into "a.contains(b)".</summary>
            <param name="target">Target of query; not used.</param>
            <param name="arguments">Arguments to function.</param>
            <returns>The conversion for this method.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.UnaryIsOf(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a type check for the "it" expression.</summary>
            <param name="target">"it" expression.</param>
            <param name="arguments">Argument for type check; type.</param>
            <returns>A new expression with the type check.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BinaryIsOf(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a type check for a given expression.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for type check; instance and type.</param>
            <returns>A new expression with the type check.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.UnaryIsOfResourceType(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a type check for the "it" expression.</summary>
            <param name="target">"it" expression.</param>
            <param name="arguments">Argument for type check; type.</param>
            <returns>A new expression with the type check.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BinaryIsOfResourceType(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a type check for a given expression.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for type check; instance and resource type.</param>
            <returns>A new expression with the type check.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.UnaryCast(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a cast for the "it" expression.</summary>
            <param name="target">"it" expression.</param>
            <param name="arguments">Argument for cast; type.</param>
            <returns>A new expression with the cast.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BinaryCast(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a cast for a given expression.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for cast; instance and type.</param>
            <returns>A new expression with the cast.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.UnaryCastResourceType(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a cast for the "it" expression.</summary>
            <param name="target">"it" expression.</param>
            <param name="arguments">Argument for cast; type.</param>
            <returns>A new expression with the cast.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.BinaryCastResourceType(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>Performs a cast for a given expression.</summary>
            <param name="target">"it" expression; unused by this function.</param>
            <param name="arguments">Arguments for cast; instance and type.</param>
            <returns>A new expression with the cast.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.CreateFunctionDescription(System.Type,System.Boolean,System.Boolean,System.String,System.Type[])">
            <summary>Creates a new function description for a method or property.</summary>
            <param name="targetType">Type on which property or method is declared.</param>
            <param name="instance">Whether an instance member is looked for.</param>
            <param name="method">Whether a method (rather than a property) is looked for.</param>
            <param name="name">Name of member.</param>
            <param name="parameterTypes">Parameter types.</param>
            <returns>A new function description.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.StringInstanceFunction(System.String,System.Type[])">
            <summary>Creates a description for a string instance method.</summary>
            <param name="name">Name of method to look up.</param>
            <param name="parameterTypes">Parameter types to match.</param>
            <returns>A new function description.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.CreatePropertyBasedFunction(System.Type,System.String)">
            <summary>Creates an instance of function description for the property on the given type.</summary>
            <param name="type">Type on which the property is declared on.</param>
            <param name="name">Name of property to look up.</param>
            <returns>an instance of function description.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.FunctionDescription.MathFunctionArray(System.String)">
            <summary>Creates an array of function description for math method with decimal and double overloads.</summary>
            <param name="name">Name of method to look up.</param>
            <returns>A new function description array.</returns>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.ConversionFunction">
            <summary>Conversion to expression for this function.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.IsTypeCheckOrCast">
            <summary>Gets a value indicating whether this function is a type check or cast.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.IsTypeCast">
            <summary>Gets a value indicating whether this function is a type cast.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.IsReplace">
            <summary>
            Returns true if the function is a Replace function, otherwise returns false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.RequiresNullPropagation">
            <summary>Gets a value indicating whether this function requires null propagation on its parameters.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.FunctionDescription.ParameterTypes">
            <summary>Parameter types for method invocation.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures">
            <summary>This class provides inner types with operation signatures.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures">
            <summary>Signatures for logical operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures.F(System.Boolean,System.Boolean)">
            <summary>Logical signatures for bool arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures.F(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Logical signatures for bool? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.ILogicalSignatures.F(System.Object,System.Object)">
            <summary>Logical signatures for object arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures">
            <summary>Signatures for arithmetic operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Int32,System.Int32)">
            <summary>Arithmetic signature for int arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Int64,System.Int64)">
            <summary>Arithmetic signature for long arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Single,System.Single)">
            <summary>Arithmetic signature for float arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Double,System.Double)">
            <summary>Arithmetic signature for double arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Decimal,System.Decimal)">
            <summary>Arithmetic signature for decimal arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Arithmetic signature for int? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>Arithmetic signature for long? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>Arithmetic signature for float? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>Arithmetic signature for double? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>Arithmetic signature for decimal? arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IArithmeticSignatures.F(System.Object,System.Object)">
            <summary>Arithmetic signature for object arguments.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures">
            <summary>Signatures for relational operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.String,System.String)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Boolean,System.Boolean)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Guid,System.Guid)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Char,System.Char)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.DateTime,System.DateTime)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.Char},System.Nullable{System.Char})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.TimeSpan,System.TimeSpan)">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IRelationalSignatures.F(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Relational operation signature.</summary>
            <param name="x">First argument.</param><param name="y">Second argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.INegationSignatures">
            <summary>Signatures for negation operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Int32)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Int64)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Single)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Double)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Decimal)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Int32})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Int64})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Single})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Double})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Nullable{System.Decimal})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INegationSignatures.F(System.Object)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.INotSignatures">
            <summary>Signatures for logical negation operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INotSignatures.F(System.Boolean)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INotSignatures.F(System.Nullable{System.Boolean})">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.INotSignatures.F(System.Object)">
            <summary>Negation operation signature.</summary>
            <param name="x">Argument.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures">
            <summary>Signatures for enumerable operations.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Where(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Any">
            <summary>Enumerable operation signature.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Any(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.All(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Count">
            <summary>Enumerable operation signature.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Count(System.Boolean)">
            <summary>Enumerable operation signature.</summary>
            <param name="predicate">Predicate.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Min(System.Object)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Max(System.Object)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Int32)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Int32})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Int64)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Int64})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Single)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Single})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Double)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Double})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Decimal)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Sum(System.Nullable{System.Decimal})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Int32)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Int32})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Int64)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Int64})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Single)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Single})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Double)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Double})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Decimal)">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="M:System.Data.Services.Parsing.OperationSignatures.IEnumerableSignatures.Average(System.Nullable{System.Decimal})">
            <summary>Enumerable operation signature.</summary>
            <param name="selector">Selector.</param>
        </member>
        <member name="T:System.Data.Services.Parsing.RequestQueryParser">
            <summary>
            This class provides static methods to parse query options and compose 
            them on an existing query.
            </summary>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.OrderBy(System.Linq.Expressions.Expression,System.Data.Services.Providers.OrderingInfo)">
            <summary>Sorts a query like a SQL ORDER BY clause does.</summary>
            <param name="source">Original source for query.</param>
            <param name="orderingInfo">Ordering definition to compose.</param>
            <returns>The composed query.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.RequestQueryParser.Where(System.Data.Services.IDataService,System.Data.Services.RequestDescription,System.Linq.Expressions.Expression,System.String)">
            <summary>Filters a query like a SQL WHERE clause does.</summary>
            <param name="service">Service with data and configuration.</param>
            <param name="requestDescription">RequestDescription instance containing information about the current request being parsed.</param>
            <param name="source">Original source for query expression.</param>
            <param name="predicate">Predicate to compose.</param>
            <returns>The composed query expression.</returns>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionToken">
            <summary>Use this class to represent a lexical token.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionToken.GreaterThan">
            <summary>Token representing gt keyword</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionToken.EqualsTo">
            <summary>Token representing eq keyword</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionToken.LessThan">
            <summary>Token representing lt keyword</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionToken.Kind">
            <summary>Kind of token.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionToken.Text">
            <summary>Token text.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionToken.Position">
            <summary>Position of token.</summary>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionToken.ToString">
            <summary>Provides a string representation of this token.</summary>
            <returns>String representation of this token.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionToken.GetIdentifier">
            <summary>Gets the current identifier text.</summary>
            <returns>The current identifier text.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionToken.IdentifierIs(System.String)">
            <summary>Checks that this token has the specified identifier.</summary>
            <param name="id">Identifier to check.</param>
            <returns>true if this is an identifier with the specified text.</returns>
        </member>
        <member name="M:System.Data.Services.Parsing.ExpressionToken.ValidateId(System.Data.Services.Parsing.ExpressionTokenKind)">
            <summary>Validates the current token is of the specified kind.</summary>
            <param name="t">Expected token kind.</param>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionToken.IsComparisonOperator">
            <summary>Checks whether this token is a comparison operator.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionToken.IsEqualityOperator">
            <summary>Checks whether this token is an equality operator.</summary>
        </member>
        <member name="P:System.Data.Services.Parsing.ExpressionToken.IsLiteral">
            <summary>Checks whether this token is a valid token for a literal.</summary>
        </member>
        <member name="T:System.Data.Services.Parsing.ExpressionTokenKind">
            <summary>Enumeration values for token kinds.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Unknown">
            <summary>Unknown.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.End">
            <summary>End of text.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Equal">
            <summary>'=' - equality character.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Identifier">
            <summary>Identifier.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.NullLiteral">
            <summary>NullLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.BooleanLiteral">
            <summary>BooleanLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.StringLiteral">
            <summary>StringLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.IntegerLiteral">
            <summary>IntegerLiteral.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Int64Literal">
            <summary>Int64 literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.SingleLiteral">
            <summary>Single literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.DateTimeLiteral">
            <summary>DateTime literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.DecimalLiteral">
            <summary>Decimal literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.DoubleLiteral">
            <summary>Double literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.GuidLiteral">
            <summary>GUID literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.BinaryLiteral">
            <summary>Binary literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.DateTimeOffsetLiteral">
            <summary>DateTimeOffset literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.TimeLiteral">
            <summary>Time literal.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Exclamation">
            <summary>Exclamation.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.OpenParen">
            <summary>OpenParen.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.CloseParen">
            <summary>CloseParen.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Comma">
            <summary>Comma.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Minus">
            <summary>Minus.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Slash">
            <summary>Slash.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Question">
            <summary>Question.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Dot">
            <summary>Dot.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Star">
            <summary>Star.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Colon">
            <summary>Colon.</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.Semicolon">
            <summary>Semicolon</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.GeographylLiteral">
            <summary>Spatial Literal</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.GeometryLiteral">
            <summary>Geometry Literal</summary>
        </member>
        <member name="F:System.Data.Services.Parsing.ExpressionTokenKind.WhiteSpace">
            <summary>Whitespace</summary>
        </member>
        <member name="T:System.Data.Services.WebConvert">
            <summary>Utilities for converting literals to/from strings.</summary>
        </member>
        <member name="M:System.Data.Services.WebConvert.IsCharHexDigit(System.Char)">
            <summary>Determines whether the specified character is a valid hexadecimal digit.</summary>
            <param name="c">Character to check.</param>
            <returns>true if <paramref name="c"/> is a valid hex digit; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebConvert.TryRemovePrefix(System.String,System.String@)">
            <summary>
            Tries to remove a literal <paramref name="prefix"/> from the specified <paramref name="text"/>.
            </summary>
            <param name="prefix">Prefix to remove; case insensitive.</param>
            <param name="text">Text to attempt to remove prefix from.</param>
            <returns>true if the prefix was found and removed; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.WebConvert.TryRemoveQuotes(System.String@)">
            <summary>Removes quotes from the single-quotes text.</summary>
            <param name="text">Text to remove quotes from.</param>
            <returns>Whether quotes were successfully removed.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.BaseServiceProvider">
            <summary>Provides a reflection-based provider implementation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.ResourceContainerBindingFlags">
            <summary>Bindings Flags to be used for reflection.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.dataServiceInstance">
            <summary>instance of the service to invoke service operations.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.dataSourceInstance">
            <summary>Instance from which data is provided.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.metadata">
            <summary>Metadata to be used by the service provider.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BaseServiceProvider.metadataRequiresInitialization">
            <summary>Internal providers need to know if the metadata was loaded from cache or initialized.
            Once we make the providers completely public, we can get rid of this.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.BaseServiceProvider instance.
            </summary>
            <param name="dataServiceInstance">data service instance.</param>
            <param name="dataSourceInstance">data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.System#IDisposable#Dispose">
            <summary>Releases the current data source object as necessary.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the container.
            </summary>
            <param name="container">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the container; null if there is 
            no container for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetResourceType(System.Object)">
            <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceType"/> for the specified <paramref name="resource"/>.</summary>
            <param name="resource">Instance to extract a <see cref="T:System.Data.Services.Providers.ResourceType"/> from.</param>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType"/> that describes this <paramref name="resource"/> in this provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the value of the strongly typed property.
            </summary>
            <param name="target">instance of the type declaring the property.</param>
            <param name="resourceProperty">resource property describing the property.</param>
            <returns>value for the property.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetOpenPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the open property.
            </summary>
            <param name="target">instance of the resource type.</param>
            <param name="propertyName">name of the property.</param>
            <returns>the value of the open property. If the property is not present, return null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Get the name and values of all the properties defined in the given instance of an open type.
            </summary>
            <param name="target">instance of a open type.</param>
            <returns>collection of name and values of all the open properties.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
            <summary>
            Invoke the given service operation instance.
            </summary>
            <param name="serviceOperation">metadata for the service operation to invoke.</param>
            <param name="parameters">list of parameters to pass to the service operation.</param>
            <returns>returns the result by the service operation instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            The method must return a collection of all the types derived from <paramref name="resourceType"/>.
            The collection returned should NOT include the type passed in as a parameter.
            An implementer of the interface should return null if the type does not have any derived types (ie. null == no derived types).
            </summary>
            <param name="resourceType">Resource to get derived resource types from.</param>
            <returns>
            A collection of resource types (<see cref="T:System.Data.Services.Providers.ResourceType"/>) derived from the specified <paramref name="resourceType"/> 
            or null if there no types derived from the specified <paramref name="resourceType"/> exist.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns true if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.
            </summary>
            <param name="resourceType">instance of the resource type in question.</param>
            <returns>True if <paramref name="resourceType"/> represents an Entity Type which has derived Entity Types, else false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)">
            <summary>Given the specified name, tries to find a resource set.</summary>
            <param name="name">Name of the resource set to resolve.</param>
            <param name="resourceSet">Returns the resolved resource set, null if no resource set for the given name was found.</param>
            <returns>True if resource set with the given name was found, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)">
            <summary>Given the specified name, tries to find a service operation.</summary>
            <param name="name">Name of the service operation to resolve.</param>
            <param name="serviceOperation">Returns the resolved service operation, null if no service operation was found for the given name.</param>
            <returns>True if we found the service operation for the given name, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)">
            <summary>Given the specified name, tries to find a type.</summary>
            <param name="name">Name of the type to resolve.</param>
            <param name="resourceType">Returns the resolved resource type, null if no resource type for the given name was found.</param>
            <returns>True if we found the resource type for the given name, false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the ResourceAssociationSet instance when given the source association end.
            </summary>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
            <returns>ResourceAssociationSet instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.FinalizeMetadataModel(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Called by the service to let the provider perform data model validation.
            </summary>
            <param name="knownTypes">Collection of known types.</param>
            <param name="useMetadataCacheOrder">Whether to use metadata cache ordering instead of default ordering.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetEntityContainerAnnotations(System.String)">
            <summary>
            Return the list of custom annotation for the entity container with the given name.
            </summary>
            <param name="entityContainerName">Name of the EntityContainer.</param>
            <returns>Return the list of custom annotation for the entity container with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetGenericInterfaceElementType(System.Type,System.Reflection.TypeFilter)">
            <summary>
            Returns the "T" in the IQueryable of T implementation of type.
            </summary>
            <param name="type">Type to check.</param>
            <param name="typeFilter">filter against which the type is checked</param>
            <returns>
            The element type for the generic IQueryable interface of the type,
            or null if it has none or if it's ambiguous.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetIQueryableElement(System.Type)">
            <summary>
            Returns the type of the IQueryable if the type implements IQueryable interface
            </summary>
            <param name="type">clr type on which IQueryable check needs to be performed.</param>
            <returns>Element type if the property type implements IQueryable, else returns null</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetIEnumerableElement(System.Type)">
            <summary>
            Returns the type of the IEnumerable if the type implements IEnumerable interface; null otherwise.
            </summary>
            <param name="type">type that needs to be checked</param>
            <returns>Element type if the type implements IEnumerable, else returns null</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.MethodHasSingleResult(System.Reflection.MethodInfo)">
            <summary>Checks whether the specified method has a SingleResultAttribute declared on it.</summary>
            <param name="method">Method to check.</param>
            <returns>
            true if the specified method (in its declared type or in an 
            ancestor declaring the type) has the SingleResultAttribute set.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetMimeTypeAttribute(System.Reflection.MemberInfo)">
            <summary>
            Gets the MIME type declared on the specified <paramref name="member"/>.
            </summary>
            <param name="member">Member to check.</param>
            <returns>
            The MIME type declared on the specified <paramref name="member"/>; null
            if no attribute is declared.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.LoadMetadata(System.Boolean)">
            <summary>
            Looks up the metadata in the cache. If not present in the cache, then loads metadata from the provider.
            </summary>
            <param name="skipServiceOperations">Should service operations be loaded.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryGetType(System.Data.Services.Caching.ProviderMetadataCacheItem,System.Type,System.Data.Services.Providers.ResourceType@)">
            <summary>
            Find the corresponding ResourceType for a given Type, primitive or not
            </summary>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="type">Type to look for</param>
            <param name="resourceType">Corresponding ResourceType, if found</param>
            <returns>True if type found, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetResourcePropertyCacheItem(System.Data.Services.Caching.ResourceTypeCacheItem,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the PropertyInfo for the given resource property
            </summary>
            <param name="resourceTypeCacheItem">Instance of ResourceTypeCacheItem containing the ResourceType instance.</param>
            <param name="resourceProperty">ResourceProperty instance.</param>
            <returns>PropertyInfo instance for the given ResourceProperty.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.CheckModelConsistency">
            <summary>Checks that the metadata model is consistent.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.Dispose(System.Boolean)">
            <summary>Releases the current data source object as necessary.</summary>
            <param name="disposing">
            Whether this method is called from an explicit call to Dispose by 
            the consumer, rather than during finalization.
            </param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadata(System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populates the metadata for the given provider
            </summary>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem in which metadata needs to be populated.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadataForUserSpecifiedTypes(System.Collections.Generic.IEnumerable{System.Type},System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populate types for metadata specified by the provider
            </summary>
            <param name="userSpecifiedTypes">list of types specified by the provider</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.PopulateMetadataForType(System.Type,System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populate metadata for the given clr type.
            </summary>
            <param name="type">type whose metadata needs to be loaded.</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <returns>resource type containing metadata for the given clr type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ResolveNonPrimitiveTypeCacheItem(System.Type)">
            <summary>
            Returns the resource type for the corresponding clr type.
            </summary>
            <param name="type">clrType whose corresponding resource type needs to be returned</param>
            <returns>Returns the resource type</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ResolveNonPrimitiveType(System.Type)">
            <summary>
            Returns the resource type for the corresponding clr type.
            </summary>
            <param name="type">clrType whose corresponding resource type needs to be returned</param>
            <returns>Returns the resource type</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetQueryRootDelegate(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Get the QueryRoot delegate for the given ResourceSet.
            </summary>
            <param name="resourceSet">ResourceSet instance.</param>
            <returns>the delegate for the given ResourceSet.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.IQueryableTypeFilter(System.Type,System.Object)">
            <summary>Filter callback for finding IQueryable implementations.</summary>
            <param name="m">Type to inspect.</param>
            <param name="filterCriteria">Filter criteria.</param>
            <returns>true if the specified type is an IQueryable of T; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.IEnumerableTypeFilter(System.Type,System.Object)">
            <summary>Filter callback for finding IEnumerable implementations.</summary>
            <param name="m">Type to inspect.</param>
            <param name="filterCriteria">Filter criteria.</param>
            <returns>true if the specified type is an IEnumerable of T; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.LoadServiceOperations">
            <summary>Adds service operations based on methods on the data service type.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ResolveResourceType(System.Type)">
            <summary>
            Given a CLR type, provides the corresponding <see cref="T:System.Data.Services.Providers.ResourceType"/> by either looking it up, or loading it's metadata.
            </summary>
            <param name="type">CLR type for which resource type is being looked up.</param>
            <returns><see cref="T:System.Data.Services.Providers.ResourceType"/> corresponding to <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.ResolveResourceSet(System.Data.Services.Providers.ResourceType,System.Reflection.MethodInfo)">
            <summary>
            Given a <see cref="T:System.Data.Services.Providers.ResourceType"/>, finds the corresponding <see cref="T:System.Data.Services.Providers.ResourceSet"/>.
            </summary>
            <param name="resourceType">Given resource type.</param>
            <param name="method">Method implementing service operation.</param>
            <returns><see cref="T:System.Data.Services.Providers.ResourceSet"/> corresponding to <paramref name="resourceType"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.MakeMetadataReadonly">
            <summary>Make all the metadata readonly</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.GetNonPrimitiveType(System.Type)">
            <summary>
            Returns the resource type for the corresponding clr type.
            If the given clr type is a collection, then resource type describes the element type of the collection.
            </summary>
            <param name="type">clrType whose corresponding resource type needs to be returned</param>
            <returns>Returns the resource type</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BaseServiceProvider.TryFindAnyContainerForType(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet@)">
            <summary>
            Looks for the first resource set that the specified <paramref name="type"/>
            could belong to.
            </summary>
            <param name="type">Type to look for.</param>
            <param name="container">After the method returns, the container to which the type could belong.</param>
            <returns>true if a container was found; false otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.CurrentDataSource">
            <summary>Returns the instance from which data is provided.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.IsNullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ResourceSets">
            <summary>Gets all available containers.</summary>
            <returns>An enumerable object with all available containers.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.Types">
            <summary>Returns all the types in this data source</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ServiceOperations">
            <summary>Returns all known service operations.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ProviderBehavior">
            <summary>
            Instance of provider behavior that defines the assumptions service should make
            about the provider.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.MetadataCacheItem">
            <summary>
            Gets the MetadataCacheItem containing all the cached metadata.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.ChildTypesCache">
            <summary>Cache of immediate derived types per type.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BaseServiceProvider.DataSourceType">
            <summary>Target type for the data provider </summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider">
            <summary>
            Provides a helper class to implement $expand functionality
            with filters by rewriting queries and implementing custom
            result enumerators.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.expanded">
            <summary>Whether all values are automatically expanded in the model.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.castToObject">
            <summary>Whether the provider of the IQueryable requires usage
            casts to System.Object when assigning to properties of that type/
            For example Linq to Entities requires us not to cast here as it only supports
            casting of primitive types. On the other hand Linq to Objects requires casting
            since otherwise it would generate wrong IL.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.provider">
            <summary>Full provider.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.#ctor(System.Data.Services.Providers.DataServiceProviderWrapper,System.Boolean,System.Boolean)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Providers.BasicExpandProvider"/> instance.</summary>
            <param name="provider">Full provider.</param>
            <param name="expanded">Whether all values are automatically expanded in the model.</param>
            <param name="castToObject">Whether the provider of the IQueryable requires usage
            casts to System.Object when assigning to properties of that type.
            For example Linq to Entities requires us not to cast here as it only supports
            casting of primitive types. On the other hand Linq to Objects requires casting
            since otherwise it would generate wrong IL.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplyProjections(System.Linq.IQueryable,System.Data.Services.Providers.RootProjectionNode,System.Boolean)">
            <summary>Applies expansions and projections to the specified <paramref name="source"/>.</summary>
            <param name="source"><see cref="T:System.Linq.IQueryable"/> object to expand and apply projections to.</param>
            <param name="rootProjectionNode">The root node of the tree which describes
                the projections and expansions to be applied to the <paramref name="source"/>.</param>
            <param name="epmRelevantForCurrentFormat">Determine if the current Response format needs epm values.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable"/> object, with the results including 
            the expansions and projections specified in <paramref name="rootProjectionNode"/>. 
            </returns>
            <remarks>
            The returned <see cref="T:System.Linq.IQueryable"/> may implement the <see cref="T:System.Data.Services.IExpandedResult"/> interface 
            to provide enumerable objects for the expansions; otherwise, the expanded
            information is expected to be found directly in the enumerated objects. If paging is 
            requested by providing a non-empty list in <paramref name="rootProjectionNode"/>.OrderingInfo then
            it is expected that the topmost <see cref="T:System.Data.Services.IExpandedResult"/> would have a $skiptoken property 
            which will be an <see cref="T:System.Data.Services.IExpandedResult"/> in itself and each of it's sub-properties will
            be named SkipTokenPropertyXX where XX represents numbers in increasing order starting from 0. Each of 
            SkipTokenPropertyXX properties will be used to generated the $skiptoken to support paging.
            If projections are required, the provider may choose to return <see cref="T:System.Linq.IQueryable"/>
            which returns instances of <see cref="T:System.Data.Services.IProjectedResult"/>. In that case property values are determined
            by calling the <see cref="M:System.Data.Services.IProjectedResult.GetProjectedPropertyValue(System.String)"/> method instead of
            accessing properties of the returned object directly.
            If both expansion and projections are required, the provider may choose to return <see cref="T:System.Linq.IQueryable"/>
            of <see cref="T:System.Data.Services.IExpandedResult"/> which in turn returns <see cref="T:System.Data.Services.IProjectedResult"/> from its
            <see cref="P:System.Data.Services.IExpandedResult.ExpandedElement"/> property.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplyOrderSkipTakeOnTopLevelResultAfterProjection(System.Linq.Expressions.Expression,System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Data.Services.Providers.BasicExpandProvider.ExpandNode)">
            <summary>
            Applies the ordering, skip and take on top level query result set before projections were applied
            </summary>
            <param name="queryExpression">Current query expression</param>
            <param name="orderingInfo">Top level ordering information</param>
            <param name="skipCount">Elements to skip</param>
            <param name="takeCount">Count of elements to return</param>
            <param name="root">The root <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> where we store information about the shape
            of projections of the root level.</param>
            <returns><paramref name="queryExpression"/> appended with OrderBy/ThenBy, Skip and Top expressions</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplyOrderSkipTakeOnTopLevelResultBeforeProjections(System.Linq.Expressions.Expression,System.Data.Services.Providers.OrderingInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applies the ordering, skip and take on top level query result set once projections where applied
            </summary>
            <param name="queryExpression">Current query expression</param>
            <param name="orderingInfo">Top level ordering information</param>
            <param name="skipCount">Elements to skip</param>
            <param name="takeCount">Count of elements to return</param>
            <returns><paramref name="queryExpression"/> appended with OrderBy/ThenBy, Skip and Top expressions</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplySkipTakeOnTopLevelResult(System.Linq.Expressions.Expression,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applies the skip and take on top level query result set
            </summary>
            <param name="queryExpression">Current query expression</param>
            <param name="skipCount">Elements to skip</param>
            <param name="takeCount">Count of elements to return</param>
            <returns><paramref name="queryExpression"/> appended with Skip and Top expressions</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ApplyOrderBy(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Boolean,System.Boolean)">
            <summary>
            Applies Queryable.OrderBy/ThenBy to <paramref name="queryExpression"/>
            </summary>
            <param name="queryExpression">Input query</param>
            <param name="orderExpression">Expression representing orderby clause</param>
            <param name="firstOrder">Is this first ordering expression in a list</param>
            <param name="isAscending">Ordering is ascending or descending</param>
            <returns>Query expression with orderby/thenby appended to it</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.Provider">
            <summary>Provider for metadata.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1">
            <summary>Queryable element for results with expanded properties.</summary>
            <typeparam name="TWrapper">Wrapper type with expanded properties.</typeparam>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.source">
            <summary>Source enumeration with wrapped properties.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.#ctor(System.Linq.IQueryable{`0})">
            <summary>Initializes a new ExpandedEnumerable instance.</summary>
            <param name="source">Source for enumeration.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets an enumerator object for results.</summary>
            <returns>An enumerator object for results.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.GetEnumerator">
            <summary>Gets an enumerator object for results.</summary>
            <returns>An enumerator object for results.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.ElementType">
            <summary>The type of a single result.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.Expression">
            <summary>The query expression.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedQueryable`1.Provider">
            <summary>The query provider - not supported as nobody should call this.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator">
            <summary>Base class for the generic ExpandedEnumerator so that we can easily recognize instances of that class
            without usage of reflection (used during serialization and thus needs to be as fast as possible).</summary>
            <remarks>Note that we can't implement the ExpandedEnumerator as non-generic because the V1 version used
            the inner enumerator as generic and called the MoveNext/Current and so methods on the generic version.
            We also need the generic version for the IExpandedResult unwrapping to work.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator.UnwrapEnumerator(System.Collections.IEnumerator)">
            <summary>Determines if the specified enumerator is the ExpandedWrapper enumerator wrapper or the ProjectedWrapper enumerator wrapper
            and if so returns the unwrapped inner enumerator.</summary>
            <param name="enumerator">The enumerator to unwrap</param>
            <returns>Unwrapped enumerator if it was wrapped or the original enumerator if now wrapping occured.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator.GetInnerEnumerator">
            <summary>Virtual method to unwrap the inner enumerator as it's stored in the generic version of this class.</summary>
            <returns>The inner enumerator.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1">
            <summary>Use this class to enumerate elements that can be expanded.</summary>
            <typeparam name="TWrapper">Wrapper type with expanded properties.</typeparam>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.e">
            <summary>Enumerator for wrapper instances.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>Initializes a new ExpandedEnumerator instance.</summary>
            <param name="enumerator">Source for enumeration.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.GetExpandedPropertyValue(System.String)">
            <summary>Gets an expanded property for the specified <paramref name="name"/>.</summary>
            <param name="name">Name of property to return.</param>
            <returns>The expanded property value with the specified <paramref name="name"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.MoveNext">
            <summary>Moves to the next element.</summary>
            <returns>true if an element is available after the move; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.Reset">
            <summary>Resets the enumerator to the beginning of the sequence.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.Dispose">
            <summary>Releases resources.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.GetInnerEnumerator">
            <summary>Virtual method to unwrap the inner enumerator as it's stored in the generic version of this class.</summary>
            <returns>The inner enumerator.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.ExpandedElement">
            <summary>Element with expanded properties.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandedEnumerator`1.Current">
            <summary>Element with expanded properties.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty">
            <summary>Class which represents one projected property. Used as a pair of name and resource property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.name">
            <summary>Name of the property to project</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.property">
            <summary>The resource property to project.</summary>
            <remarks>If this field is null, it means we are to project open-type property.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.declaringResourceType">
            <summary>
            The resource type on which the given property is declared. If the given property is an open property,
            then the declaring type name will be null.
            </summary>
            <remarks>Since we allow same instance of resource properties to be added to different resource types, the only way to make sure
            that the property is unique is to have the declaring type.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.targetResourceType">
            <summary>The resource type for which the given property needs to be projected.</summary>
            <remarks>
            The property being projected might not be reachable from the targetResourceType. We create an instance
            of ProjectedProperty for adding etag properties and properties that have epm mapping. If the etag or epm
            mapping is a property on derived type, we still pass the target resource type as
            the base resource type of the set. Later on, because of the TypeAs bug, we need to distinguish between
            properties that have the type indentifier specified in the uri vs not.
            In short, if the target resource type is not equal to the base resource type of the set, there is a type
            identifier specified in the uri, otherwise not.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.#ctor(System.String,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType)">
            <summary>Creates a new instance of the projected property for a given property.</summary>
            <param name="name">The name of the property to project.</param>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> to project. For open properties this is null.</param>
            <param name="targetResourceType">The resource type for which the property needs to be projected.</param>
            <param name="declaringResourceType">Resource type on which the property is declared on. This will be null for open properties.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.Equals(System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty,System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty)">
            <summary>Compares two <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty"/> instances for equality.</summary>
            <param name="x">First instance.</param>
            <param name="y">Second instance.</param>
            <returns>True if the instances are equal, that means if they have the same name
            and the same resource property.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.Name">
            <summary>Name of the property to project</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.Property">
            <summary>The resource property to project.</summary>
            <remarks>If this field is null, it means we are to project open-type property.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty.TargetResourceType">
            <summary>The resource type for which the property needs to be projected.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode">
            <summary>Use this class to build a tree structure over a list of paths.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.Node">
            <summary>Expanded projection node for this node.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.expandProvider">
            <summary>Provider with metadata for operations.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.children">
            <summary>All child expand nodes for this segment.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.orderingInfo">
            <summary>Ordering info for this node</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.needSkipToken">
            <summary>Is skip token needed for current segment</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.projectedPropertyCandidates">
            <summary>Candidate set of properties to project.</summary>
            <remarks>We fill this set as we go through all the different ways to determine
            properties which need to be projected.
            Once we're done we will move the content of this set to the <see cref="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.projectedProperties"/> list
            and this fix the order of the projected properties.
            We use a set since we want to speed up the process of finding duplicates as it can happen
            quite often that we try to add the same property several times.
            During the phase where we build this set we use this field to mark nodes which require projection.
            Nodes which have this field null don't require projections and will project the entire resource always.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.elementType">
            <summary>The element type that will be projected from this segment.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.enumeratedType">
            <summary>The model (never wrapped) type to be used in an strongly-typed IEnumerable for this segment.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.hasFilterWithin">
            <summary>Whether there are any filters within this node. MaxResults are considered filters for processing.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.singleResult">
            <summary>Whether this segment represents a single element rather than a collection.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.isRoot">
            <summary>Set to true if this node is the root node.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.isV1Compatible">
            <summary>Set to true if this expand node and all its children represent a query which could be generated
            by the V1 version.</summary>
            <remarks>This is used to generate queires compatible with V1 when the query is V1 compatible.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.requiresExpandedWrapper">
            <summary>Whether this segment should be projected into an expanded wrapper.</summary>
            <remarks>Segments require a wrapper because the model doesn't auto-wire
            up (as in the EDM case), or because they have children with
            filters (and thus they need to project filtered children),
            or because they have wrapped children (and thus they need
            to project the custom projected type).</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.resourceTypes">
            <summary>List of all <see cref="T:System.Data.Services.Providers.ResourceType"/>s possibly returned by this segment (before projections).</summary>
            <remarks>The list is ordered such that if you imagine the tree of inheritance the root is always the first
            item in the list. The rule is that for each two types A and B,
            if A is ancestor in the inheritance hierarchy to B, then A goes before B. Types which don't have inheritance
            relationship (one is not the ancestor of the other) are in undefined order (we don't care).
            The list represents the entire inheritance hierarchy of types which can appear in the given resource set
            for this segment.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.projectedProperties">
            <summary>List of properties to be projected on this segment.</summary>
            <remarks>The list may hold several <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty"/> instances with the same name.
            In that case it means that there are different properties declared on different types in the inheritance
            tree which have the same name. Only one of them can be an open property (without the <see cref="T:System.Data.Services.Providers.ResourceProperty"/>).
            
            We need multiple instances for the same property name in cases where the properties have differnt types.
            In that case we can't project them onto the same property on the <see cref="T:System.Data.Services.Internal.ProjectedWrapper"/>
            since some providers (for example Linq to Entities) would reject such query (the properties might have different 
            CLR types and the provider might complain that we are projecting differnt types for the same property, although
            in reality we always project into "object", the provides sometimes don't see that).
            
            If a property is to be projected, there's going to be an some instance of <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ProjectedProperty"/>
            which applies to every type the property can be projected on. If there's is no matching instance for a given
            type in the inheritance hierarchy it means that type can't project that property at all (and we project
            null of the correct CLR type instead).
            
            The order in this list is important. It defines the order in which the properties are projected onto the
            ProjectedWrapper types. If a given property has index #i in this list it's going to be projected
            as #ith ProjectedProperty on the ProjectedWrapper.
            
            If this field is null it means no projections are defined for this segment and thus the entire resource
            should be returned from the query. If the field is non-null only the properties listed in it should be projected
            from the query.
            
            We must store a full list of all properties possibly projected on all types in this segment. The reason is
            so that we can assign them unique indeces (the order of this list). Since after the projection we won't be able
            to refer to them by names anymore. After the projection we won't know which exact type the resource was
            so we need a way to refer to the projected property without the knowledge of the exact type.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.#ctor(System.Data.Services.Providers.ExpandedProjectionNode,System.Data.Services.Providers.BasicExpandProvider)">
            <summary>Initalizes a new <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/>.</summary>
            <param name="node">Node being described.</param>
            <param name="provider">Provider for expansion flags and metadata.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BuildExpansionAndProjectionTree(System.Data.Services.Providers.BasicExpandProvider,System.Data.Services.Providers.ExpandedProjectionNode,System.Boolean)">
            <summary>Builds a tree of <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> items and the list of projected properties on them.</summary>
            <param name="provider">Expand provider for nodes.</param>
            <param name="rootProjectionNode">The root projection node to start with.</param>
            <param name="epmRelevantForCurrentFormat">Determine if the current Response format needs epm values.</param>
            <returns>The newly create root expand node.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.CreateChildren">
            <summary>Creates children expand nodes for this node.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.AddProjectedProperty(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType)">
            <summary>Adds the specified property to the list of projected properties on this node.</summary>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> to project.</param>
            <param name="targetResourceType">The resource type for which the property needs to be projected.</param>
            <param name="declaringType">The resource type on which the property is declared on.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.AddProjectedProperty(System.String,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType)">
            <summary>Adds the specified property to the list of projected properties on this node.</summary>
            <param name="propertyName">The name of the property to project.</param>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> to project, can be null for open-type properties.</param>
            <param name="targetResourceType">The resource type for which the property needs to be projected.</param>
            <param name="declaringType">The resource type on which the property is declared on. This will be null for open properties.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.FindChild(System.String)">
            <summary>Finds a child <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> with the specified name.</summary>
            <param name="name">The name of the node (navigation property) for which to look.</param>
            <returns>The child <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> or null if none was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.ApplyProjections(System.Boolean)">
            <summary>Applies projection segments onto the node creating list of projected properties 
            and types for this node. It calls itself recursively to apply projections to the
            entire subtree.</summary>
            <param name="epmRelevantForCurrentFormat">Determine if the current Response format needs epm values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.AssignTypeForExpected(System.Type,System.Boolean)">
            <summary>Assings type information given the specified type.</summary>
            <param name="enumeratedType">Type expected for enumeration.</param>
            <param name="singleResult">true if a single result is expected of this node; false otherwise.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BuildProjectionQuery(System.Linq.Expressions.Expression)">
            <summary>Builds the projection to apply expansion for the specified <paramref name="queryExpression"/>.</summary>
            <param name="queryExpression">Query to build for.</param>
            <returns>A new query with the expansions performed inside.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.GetProjectedPropertyIndex(System.Data.Services.Providers.ResourceProperty)">
            <summary>Returns the index of the projected property.</summary>
            <param name="property">The property to look for.</param>
            <returns>The index of the projected property. This is the index under which the property
            was projected into the ProjectedWrapper.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BuildLambdaExpression(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
            <summary>
            Creates a LambdaExpression and can be used when the delegate type is not known at compile time.
            </summary>
            <param name="delegateType">A Type that represents a delegate type.</param>
            <param name="body">An Expression to set the Body property equal to.</param>
            <param name="parameters">An IEnumerable&lt;T&gt; that contains ParameterExpression objects to use to populate the Parameters collection.</param>
            <returns>
            An object that represents a lambda expression which has the NodeType property equal to Lambda and the 
            Body and Parameters properties set to the specified values.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.AccessProperty(System.Linq.Expressions.Expression,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty,System.Boolean)">
            <summary>
            Create the accessor expression for a property (both CLR and late-bound)
            </summary>
            <param name="source">Expression representing the instance on which to access a property</param>
            <param name="resourceType">The <see cref="T:System.Data.Services.Providers.ResourceType"/> of the <paramref name="source"/> on which to access the property.</param>
            <param name="property">The <see cref="T:System.Data.Services.Providers.ResourceProperty"/> to access.</param>
            <param name="nullPropagationRequired">If set to true, nulls should be propagated through the property accesses,
            this means that if the source is null, the result will evaluate to null without accessing the property.
            If set to false the property is accessed directly.</param>
            <returns>An expression to access a property (singleton or set). The returned expression will always
            have the CLR type of the property being accessed.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.AccessOpenProperty(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Create the accessor expression for an open property
            </summary>
            <param name="source">Expression representing the instance on which to access a property</param>
            <param name="propertyName">The name of the property to access.</param>
            <returns>An expression to access a property. This always returns an expression of type System.Object.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BindByName(System.Type,System.String,System.Linq.Expressions.Expression)">
            <summary>
            Creates a <see cref="T:System.Linq.Expressions.MemberAssignment"/> expression that binds an expression to the named property.
            </summary>
            <param name="type">The type to look for the property on.</param>
            <param name="propertyName">Name of property on the element type.</param>
            <param name="source">Source expression for property.</param>
            <returns>
            A <see cref="T:System.Linq.Expressions.MemberAssignment"/> expression that binds an expression to the named property.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.ApplySegmentFilter(System.Linq.Expressions.Expression)">
            <summary>Applies the segment filter to the specified expression.</summary>
            <param name="expression">Expression to apply filter on.</param>
            <returns>The expression with the filter applied.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BuildProjectionExpression(System.Linq.Expressions.Expression)">
            <summary>Builds the projection for this segment.</summary>
            <param name="expression">Expected expression for this segment if it had no filtering or wrapping.</param>
            <returns>The expression for this segment, possibly a filter and/or wrapped version of 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BuildProjectionExpressionForExpandedWrapper(System.Linq.Expressions.Expression)">
            <summary>Builds projection expression which projects the result as ExpandedWrapper to enable
            on-demand expansion of navigation properties.</summary>
            <param name="source">Expression which evaluates to the element from which to project.</param>
            <returns>Projection expression which projects the result as ExpandedWrapper.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.PrepareProjectionBindingForResourceType(System.Data.Services.Providers.ResourceType,System.Linq.Expressions.Expression,System.Text.StringBuilder@,System.Linq.Expressions.Expression[]@)">
            <summary>
             Prepare the binding for <paramref name="resourceType"/> 
            </summary>
            <param name="resourceType">resourceType</param>
            <param name="source">Expression which evaluates to the element from which to project the properties.</param>
            <param name="propertyNameList">List of projected properties</param>
            <param name="bindingExpressions">projected binding expressions</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BuildProjectionExpressionForProjectedWrapper(System.Linq.Expressions.Expression)">
            <summary>Builds projection expression which projects all properties which we need
            based on active projections for this node. It uses ProjectedWrapper if necessary.</summary>
            <param name="source">Expression which evaluates to the element from which to project the properties.</param>
            <returns>Projection expression which projects all required properties from the <paramref name="source"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.ApplyOrderTakeOnInnerSegment(System.Linq.Expressions.Expression)">
            <summary>
            Applies OrderBy/ThenBy and Take on inner segments
            </summary>
            <param name="expression">Input expression</param>
            <returns>Output expression with OrderBy/Take possibly added to it</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.SetWrapperElementType">
            <summary>Sets the expanded wrapper element type on this node.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.GetProjectedWrapperType">
            <summary>Returns the projected wrapper element type on this node.</summary>
            <returns>The type of the projected wrapper used for this node.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.PopulateResourceTypes">
            <summary>
            Populate the list of resource types for the given node.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.ExpandProvider">
            <summary>Provider with metadata for operations.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.ProjectedType">
            <summary>Type to be projected for this node in the model (possibly wrapped).</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.OrderingInfo">
            <summary>Ordering information needed for root node</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.BaseResourceType">
            <summary>The base resource type for this segmenr.</summary>
            <remarks>All resources reported by this segment will be of this or some of its derived types.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.IsV1Compatible">
            <summary>Set to true if this expand node and all its children represent a query which could be generated
            by the V1 version.</summary>
            <remarks>This is used to generate queires compatible with V1 when the query is V1 compatible.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.RequiresExpandedWrapper">
            <summary>Returns true if this node requires a ExpandedWrapper to be used to represent the result.</summary>
            <remarks>If both exapnede and projected wrappers are required we return ExpandedWrapper which stores
            the result element as a ProjectedWrapper.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.RequiresProjectedWrapper">
            <summary>Returns true if this node requires a ProjectedWrapper to be used to represent the result.</summary>
            <remarks>If the node also requires an ExpandedWrapper then the actuall type fo the result will be
            the ExpandedWrapper with its ExpandedElement property of type ProjectedWrapper.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.RequiresWrapper">
            <summary>Returns true if this node requires some kind of wrapper for its result.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.BasicExpandProvider.ExpandNode.NeedsStandardPaging">
            <summary>Returns true if this expansion will need standard paging applied.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor">
            <summary>Expression tree visitor which annotates the tree with <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/>s.</summary>
            <remarks>Given expression is annotated with <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> if it evaluates
            to an instance of the resource which belongs to the resource set represented by the <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/>.
            For example in query /Customers?$expand=BestFriend all expressions which evaluate to
            customer.BestFriend will be annotated with the <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> representing the expanded
            BestFriend nav. property.
            This visitor doesn't modify the expression tree at all.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.parameter">
            <summary>The parameter expression which is the parameter for the expression tree and evaluates to
            the resource instances.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.parameterExpandNode">
            <summary><see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> into which belongs the resource which the <see cref="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.parameter"/>
            evaluates to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.expandNodeAnnotations">
            <summary>The created annotations.</summary>
            <remarks>Annotations are stored as a dictionary where the expression is the key and the value is the
            <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/>.
            Note that since this annotation is entirely computed out of the subtree and not from the parents
            of the expression subtree it is safe to annotate like this.
            Even if a given expression is referenced multiple times from the same tree its annotation
            will be the same in all cases.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.#ctor(System.Linq.Expressions.ParameterExpression,System.Data.Services.Providers.BasicExpandProvider.ExpandNode)">
            <summary>Constructor</summary>
            <param name="parameter">The parameter expression which evaluates to the resource.</param>
            <param name="parameterExpandNode">The <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> into which the resource from 
            <paramref name="parameter"/> belongs to.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.AnnotateExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Data.Services.Providers.BasicExpandProvider.ExpandNode)">
            <summary>Annotates specified expression with the respective <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/>s.</summary>
            <param name="expression">The expression to annotate.</param>
            <param name="parameter">The parameter expression which evaluates to the base resource instance.</param>
            <param name="parameterExpandNode">The <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> which represents the base resource set.</param>
            <returns>Annotations stored as a dictionary.</returns>
            <remarks>The expression is not modified at all.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Visits a conditional node in the expression tree.</summary>
            <param name="c">The conditional expression to process.</param>
            <returns>Possibly new conditional expression with which to replace the <paramref name="c"/> in the tree with.</returns>
            <remarks>This class needs to override this method since it needs to "merge" the <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/> annotations
            from the true and false branches of the conditional expression.
            It assumes that only one branch will actually have some annotation.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>UnaryExpression visit method</summary>
            <param name="u">The UnaryExpression expression to visit</param>
            <returns>The visited UnaryExpression expression </returns>
            <remarks>This method simply propagates the annotation from the operand of the unary expression
            to the unary expression itself.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>ParameterExpression visit method</summary>
            <param name="p">The ParameterExpression expression to visit</param>
            <returns>The visited ParameterExpression expression </returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.ProcessPropertyAccess(System.String,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@)">
            <summary>Dervied class will override them method to process any property accesses found in the tree.</summary>
            <param name="propertyName">The name of the property being accessed.</param>
            <param name="operandExpression">The expression on which the property is being accessed.
            The implementation may choose to return a different expression through this ref parameter.
            If the method returns true, the <paramref name="accessExpression"/> is null and the method
            changed this parameter, the caller will replace the operand in the original property
            access with the new expression provided in this parameter. The way the property is accessed
            and its name remains the same.</param>
            <param name="accessExpression">The entire expression of the property access.
            The implementation may choose to return a different expression through this ref parameter.
            If the method returns true and this parameter is not null the caller will replace the entire
            property access expression with the new one passed in this parameter.</param>
            <returns>If the method returns false it means that it is not interested in this property access,
            and the processing of the tree will continue by examining the children of the property access expression.
            If the method returns true the caller looks at the returned value of <paramref name="accessExpression"/>.
            If it is not-null it will replace the entire property access expression with it.
            If it's null it will just replace the operand of the property access with the <paramref name="operandExpression"/>.
            If the implementation wants to skip this property access without modification it should return true
            and not modify the ref parameters.</returns>
            <remarks>If the method returns true the caller will not continue walking the children of the property
            access expression. It's the responsibility of the implementation to do so if it requires such
            functionality.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.GetExpandNodeAnnotation(System.Linq.Expressions.Expression)">
            <summary>Helper method to determine annotation for a given expression.</summary>
            <param name="expression">Expression to determine annotation for.</param>
            <returns>Annotation for the <paramref name="expression"/> or null if no annotation was found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.SetExpandNodeAnnotation(System.Linq.Expressions.Expression,System.Data.Services.Providers.BasicExpandProvider.ExpandNode)">
            <summary>Helper method to set an annotation for a given expression.</summary>
            <param name="expression">Expression to set an annotation on.</param>
            <param name="annotation">The annotation to set.</param>
        </member>
        <member name="T:System.Data.Services.Providers.BasicExpandProvider.AddPropertyAccessesAsProjectedPropertiesVisitor">
            <summary>Expression tree visitor which finds all property accesses and marks the affected properties
            for projection.</summary>
            <remarks>The visitor doesn't change the expression tree at all.
            Visitor recognizes all ways a WCF Data Services uses to access properties.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.BasicExpandProvider.AddPropertyAccessesAsProjectedPropertiesVisitor.expandNodeAnnotations">
            <summary>Annotations for the specified expression tree.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.AddPropertyAccessesAsProjectedPropertiesVisitor.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.Expression,System.Data.Services.Providers.BasicExpandProvider.ExpandNode})">
            <summary>Constructor</summary>
            <param name="expandNodeAnnotations">Annotation to use.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.AddPropertyAccessesAsProjectedPropertiesVisitor.AddPropertyAccessesAsProjectedProperties(System.Linq.Expressions.Expression,System.Collections.Generic.Dictionary{System.Linq.Expressions.Expression,System.Data.Services.Providers.BasicExpandProvider.ExpandNode})">
            <summary>Inspects the specified <paramref name="expression"/> using the <paramref name="expandNodeAnnotations"/>
            and adds all accessed properties to the list of candidates for projection on their respective
            <see cref="T:System.Data.Services.Providers.BasicExpandProvider.ExpandNode"/>s.</summary>
            <param name="expression">The expression to inspect.</param>
            <param name="expandNodeAnnotations">Annotation for the <paramref name="expression"/> computed
            as a result of <see cref="M:System.Data.Services.Providers.BasicExpandProvider.ExpandNodeAnnotationVisitor.AnnotateExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Data.Services.Providers.BasicExpandProvider.ExpandNode)"/>.</param>
        </member>
        <member name="M:System.Data.Services.Providers.BasicExpandProvider.AddPropertyAccessesAsProjectedPropertiesVisitor.ProcessPropertyAccess(System.String,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@)">
            <summary>Derived class will override them method to process any property accesses found in the tree.</summary>
            <param name="propertyName">The name of the property being accessed.</param>
            <param name="operandExpression">The expression on which the property is being accessed.
            The implementation may choose to return a different expression through this ref parameter.
            If the method returns true, the <paramref name="accessExpression"/> is null and the method
            changed this parameter, the caller will replace the operand in the original property
            access with the new expression provided in this parameter. The way the property is accessed
            and its name remains the same.</param>
            <param name="accessExpression">The entire expression of the property access.
            The implementation may choose to return a different expression through this ref parameter.
            If the method returns true and this parameter is not null the caller will replace the entire
            property access expression with the new one passed in this parameter.</param>
            <returns>If the method returns false it means that it is not interested in this property access,
            and the processing of the tree will continue by examining the children of the property access expression.
            If the method returns true the caller looks at the returned value of <paramref name="accessExpression"/>.
            If it is not-null it will replace the entire property access expression with it.
            If it's null it will just replace the operand of the property access with the <paramref name="operandExpression"/>.
            If the implementation wants to skip this property access without modification it should return true
            and not modify the ref parameters.</returns>
            <remarks>If the method returns true the caller will not continue walking the children of the property
            access expression. It's the responsibility of the implementation to do so if it requires such
            functionality.</remarks>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextServiceProvider">
            <summary>
            Provides a reflection-based provider implementation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.StoreGeneratedPatternAnnotationName">
            <summary>
            Name for the 'StoreGeneratedPattern' custom annotation once it has been loaded into a ResourceProperty
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.EFProviderBehavior">
            <summary>
            EF provider behavior
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.objectsToBeReplaced">
            <summary>
            List of objects that we need to be replaced. The key value indicates the current instance
            that will be replaced during SaveChanges. All the property changes are expected to happen
            on the value instance. At the time of SaveChanges, all the changes applied to the Value 
            instance are then applied to the instance present in Key and then it is saved.
            Since EF will always return the same reference for same key value by looking up the first
            level cache, we can assume reference equality for the objects thus obtained.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.actionsToInvoke">
            <summary>
            List of service actions to be invoked during SaveChanges().
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.typesWithoutOSpaceMetadata">
            <summary>List of cspace types for which ospace metadata couldn't be found.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.objectContext">
            <summary>Reference to the ObjectContext to use for operations</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.saveChangesMethod">
            <summary>Method to use to save changes to the context</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.ObjectContextServiceProvider instance.
            </summary>
            <param name="dataServiceInstance">instance of the data service.</param>
            <param name="dataSourceInstance">data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the ResourceAssociationSet instance when given the source association end.
            </summary>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
            <returns>ResourceAssociationSet instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the container.
            </summary>
            <param name="container">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the container; null if there is 
            no container for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Returns the collection of open properties name and value for the given resource instance.
            </summary>
            <param name="target">instance of the resource.</param>
            <returns>Returns the collection of open properties name and value for the given resource instance. Currently not supported for ObjectContext provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetOpenPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the open property.
            </summary>
            <param name="target">instance of the resource type.</param>
            <param name="propertyName">name of the property.</param>
            <returns>the value of the open property. Currently this is not supported for ObjectContext providers.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CreateResource(System.String,System.String)">
            <summary>
            Creates the resource of the given type and belonging to the given container
            </summary>
            <param name="containerName">container name to which the resource needs to be added</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and belonging to the given container</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetResource(System.Linq.IQueryable,System.String)">
            <summary>
            Gets the resource of the given type that the query points to
            </summary>
            <param name="query">query pointing to a particular resource</param>
            <param name="fullTypeName">full type name i.e. Namespace qualified type name of the resource</param>
            <returns>object representing a resource of given type and as referenced by the query</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ResetResource(System.Object)">
            <summary>
            Resets the value of the given resource to its default value
            </summary>
            <param name="resource">resource whose value needs to be reset</param>
            <returns>same resource with its value reset</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the given property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <returns>the value of the property for the given target resource</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetReference(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the given reference property on the target object
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="propertyValue">value of the property</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.AddReferenceToCollection(System.Object,System.String,System.Object)">
            <summary>
            Adds the given value to the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeAdded">value of the property which needs to be added</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
            <summary>
            Removes the given value from the collection
            </summary>
            <param name="targetResource">target object which defines the property</param>
            <param name="propertyName">name of the property whose value needs to be updated</param>
            <param name="resourceToBeRemoved">value of the property which needs to be removed</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.DeleteResource(System.Object)">
            <summary>
            Delete the given resource
            </summary>
            <param name="resource">resource that needs to be deleted</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SaveChanges">
            <summary>
            Saves all the pending changes made till now
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ResolveResource(System.Object)">
            <summary>
            Returns the actual instance of the resource represented by the given resource object
            </summary>
            <param name="resource">object representing the resource whose instance needs to be fetched</param>
            <returns>The actual instance of the resource represented by the given resource object</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ClearChanges">
            <summary>
            Revert all the pending changes.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetETagProperties(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Get the list of etag property names given the entity set name and the instance of the resource
            </summary>
            <param name="containerName">name of the entity set</param>
            <param name="resourceType">Type of the resource whose etag properties need to be fetched</param>
            <returns>list of etag property names</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntityContainerAnnotations(System.String)">
            <summary>
            Return the list of custom annotation for the entity container with the given name.
            </summary>
            <param name="entityContainerName">Name of the EntityContainer.</param>
            <returns>Return the list of custom annotation for the entity container with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetConcurrencyValues(System.Object,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Set the etag values for the given resource.
            </summary>
            <param name="resource">resource for which etag values need to be set.</param>
            <param name="checkForEquality">true if we need to compare the property values for equality. If false, then we need to compare values for non-equality.</param>
            <param name="concurrencyValues">list of the etag property names, along with their values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ScheduleInvokable(System.Data.Services.Providers.IDataServiceInvokable)">
            <summary>
            Queues up the <paramref name="invokable"/> to be invoked during IUpdatable.SaveChanges().
            </summary>
            <param name="invokable">The invokable instance whose Invoke() method will be called during IUpdatable.SaveChanges().</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMemberMetadata(System.Data.Services.Caching.ResourceTypeCacheItem,System.Data.Services.Providers.IProviderMetadata,System.Data.Services.Caching.ProviderMetadataCacheItem,System.Data.Services.Providers.PrimitiveResourceTypeMap)">
            <summary>
            Populates the member metadata for the given type
            </summary>
            <param name="resourceTypeCacheItem">Instance of ResourceTypeCacheItem containing the ResourceType and its metadata.</param>
            <param name="workspace">workspace containing the metadata information</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="primitiveResourceTypeMap">Map of primitive types to use when building member metadata.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetClrTypeForCSpaceType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.StructuralType)">
            <summary>Gets the CLR type mapped to the specified C-Space type.</summary>
            <param name="workspace">Workspace in which the type is defined.</param>
            <param name="edmType">C-Space type whose matching clr type needs to be looked up.</param>
            <returns>The resolved <see cref="T:System.Type"/> for the given <paramref name="edmType"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CheckModelConsistency">
            <summary>Checks that the metadata model is consistent.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMetadata(System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populates metadata from the given object context
            </summary>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem in which metadata needs to be populated.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMetadataForUserSpecifiedTypes(System.Collections.Generic.IEnumerable{System.Type},System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populate types for metadata specified by the provider
            </summary>
            <param name="userSpecifiedTypes">list of types specified by the provider</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateMetadataForType(System.Type,System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populate metadata for the given clr type.
            </summary>
            <param name="type">type whose metadata needs to be loaded.</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <returns>resource type containing metadata for the given clr type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ResolveNonPrimitiveTypeCacheItem(System.Type)">
            <summary>
            Returns the resource type for the corresponding clr type.
            </summary>
            <param name="type">clrType whose corresponding resource type needs to be returned</param>
            <returns>Returns the resource type</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CheckNavigationPropertiesBound(System.Object)">
            <summary>
            Checks that all navigation properties are bound to some association set for every entity set.
            </summary>
            <param name='dataSourceInstance'>Instance of the data source for the provider.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetsForType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EntityType)">
            <summary>
            Gets all <see cref="T:System.Data.Metadata.Edm.EntitySet"/> instance that may hold an entity of type <paramref name="type"/>.
            </summary>
            <param name="workspace">Workspace with metadata.</param>
            <param name="type">Entity type to get entity sets for.</param>
            <returns>An enumeration of <see cref="T:System.Data.Metadata.Edm.EntitySet"/> instances that can hold <paramref name="type"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetsWithAssociationSets(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.RelationshipType,System.Data.Metadata.Edm.RelationshipEndMember)">
            <summary>
            Gets all entity sets that participate as members for the specified <paramref name="associationType"/>.
            </summary>
            <param name="workspace">Workspace with metadata.</param>
            <param name="associationType">Type of assocation to check.</param>
            <param name="member">Member of association to check.</param>
            <returns>
            All <see cref="T:System.Data.Metadata.Edm.EntitySet"/> instances that are are on the <paramref name="member"/> role for 
            some association of <paramref name="associationType"/>.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntityTypeDefaultStreamProperty(System.Data.Metadata.Edm.StructuralType)">
            <summary>Reads the HasStream attribute from the specified <paramref name="type"/>.</summary>
            <param name="type">Type to read attribute from.</param>
            <returns>True if HasStream="true" stream property is defined for the entity type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetMimeTypeForMappedMember(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.IProviderMember)">
            <summary>Sets the MIME type, if specified for the specified member.</summary>
            <param name="resourceProperty">resource property whose mime type needs to be updated.</param>
            <param name="csdlMember">C-Space member for which we need to find the C-Space mime type attribute.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.IsAssignableFrom(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EntityType)">
            <summary>Checks whether <paramref name="derivedType"/> may be assigned to <paramref name="baseType"/>.</summary>
            <param name="baseType">Type to check assignment to.</param>
            <param name="derivedType">Type to check assignment from.</param>
            <returns>
            true if an instance of <paramref name="derivedType" /> can be assigned to a variable of 
            <paramref name="baseType"/>; false otherwise.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateTypeMetadata(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.StructuralType,System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populates the metadata for the given type and its base type
            </summary>
            <param name="workspace">metadata workspace containing all the metadata information</param>
            <param name="edmType"> type whose metadata needs to be populated </param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <returns>returns the resource type corresponding to the given edmType</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CreateResourceType(System.Data.Metadata.Edm.StructuralType,System.Type,System.Data.Services.Providers.ResourceType,System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Creates a new instance of resource type given the cspace structural type and mapping clr type.
            </summary>
            <param name="cspaceType">cspace structural type.</param>
            <param name="clrType">mapping clr type for the given structural type.</param>
            <param name="baseResourceType">the base resource type for the given resource type.</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <returns>the new resource type instance created for the given cspace type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetName(System.String,System.String,System.Boolean)">
            <summary>
            Returns the entity set name for the given entity set. If this entity set belongs to the default container name,
            then it returns the entity set name, otherwise qualifies it with the entitycontainer name
            </summary>
            <param name="entitySetName">entity set name</param>
            <param name="entityContainerName">entity container name</param>
            <param name="containedInDefaultEntityContainer">true if the given entity set belongs to the default entity container</param>
            <returns>returns the entity set name</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEscapedEntitySetName(System.String)">
            <summary>
            Returns the escaped entity set name for the given entity set. If this entity set belongs to the default container name,
            then it returns the escaped entity set name, otherwise it escapes both the container and set name
            </summary>
            <param name="qualifiedEntitySetName">qualified entity set name whose name needs to be escaped</param>
            <returns>returns the escaped entityset name</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.InitializeObjectItemCollection(System.Data.Objects.ObjectContext,System.Reflection.Assembly)">
            <summary>Initializes metadata for the given object context.</summary>
            <param name="objectContext">Instance of data source to use if pure static analysis isn't possible.</param>
            <param name="assembly">assembly whose metadata needs to be loaded.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CreateObject(System.Data.Objects.ObjectContext,System.Type)">
            <summary>
            Create a new instance of the given clrtype using ObjectContext.CreateObject method
            </summary>
            <param name="context">current object context instance.</param>
            <param name="clrType">clrType whose instance needs to be created.</param>
            <returns>the instance returned by ObjectContext.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.IsOneToOneFKAssocation(System.Data.Metadata.Edm.AssociationType)">
            <summary>
            Checks if the given association is a FK association with cardinality 1 to 1 or 0..1 to 1
            </summary>
            <param name="association">metadata for the association.</param>
            <returns>Returns true if the given association is a FK association with cardinality 1 to 1 or 0..1 to 1.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySetName(System.Data.Objects.ObjectStateEntry,System.String)">
            <summary>
            Returns the entity set name for the given object state entry.
            </summary>
            <param name="entry">object state entry for the object whose entity set name needs to be retreived.</param>
            <param name="defaultContainerName">default container name.</param>
            <returns>entity set name for the given entity entry.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ApplyChangesToEntity(System.Data.Objects.ObjectContext,System.Object,System.Object)">
            <summary>
            Apply changes from the newEntity to the original entity
            </summary>
            <param name="objectContext">ObjectContext instance.</param>
            <param name="originalTrackedEntity">original entity which is tracked by the context.</param>
            <param name="newEntity">newEntity which contains all the changed values.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateAnnotations(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.MetadataProperty},System.Action{System.String,System.String,System.Object})">
            <summary>
            Populate annotations from the list of the metadata properties.
            </summary>
            <param name="metadataProperties">list of metadata properties.</param>
            <param name="addAnnotationMethod">method for adding the annotation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateFacets(System.Data.Services.Providers.ResourceProperty,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.Facet},System.Boolean)">
            <summary>
            Populate the annotations from the list of facets.
            </summary>
            <param name="property">ResourceProperty instance whose annotation needs to be populated.</param>
            <param name="facets">List of facets.</param>
            <param name="ignoreNullableFacet">True if the nullable annotation needs to be ignored.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetMultiplicity(System.Data.Metadata.Edm.RelationshipMultiplicity)">
            <summary>
            Return the string for the given enum RelationshipMultiplicity value.
            </summary>
            <param name="multiplicity">RelationshipMultiplicity value.</param>
            <returns>Return the string for the given enum RelationshipMultiplicity value.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateResourceAssociationSetEnd(System.Data.Metadata.Edm.AssociationSetEnd,System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Populate ResourceAssociationSetEnd from the AssociationSetEnd instance.
            </summary>
            <param name="setEnd">Instance of AssociationSetEnd.</param>
            <param name="resourceSet">ResourceSet to which the type referred by the end belongs to.</param>
            <param name="resourceType">ResourceType referred by the end.</param>
            <param name="resourceProperty">ResourceProperty that takes part in the association.</param>
            <returns>An instance of ResourceAssociationSetEnd.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateResourceAssociationTypeEnd(System.Data.Metadata.Edm.AssociationEndMember,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Populate the ResourceAssociationTypeEnd from the AssociationEndMember instance.
            </summary>
            <param name="end">Instance of AssociationEndMember.</param>
            <param name="resourceType">ResourceType instance which the end refers to.</param>
            <param name="resourceProperty">ResourceProperty instance.</param>
            <returns>An instance of ResourceAssociationTypeEnd.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateResourceAssociationType(System.Data.Metadata.Edm.AssociationType,System.Data.Services.Providers.ResourceAssociationTypeEnd,System.Data.Services.Providers.ResourceAssociationTypeEnd)">
            <summary>
            Populate the ResourceAssociationType from the AssociationType instance.
            </summary>
            <param name="associationType">AssociationType instance.</param>
            <param name="end1">ResourceAssociationTypeEnd instance.</param>
            <param name="end2">ResourceAssociationTypeEnd instance.</param>
            <returns>An instance of ResourceAssociationType.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.PopulateReferentialConstraint(System.Data.Services.Providers.ResourceAssociationType,System.Data.Metadata.Edm.ReferentialConstraint)">
            <summary>
            Populate the ResourceReferentialConstraint instance from the ReferentialConstraint instance.
            </summary>
            <param name="resourceAssociationType">ResourceAssociationType instance.</param>
            <param name="referentialConstraint">ReferentialConstraint instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.CreateBadRequestError(System.String,System.Exception)">
            <summary>
            Creates a new exception to indicate BadRequest error.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Inner Exception.</param>
            <returns>A new exception to indicate a bad request error.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmInfoForResourceType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Services.Providers.ResourceType)">
            <summary>
            Given a resource type, builds the EntityPropertyMappingInfo for each EntityPropertyMappingAttribute on it
            </summary>
            <param name="workspace">The EFx metadata workspace to which the resource type belongs</param>
            <param name="resourceType">Resouce type for which EntityPropertyMappingAttribute discovery is happening</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmInfoForResourceProperty(System.Data.Services.Providers.EpmHelper.EpmPropertyInformation,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Given a resource type and its resource proeperty builds the EntityPropertyMappingInfo for the EntityPropertyMappingAttribute on it
            </summary>
            <param name="propertyInformation">EPM information for current property</param>
            <param name="resourceType">ResourceType on which epm information is declared.</param>
            <param name="resourceProperty">Resource property for which to get the information</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetResourcePropertyFromEpmPath(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Obtains the ResourceProperty corresponding to a given sourcePath
            </summary>
            <param name="baseResourceType">Resource type in which to look for property</param>
            <param name="sourcePath">Source Path</param>
            <returns>ResourceProperty object corresponding to the property given through source path</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEpmAttrsFromComplexProperty(System.Data.Services.Providers.ResourceProperty,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns a sequence of attributes corresponding to a complex type with recursion
            </summary>
            <param name="complexProperty">Complex typed property</param>
            <param name="epmSourcePath">Source path</param>
            <param name="epmTargetPath">Target path</param>
            <param name="epmNsPrefix">Namespace prefix</param>
            <param name="epmNsUri">Namespace Uri</param>
            <param name="epmKeepInContent">KeepInContent setting</param>
            <returns>Sequence of entity property mapping information for complex type properties</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetEntitySet(System.String)">
            <summary>
            Get the entity set metadata object given the qualified entity set name
            </summary>
            <param name="qualifiedEntitySetName">qualified entity set name i.e. if the entity set
            belongs to entity container other than the default one, then the entity container name should
            be part of the qualified name</param>
            <returns>the entity set metadata object</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.BuildQueryRootDelegate(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Return the set of IL instructions for getting the IQueryable instance for the given ResourceSet.
            </summary>
            <param name="resourceSet">ResourceSet instance.</param>
            <returns>Func to invoke to get IQueryable for the given ResourceSet.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.UpdateRelationship(System.Object,System.String,System.Object,System.Nullable{System.Boolean})">
            <summary>
            Update the relationship for the given entity.
            </summary>
            <param name="targetResource">source entity.</param>
            <param name="propertyName">navigation property which needs to get updated.</param>
            <param name="propertyValue">target entity - the other end of the relationship.</param>
            <param name="addRelationship">null for reference properties, true if relationship needs to be added for collection properties, else false.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SaveContextChanges">
            <summary>
            Saves changes on the ObjectContext using the provider's Func
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.GetConstructorDelegate(System.Data.Services.Providers.ResourceType)">
            <summary>
            Gets the constructor delegate for the given ResourceType from the cache.
            </summary>
            <param name="resourceType">ResourceType instance.</param>
            <returns>the constructor delegate for the given ResourceType from the cache.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.SetValue(System.Object,System.Data.Services.Caching.ResourceTypeCacheItem,System.Object,System.Data.Services.Providers.ResourceProperty)">
            <summary>Sets the value of the property.</summary>
            <param name="instance">The object whose property needs to be set.</param>
            <param name="resourceTypeCacheItem">ResourceTypeCacheItem containing the ResourceType and its metadata representing the instance parameter.</param>
            <param name="propertyValue">new value for the property.</param>
            <param name="resourceProperty">metadata for the property to be set.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.IsNullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.EdmSchemaVersion">
            <summary>Return the schema version for the EF provider.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ProviderBehavior">
            <summary>
            Instance of provider behavior that defines the assumptions service should make
            about the provider.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContext">
            <summary>Strongly-types instance being reflected upon.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.DataSourceType">
            <summary>Target type for the data provider </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem">
            <summary>
            Class for storing metadata for a given ResourceProperty.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.isNullable">
            <summary>>Whether the property value can be null or not.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.isStoreGenerated">
            <summary>>Whether the property value is store generated or not.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.#ctor(System.Reflection.PropertyInfo,System.Data.Services.Providers.IProviderMember)">
            <summary>
            Creates a new instance of ResourcePropertyCacheItem.
            </summary>
            <param name="propertyInfo">PropertyInfo instance for the given ResourceProperty.</param>
            <param name="providerMember">IProviderMember which wraps the IEdmMember instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.PropertyIsNullable(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.Facet})">
            <summary>
            Returns whether or not the property's custom annotations indicate that it is nullable
            </summary>
            <param name="facets">List of facets.</param>
            <returns>True if the 'Nullable' annotation is absent or present with the value 'true'. Otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.PropertyIsStoreGenerated(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.MetadataProperty})">
            <summary>
            Returns whether or not the property's custom annotations indicate that it is store-generated
            </summary>
            <param name="metadataProperties">list of metadata properties.</param>
            <returns>True if the 'StoreGeneratedPattern' annotation is present with either the value 'Identity' or 'Computed', otherwise false</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.IsNullable">
            <summary>
            Returns true if the property value can be null, otherwise false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextServiceProvider.ObjectContextResourcePropertyCacheItem.IsStoreGenerated">
            <summary>
            Returns true if the property value is store generated, otherwise false.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextType">
            <summary>
            Provides an encapsulation of the Entity Framework StructuralType class.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextType.structuralType">
            <summary>StructuralType being encapsulated.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextType.#ctor(System.Data.Metadata.Edm.StructuralType)">
            <summary>
            Creates a new encapsulations of the specified type.
            </summary>
            <param name="structuralType">StructuralType to encapsulate.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextType.Members">
            <summary>
            Returns the members declared on this type only, not including any inherited members.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextType.Name">
            <summary>
            Name of the type without its namespace
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextMember">
            <summary>
            Provides an encapsulation of the Entity Framework EdmMember class.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextMember.edmMember">
            <summary>EdmMember that is encapsulated by this class.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextMember.#ctor(System.Data.Metadata.Edm.EdmMember)">
            <summary>
            Creates a new encapsulation of the specified EdmMember.
            </summary>
            <param name="edmMember">Member being encapsulated.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.EdmTypeKind">
            <summary>
            BuiltInTypeKind for the member's type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.Name">
            <summary>
            Name of the member without its namespace.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.IsKey">
            <summary>
            True if this member is a key on it's declaring type, otherwise false.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.EdmTypeName">
            <summary>
            EDM name for the member's type.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.MimeType">
            <summary>
            MimeType for the member.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.CollectionItemType">
            <summary>
            Returns the entity type of the items in the collection if this member is a collection type, otherwise null.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.MetadataProperties">
            <summary>
            List of metadata properties of the member.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.Facets">
            <summary>
            List of facets of the member.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ObjectContextMember.EdmType">
            <summary>
            EdmType for the member.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ObjectContextMetadata">
            <summary>
            Provides an encapsulation of the Entity Framework MetadataWorkspace class
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ObjectContextMetadata.metadataWorkspace">
            <summary>MetadataWorkspace being encapsulated.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextMetadata.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)">
            <summary>
            Creates a new encapsulation of the specified workspace.
            </summary>
            <param name="metadataWorkspace">MetadataWorkspace to encapsulate.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextMetadata.GetProviderType(System.String)">
            <summary>
            Gets the CSpace type with the specified type name. Expected to be used for entities and complex types only.
            </summary>
            <param name="providerTypeName">CSpace type name used to find the type.</param>
            <returns>IType encapsulation of the StructuralType from the metadata workspace.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ObjectContextMetadata.GetClrType(System.Data.Metadata.Edm.StructuralType)">
            <summary>
            Gets the CLR type for the specified StructuralType.
            </summary>
            <param name="structuralType">StructuralType used to find the CLR type.</param>
            <returns>CLR type equivalent for <paramref name="structuralType"/></returns>
        </member>
        <member name="T:System.Data.Services.Providers.ReflectionServiceProvider">
            <summary>
            Provides a reflection-based provider implementation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ReflectionServiceProvider.ReflectionProviderBehavior">
            <summary>
            EF provider behavior
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new System.Data.Services.ReflectionServiceProvider instance.
            </summary>
            <param name="dataServiceInstance">data service instance.</param>
            <param name="dataSourceInstance">data source instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the ResourceAssociationSet instance when given the source association end.
            </summary>
            <param name="resourceSet">Resource set of the source association end.</param>
            <param name="resourceType">Resource type of the source association end.</param>
            <param name="resourceProperty">Resource property of the source association end.</param>
            <returns>ResourceAssociationSet instance.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Returns the IQueryable that represents the container.
            </summary>
            <param name="container">resource set representing the entity set.</param>
            <returns>
            An IQueryable that represents the container; null if there is 
            no container for the specified name.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetOpenPropertyValues(System.Object)">
            <summary>
            Returns the collection of open properties name and value for the given resource instance.
            </summary>
            <param name="target">instance of the resource.</param>
            <returns>Returns the collection of open properties name and value for the given resource instance. Currently not supported for Reflection provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.GetOpenPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the open property.
            </summary>
            <param name="target">instance of the resource type.</param>
            <param name="propertyName">name of the property.</param>
            <returns>the value of the open property. Currently this is not supported for Reflection provider.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsPropertyKeyProperty(System.Reflection.PropertyInfo,System.Data.Services.Providers.ResourceKeyKind@)">
            <summary>Checks whether the given property is a key property.</summary>
            <param name="property">property to check</param>
            <param name="keyKind">returns the key kind of the property, based on the heuristic it matches</param>
            <returns>true if this is a key property, else returns false</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadata(System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>Populates the metadata for this provider.</summary>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem in which metadata needs to be populated.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForUserSpecifiedTypes(System.Collections.Generic.IEnumerable{System.Type},System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populate types for metadata specified by the provider
            </summary>
            <param name="userSpecifiedTypes">list of types specified by the provider</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForType(System.Type,System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            Populate metadata for the given clr type.
            </summary>
            <param name="type">type whose metadata needs to be loaded.</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <returns>resource type containing metadata for the given clr type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsComplexType(System.Type)">
            <summary>Checks whether the specified type is a complex type.</summary>
            <param name="type">Type to check.</param>
            <returns>
            true if the specified type is a complex type; false otherwise. Note
            that resources are not distinguished from complex types.
            </returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.DoesTypeHaveKeyProperties(System.Type,System.Boolean)">
            <summary>
            Checks whether there is a key defined for the given type.
            </summary>
            <param name="type">type to check </param>
            <param name="entityTypeCandidate">
            Whether <paramref name="type"/> is being considered as a possible 
            entity type.
            </param>
            <returns>returns true if there are one or key properties present else returns false</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForTypes(System.Data.Services.Caching.ProviderMetadataCacheItem,System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType})">
            <summary>
            Populates the metadata for the given unvisited types and all the associated types with this type
            </summary>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="unvisitedTypes">list of unvisited type</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.BuildHierarchyForEntityType(System.Type,System.Data.Services.Caching.ProviderMetadataCacheItem,System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType},System.Boolean)">
            <summary>
            Walks through the list of ancestors and finds the root base type and collects metadata for the entire chain of ancestors
            </summary>
            <param name="type">type whose ancestors metadata needs to be populated</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="unvisitedTypes">list of unvisited types</param>
            <param name="entityTypeCandidate">Whether <paramref name="type"/> is a candidate to be an entity type.</param>
            <returns>return true if this given type is a entity type, otherwise returns false</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.BuildTypeProperties(System.Data.Services.Providers.ResourceType,System.Data.Services.Caching.ProviderMetadataCacheItem,System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType})">
            <summary>
            Populates the metadata for the properties of the given resource type
            </summary>
            <param name="parentResourceType">resource type whose properties metadata needs to be populated</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="unvisitedTypes">list of unvisited type</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.IsEntityOrComplexType(System.Type,System.Data.Services.Caching.ProviderMetadataCacheItem,System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType})">
            <summary>
            If the given type is a entity or complex type, it returns the resource type corresponding to the given type
            </summary>
            <param name="type">clr type</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="unvisitedTypes">list of unvisited types</param>
            <returns>resource type corresponding to the given clr type, if the clr type is entity or complex</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.InternalGetContainerForResourceType(System.Type,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceSet})">
            <summary>Get the resource set for the given clr type.</summary>
            <param name="type">clr type for which resource set name needs to be returned</param>
            <param name="entitySets">Available entity sets to consider.</param>
            <returns>The container for its type, null if not found.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.PopulateMetadataForDerivedTypes(System.Data.Services.Caching.ProviderMetadataCacheItem,System.Collections.Generic.Queue{System.Data.Services.Providers.ResourceType})">
            <summary>
            Find out all the derived types in the list of assemblies and then populate metadata for those types
            </summary>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <param name="unvisitedTypes">list of unvisited types</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.LoadETagProperties(System.Data.Services.Providers.ResourceType)">
            <summary>
            Loads the etag properties for the given resource type
            </summary>
            <param name="resourceType">resource type whose etag property names need to be loaded.</param>
            <returns>the list of properties that form the etag for the given resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.CreateResourceType(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.Data.Services.Providers.ResourceType,System.Data.Services.Caching.ProviderMetadataCacheItem)">
            <summary>
            returns the new resource type instance
            </summary>
            <param name="type">backing clr type for the resource.</param>
            <param name="kind">kind of the resource.</param>
            <param name="baseType">base type of the resource.</param>
            <param name="metadataCacheItem">Instance of ProviderMetadataCacheItem.</param>
            <returns>returns a new instance of the resource type containing all the metadata.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.HasGenericParameters(System.Type)">
            <summary>
            Checks whether the given type is a generic type with a generic parameter.
            </summary>
            <param name="type">type which needs to be checked.</param>
            <returns>Returns true, if the <paramref name="type"/> is generic and has generic parameters. Otherwise returns false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.BuildReflectionEpmInfo(System.Data.Services.Providers.ResourceType)">
            <summary>Given a resource type, builds the EntityPropertyMappingInfo for each EntityPropertyMappingAttribute on it</summary>
            <param name="currentResourceType">Resouce type for which EntityPropertyMappingAttribute discovery is happening</param>
        </member>
        <member name="M:System.Data.Services.Providers.ReflectionServiceProvider.BuildQueryRootDelegate(System.Data.Services.Providers.ResourceSet)">
            <summary>
            Return the set of IL instructions for getting the IQueryable instance for the given ResourceSet.
            </summary>
            <param name="resourceSet">ResourceSet instance.</param>
            <returns>Func to invoke to get IQueryable for the given ResourceSet.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.IsNullPropagationRequired">
            <summary>Gets a value indicating whether null propagation is required in expression trees.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.ContainerNamespace">
            <summary>Namespace name for the EDM container.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.ContainerName">
            <summary>Name of the EDM container</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.ProviderBehavior">
            <summary>
            Instance of provider behavior that defines the assumptions service should make
            about the provider.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ReflectionServiceProvider.DataSourceType">
            <summary>Target type for the data provider </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceProperty">
            <summary>Use this class to describe a property on a resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.name">
            <summary>The name of this property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.propertyResourceType">
            <summary>The kind of resource Type that this property refers to.
            For e.g. for collection properties, this would return the resource type,
            and not the collection type that this property refers to.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.kind">
            <summary>The kind of property this is in relation to the resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.canReflectOnInstanceTypeProperty">
            <summary> Is true, if this property is a actual clr property on the property type. In this case,
            astoria service will do reflection over the property type and get/set value for this property.
            False means that astoria service needs to go through the IDataServiceQueryProvider contract to get/set value for this provider.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.isReadOnly">
            <summary>Is true, if the resource property is set to readonly i.e. fully initialized and validated. No more changes can be made,
            once the resource property is set to readonly.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.mimeType">
            <summary>MIME type for the property, if it's a primitive value.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceProperty.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.#ctor(System.String,System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Providers.ResourceProperty" /> for an open property.</summary>
            <param name="name">Property name for the property as string.</param>
            <param name="kind">
              <see cref="T:System.Data.Services.Providers.ResourcePropertyKind" />.</param>
            <param name="propertyResourceType">The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the resource to which the property refers.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.SetReadOnly">
            <summary>Sets the resource property to read-only.</summary>
            <remarks>Once this method is called, no more changes can be made to resource property.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.IsOfKind(System.Data.Services.Providers.ResourcePropertyKind)">
            <summary>
            return true if this property is of the given kind
            </summary>
            <param name="checkKind">flag which needs to be checked on the current property kind</param>
            <returns>true if the current property is of the given kind</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.IsOfKind(System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourcePropertyKind)">
            <summary>
            return true if the given property kind is of the given kind
            </summary>
            <param name="propertyKind">kind of the property</param>
            <param name="kind">flag which needs to be checked on property kind</param>
            <returns>true if the kind flag is set on the given property kind</returns>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.CheckResourcePropertyKind(System.Data.Services.Providers.ResourcePropertyKind,System.String)">
            <summary>
            Validates that the given property kind is valid
            </summary>
            <param name="kind">property kind to check</param>
            <param name="parameterName">name of the parameter</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.ValidatePropertyParameters(System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType)">
            <summary>
            Validate the parameters of the resource property constructor.
            </summary>
            <param name="kind">kind of the resource property.</param>
            <param name="propertyResourceType">resource type that this property refers to.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceProperty.ThrowIfSealed">
            <summary>
            Checks if the resource type is sealed. If not, it throws an InvalidOperationException.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.CanReflectOnInstanceTypeProperty">
            <summary>Gets a value that indicates whether this property can be accessed through reflection on the declaring resource instance type.</summary>
            <returns>true when the property can be accessed through reflection; otherwise false.</returns>
            <remarks>A 'true' value here typically indicates astoria service will use reflection to get the property info on the declaring ResourceType.InstanceType.
            'false' means that astoria service will go through IDataServiceQueryProvider interface to get/set this property's value.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.ResourceType">
            <summary>Gets the type of the resource property.</summary>
            <returns>The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the resource property.</returns>
            <remarks>For collection, this will return the element of the collection, and not the collection.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.Name">
            <summary>Gets the name of the resource property.</summary>
            <returns>The name of the resource property as string.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.MimeType">
            <summary>Gets or sets MIME type for the property.</summary>
            <returns>String value that indicates MIME type.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.Kind">
            <summary>Gets the kind of the resource property with regard to the resource.</summary>
            <returns>A <see cref="T:System.Data.Services.Providers.ResourcePropertyKind" /> value.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.CustomState">
            <summary>Gets or sets custom state information about a resource property that is defined by the developer.</summary>
            <returns>State information.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.IsReadOnly">
            <summary>Gets a Boolean value that indicates whether the property is read-only.</summary>
            <returns>True if the property is read-only.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.TypeKind">
            <summary>The kind of type this property has in relation to the data service.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.Type">
            <summary>The type of the property.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceProperty.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this property.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourcePropertyKind">
            <summary>
            Enumeration for the kinds of property a resource can have.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Primitive">
            <summary>A primitive type property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Key">
            <summary>A property that is part of the key.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ComplexType">
            <summary>A complex (compound) property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceReference">
            <summary>A reference to another resource.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceSetReference">
            <summary>A reference to a resource set.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ETag">
            <summary>Whether this property is a etag property.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Collection">
            <summary>A collection of primitive or complex types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Stream">
            <summary>A Named Resource Stream</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceKeyKind">
            <summary>
            Enumeration for the kind of resource key kind
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceKeyKind.AttributedKey">
            <summary> if the key property was attributed </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceKeyKind.TypeNameId">
            <summary> If the key property name was equal to TypeName+ID </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceKeyKind.Id">
            <summary> If the key property name was equal to ID </summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceTypeKind">
            <summary>
            Enumeration for the kind of resource types
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.EntityType">
            <summary>Resource type with keys.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.ComplexType">
            <summary>Resource type without keys.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.Primitive">
            <summary>A resource type without keys and with no properties.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.Collection">
            <summary>Resource type representing a collection property of primitive or complex types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceTypeKind.EntityCollection">
            <summary>Resource type representing a collection of entities.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperationParameter">
            <summary>Use this type to represent a parameter on a service operation.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationParameter.EmptyServiceOperationParameterCollection">
            <summary>Empty parameter collection.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceOperationParameter.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>Creates a new instance of <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" />.</summary>
            <param name="name">Name of parameter.</param>
            <param name="parameterType">Data type of parameter.</param>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceOperationResultKind">
            <summary>
            Use this type to describe the kind of results returned by a service
            operation.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.DirectValue">
            <summary>
            A single direct value which cannot be further composed.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Enumeration">
            <summary>
            An enumeration of values which cannot be further composed.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithMultipleResults">
            <summary>
            A queryable object which returns multiple elements.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithSingleResult">
            <summary>
            A queryable object which returns a single element.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Void">
            <summary>
            No result return.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.BinarySerializer">
            <summary>Provides support for serializing responses in binary format.</summary>
            <remarks>
            The file histroy should show a BinaryExceptionTextWriter which is no longer used.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Serializers.BinarySerializer.outputStream">
            <summary>Stream to which output is sent.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.#ctor(System.IO.Stream)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.BinarySerializer"/> for the specified stream.</summary>
            <param name="output">Stream to which output should be sent.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.WriteRequest(System.Object)">
            <summary>Handles the complete serialization for the specified content.</summary>
            <param name="content">Single Content to write..</param>
            <remarks><paramref name="content"/> should be a byte array.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.BinarySerializer.WriteRequest(System.IO.Stream,System.Int32)">
            <summary>Handles the complete serialization for the specified stream.</summary>
            <param name="inputStream">Input stream to write out.</param>
            <param name="bufferSize">Buffer size to use during copying.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.MetadataSerializer">
            <summary>
            Provides support for serializing responses in CSDL format.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.MetadataSerializer.excludedSchemaValidationRules">
            <summary>
            The set of schema validation rules that we exclude from the default rule set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.MetadataSerializer.additionalSchemaValidationRules">
            <summary>
            The set of schema validation rules that we added to the default rule set.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.MetadataSerializer.edmxVersion">
            <summary>
            The fixed EDMX version used by Astoria.  Astoria has no reason to update the 
            version number since it breaks all the clients that read it including the
            Add Service Reference code in VS.  See bug 319354 for more info.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.ValidateModel(Microsoft.Data.Edm.IEdmModel,System.Version)">
            <summary>
            Validates the given <paramref name="model"/>.
            </summary>
            <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel"/> to check.</param>
            <param name="edmSchemaVersion">The EDM version to be used.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.MetadataSerializer.PrepareModelForSerialization(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.DataServiceConfiguration)">
            <summary>
            Prepares the service's model for serialization during a $metadata request by adding versioning annotations and running validation.
            </summary>
            <param name="provider">The service's provider</param>
            <param name="configuration">The service's configuration</param>
            <returns>Returns the prepared model.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.NonEntitySerializer">
            <summary>This class serializes non-entity resources (primitive, complex types, collection types, links, etc).</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer">
            <summary>Abstract base class for all serializers.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.RecursionLimit">
            <summary>Maximum recursion limit on serializers.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.NextPageQueryParametersToCopy">
            <summary>
            These query parameters can be copied for each next page link.
            Don't need to copy $skiptoken, $skip and $top because they are calculated every time.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.absoluteServiceUri">
            <summary>Base URI from which resources should be resolved.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.httpETagHeaderValue">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.service">
            <summary>Data provider from which metadata should be gathered.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.requestDescription">
            <summary>Description for the requested results.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.payloadMetadataParameterInterpreter">
            <summary>The payload metadata parameter interpreter.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.payloadMetadataPropertyManager">
            <summary>The accessor to use for payload properties which may be left out of the response payload.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.complexTypeCollection">
            <summary>Collection of complex types, used for cycle detection.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.recursionDepth">
            <summary>Depth of recursion.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.segmentInfo">
            <summary>information for each segment that is encountered during serialization.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.currentSkipTokenForCustomPaging">
            <summary>Current skip token object for custom paging.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.#ctor(System.Data.Services.RequestDescription,System.Uri,System.Data.Services.IDataService,System.String)">
            <summary>Initializes a new base Serializer, ready to write out a description.</summary>
            <param name="requestDescription">Description for the requested results.</param>
            <param name="absoluteServiceUri">Base URI from which resources should be resolved.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="httpETagHeaderValue">HTTP ETag header value.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetCollectionEnumerable(System.Object,System.String)">
            <summary>
            Starts enumeration of a collection property value.
            </summary>
            <param name="collectionPropertyValue">The value of the collection property. (nulls are handled by this method)</param>
            <param name="propertyName">The name of the property being serialized. (for error message purposes).</param>
            <returns>IEnumerable to enumerate over to get the items of the collection Property.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetPrimitiveValue(System.Object)">
            <summary>
            Returns the value of the primitive property.
            </summary>
            <param name="propertyValue">Value of the primitive property.</param>
            <returns>Returns the value of the primitive property.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.Flush">
            <summary>
            Flushes the content of the underlying writers
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteRequest(System.Data.Services.QueryResultInfo)">
            <summary>
            Handles the complete serialization for the specified <see cref="P:System.Data.Services.Serializers.Serializer.RequestDescription"/>.
            </summary>
            <param name="queryResults">Query results to enumerate.</param>
            <remarks>
            <paramref name="queryResults"/> should correspond to the RequestQuery of the 
            RequestDescription object passed while constructing this serializer
            We allow the results to be passed in
            to let the query be executed earlier than at result-writing time, which
            helps detect data and query errors where they can be better handled.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetExpandedElement(System.Data.Services.IExpandedResult)">
            <summary>Gets the expanded element for the specified expanded result.</summary>
            <param name="expanded">The expanded result to process.</param>
            <returns>The expanded element.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetExpandedProperty(System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ExpandedProjectionNode)">
            <summary>Gets the expandable value for the specified object.</summary>
            <param name="expanded">Expanded properties for the result, possibly null.</param>
            <param name="customObject">Object with value to retrieve.</param>
            <param name="property">Property for which value will be retrieved.</param>
            <param name="expandedNode">expanded node if present for the current navigation property whose value needs to be returned.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Data.Services.QueryResultInfo)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Result elements.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.AddToComplexTypeCollection(System.Object)">
            <summary>
            Adds the given object instance to complex type collection
            </summary>
            <param name="complexTypeInstance">instance to be added</param>
            <returns>true, if it got added successfully</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetSkipToken(System.Data.Services.IExpandedResult)">
            <summary>
            Gets the skip token object contained in the expanded result for standard paging.
            </summary>
            <param name="expanded">Current expanded result.</param>
            <returns>Skip token object if any.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetNextLinkUri(System.Object,System.Data.Services.IExpandedResult,System.Uri)">
            <summary>
            Obtains the URI for the link for next page in string format
            </summary>
            <param name="lastObject">Last object serialized to be used for generating $skiptoken</param>
            <param name="skipTokenExpandedResult">The <see cref="T:System.Data.Services.IExpandedResult"/> of the $skiptoken property of object corresponding to last serialized object</param>
            <param name="absoluteUri">Absolute response URI</param>
            <returns>URI for the link for next page</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.NeedNextPageLink(System.Data.Services.QueryResultInfo)">
            <summary>Is next page link needs to be appended to the feed</summary>
            <param name="queryResult">Current result enumerator.</param>
            <returns>true if the feed must have a next page link</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.IncrementSegmentResultCount">
            <summary>Increments the result count for the current segment, throws if exceeds the limit.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegmentForProperty(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ExpandedProjectionNode)">
            <summary>Pushes a segment from the stack of names being written.</summary>
            <param name='property'>Property to push.</param>
            <param name="currentResourceType">resource type of the current entity which is being serialized.</param>
            <param name="expandedProjectionNode">expanded node the given navigation property.</param>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if a segment was pushed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegmentForRoot">
            <summary>Pushes a segment for the root of the tree being written out.</summary>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if the segment was pushed, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PopSegmentName(System.Boolean)">
            <summary>Pops a segment name from the stack of names being written.</summary>
            <param name="needPop">Is a pop required. Only true if last push was successful</param>
            <remarks>Calls to this method should be balanced with previous calls to PushSegmentName.</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RecurseEnter">
            <summary>Marks the fact that a recursive method was entered, and checks that the depth is allowed.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RecurseLeave">
            <summary>Marks the fact that a recursive method is leaving.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.RemoveFromComplexTypeCollection(System.Object)">
            <summary>
            Remove the given object instance from the complex type collection
            </summary>
            <param name="complexTypeInstance">instance to be removed</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.ShouldExpandSegment(System.Data.Services.Providers.ResourceProperty,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ExpandedProjectionNode@)">
            <summary>Checks whether the property with the specified name should be expanded in-line.</summary>
            <param name='property'>Property which needs to be checked for expansion.</param>
            <param name="currentResourceType">resource type of the entity which is current getting serialized.</param>
            <param name="expandedNode">expandedNode for the given navigation property, if found.</param>
            <returns>true if the segment should be expanded; false otherwise.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetProjections">
            <summary>Returns a list of projection segments defined for the current segment.</summary>
            <returns>List of <see cref="T:System.Data.Services.Providers.ProjectionNode"/> describing projections for the current segment.
            If this method returns null it means no projections are to be applied and the entire resource
            for the current segment should be serialized. If it returns non-null only the properties described
            by the returned projection segments should be serialized.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetETagValue(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>
            Returns the ETag value from the host response header
            </summary>
            <param name="resource">resource whose etag value gets to be returned</param>
            <param name="resourceType">ResourceType instance containing metadata about <paramref name="resource"/>.</param>
            <returns>returns the etag value for the given resource</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetNavigationPropertyInfo(System.Data.Services.IExpandedResult,System.Object,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Returns the instance of ResourcePropertyInfo, which keeps track of whether we need to do the expand for the given navigation property.
            </summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="customObject">Resource or complex object with properties to write out.</param>
            <param name="currentResourceType">resourceType containing metadata about the current custom object</param>
            <param name="property">navigation property in question.</param>
            <returns>an instance of ResourcePropertyInfo, which keeps all the information about the given navigation property.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetPropertyValue(System.String,System.Data.Services.Providers.ResourceType,System.Object,System.Boolean)">
            <summary>
            Returns the property value in terms of OData object model (ODataPrimitiveValue, ODataNullValue, ODataComplexValue or ODataCollectionValue instance) for the given property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyResourceType">Type of the property.</param>
            <param name="propertyValue">Value of the property.</param>
            <param name="openProperty">True if the property is an open property, otherwise false.</param>
            <returns>Returns the property value in terms of OData object model (CLR type, ODataComplexValue or ODataCollectionValue instance) for the given property value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetComplexValue(System.String,System.Object)">
            <summary>
            Returns the ODataComplexValue instance for the given property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">Value of the property.</param>
            <returns>Returns the ODataComplexValue instance for the given property value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetCollection(System.String,System.Data.Services.Providers.CollectionResourceType,System.Object)">
            <summary>
            Returns the ODataCollectionValue instance for the given property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyResourceType">Type of the property.</param>
            <param name="propertyValue">Value of the property.</param>
            <returns>Returns the ODataCollectionValue instance for the given property value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetCurrentExpandedProjectionNode">
            <summary>Finds the <see cref="T:System.Data.Services.Providers.ExpandedProjectionNode"/> node which describes the current segment.</summary>
            <returns>The <see cref="T:System.Data.Services.Providers.ExpandedProjectionNode"/> which describes the current segment, or null
            if no such node is available.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetEnumerable``1(System.Collections.IEnumerable,System.Func{System.Object,``0})">
            <summary>
            Converts the given IEnumerable into IEnumerable<typeparamref name="T"/> 
            </summary>
            <typeparam name="T">Type parameter.</typeparam>
            <param name="enumerable">IEnumerable which contains the list of the objects that needs to be converted.</param>
            <param name="valueConverter">Delegate to use to convert the value.</param>
            <returns>An instance of IEnumerable<typeparamref name="T"/> which contains the converted values.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.AppendProjectionOrExpansionPath(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Helper method to append a path to the $expand or $select path list.</summary>
            <param name="pathsBuilder">The <see cref="T:System.Text.StringBuilder"/> to which to append the path.</param>
            <param name="parentPathSegments">The segments of the path up to the last segment.</param>
            <param name="lastPathSegment">The last segment of the path.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetPrimitiveValueAsODataValue(System.Data.Services.Providers.ResourceType,System.Object)">
            <summary>
            Returns the ODataValue representation of the given primitive value.
            </summary>
            <param name="propertyResourceType">The type of the property.</param>
            <param name="propertyValue">The primitive value.</param>
            <returns>An ODataNullValue or ODataPrimitiveValue representing the given value.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetPropertiesOfComplexType(System.Object,System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Returns all the properties of the given resource instance.
            </summary>
            <param name="resource">Resource instance whose properties needs to be written out.</param>
            <param name="resourceType">ResourceType containing metadata about the resource instance.</param>
            <param name="propertyName">Name of the parent property for which the properties are returned.</param>
            <returns>Returns all the properties of the given resource instance.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetNextPageQueryParametersForRootContainer">
            <summary>
            Builds the string corresponding to query parameters for top level results to be put in next page link.
            </summary>
            <returns>StringBuilder which has the query parameters in the URI query parameter format.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.BuildProjectionAndExpansionPathsForNode(System.Collections.Generic.List{System.String},System.Text.StringBuilder,System.Text.StringBuilder,System.Data.Services.Providers.ExpandedProjectionNode,System.Boolean@,System.Boolean@)">
            <summary>Recursive method which builds the $expand and $select paths for the specified node.</summary>
            <param name="parentPathSegments">List of path segments which lead up to this node. 
            So for example if the specified node is Orders/OrderDetails the list will contains two strings
            "Orders" and "OrderDetails".</param>
            <param name="projectionPaths">The result to which the projection paths are appended as a comma separated list.</param>
            <param name="expansionPaths">The result to which the expansion paths are appended as a comma separated list.</param>
            <param name="expandedNode">The node to inspect.</param>
            <param name="foundProjections">Out parameter which is set to true if there were some explicit projections on the inspected node.</param>
            <param name="foundExpansions">Our parameter which is set to true if there were some expansions on the inspected node.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetNextPageQueryParametersForExpandedContainer">
            <summary>
            Builds the string corresponding to query parameters for top level results to be put in next page link.
            </summary>
            <returns>StringBuilder which has the query parameters in the URI query parameter format.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.PushSegment(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ExpandedProjectionNode)">
            <summary>Pushes a segment from the stack of names being written.</summary>
            <param name="container">Container to push (possibly null).</param>
            <param name="expandedNode">ExpandedProjectionNode for the given segment.</param>
            <remarks>Calls to this method should be balanced with calls to PopSegmentName.</remarks>
            <returns>true if a segment was push, false otherwise</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.GetTopQueryParameter">
            <summary>
            Obtains the $top query parameter value.
            </summary>
            <returns>Integer value for $top or null otherwise.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.CurrentContainer">
            <summary>Container for the resource being serialized (possibly null).</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.IsRootContainer">
            <summary>Is current container the root container.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.Provider">
            <summary>
            Gets the Data provider from which metadata should be gathered.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.Service">
            <summary>
            Gets the Data service from which metadata should be gathered.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.AbsoluteServiceUri">
            <summary>Gets the absolute URI to the service.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.RequestDescription">
            <summary>
            Gets the RequestDescription for the request that is getting serialized.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.IsCustomPaged">
            <summary>Are we using custom paging?</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.PayloadMetadataParameterInterpreter">
            <summary>
            The payload metadata parameter interpreter.
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.PayloadMetadataPropertyManager">
            <summary>
            Gets the accessor to use for payload properties which may be left out of the response payload.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.ResourcePropertyInfo">
            <summary>Stores the resource property, its value and a flag which indicates whether this is a open property or not.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.ResourcePropertyInfo.CreateResourcePropertyInfo(System.Data.Services.Providers.ResourceProperty,System.Object,System.Data.Services.Providers.ExpandedProjectionNode,System.Boolean)">
            <summary>
            Creates a new instance of ResourcePropertyInfo.
            </summary>
            <param name="resourceProperty">resource property instance.</param>
            <param name="value">value for the resource property.</param>
            <param name="expandedNode">expanded node for the given property.</param>
            <param name="expand">whether the given property needs to be expanded or not.</param>
            <returns>an instance of resourcePropertyInfo, containing all information about serializing the given navigation property.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.ResourcePropertyInfo.Property">
            <summary>Returns the resource property.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.ResourcePropertyInfo.Value">
            <summary>Returns the value of the resource property.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.ResourcePropertyInfo.Expand">
            <summary>returns true, if the given property needs to be expanded.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.ResourcePropertyInfo.ExpandedNode">
            <summary>Expanded node for the given navigation property.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.SegmentInfo">
            <summary>
            Class to keep track of each segment that is encountered during serialization.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SegmentInfo.segmentContainers">
            <summary>Resolved segment containers.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SegmentInfo.segmentResultCounts">
            <summary>Result counts for segments.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SegmentInfo.projectionNodes">
            <summary>list of expandedProjectionNodes for segments.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SegmentInfo.#ctor">
            <summary>
            Initializes a new instance of SegmentInfo class
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SegmentInfo.PushSegment(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ExpandedProjectionNode)">
            <summary>
            Adds a new segment with the given name and set to the list of segments
            </summary>
            <param name="set">resource set to which the given segment belongs to.</param>
            <param name="projectionNode">ExpandedProjectionNode for the current segment.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SegmentInfo.GetSegmentName(System.Int32)">
            <summary>
            returns the name of the segment at the given index.
            </summary>
            <param name="index">index of the segment whose name needs to returned.</param>
            <returns>name of the segment at the given index.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SegmentInfo.PopSegment">
            <summary>
            Pops the most recent segment
            </summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.SegmentInfo.Count">
            <summary>returns the number of segments.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.SegmentInfo.CurrentResourceSet">
            <summary>returns the current resource set i.e. the resource set for the most recent segment encountered.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.SegmentInfo.CurrentExpandedNode">
            <summary>returns the projection node for the current segment.</summary>
        </member>
        <member name="P:System.Data.Services.Serializers.Serializer.SegmentInfo.CurrentResultCount">
            <summary>returns the result count of the current segment i.e. the result set of the most recent segment encountered.</summary>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.SkipTokenBuilder">
            <summary>
            Builds the $skiptoken=[value,value] representation for appending to the next page link URI.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilder.skipToken">
            <summary>Skip token string representation.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilder.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilder.GetSkipToken">
            <summary>Returns the string representation for $skiptoken query parameter.</summary>
            <returns>String representation for $skiptoken query parameter.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilder.GetSkipTokenProperties">
            <summary>Derived classes override this to provide the collection of values for skip token.</summary>
            <returns>Array of primitive values that comprise the skip token.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromExpandedResult">
            <summary>Obtains the skip token from IExpandedResult values.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromExpandedResult.skipTokenExpandedResult">
            <summary>IExpandedResult to lookup for skip token values.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromExpandedResult.skipTokenExpressionCount">
            <summary>Number of values in skip token.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromExpandedResult.#ctor(System.Data.Services.IExpandedResult,System.Int32)">
            <summary>Constructor.</summary>
            <param name="skipTokenExpandedResult">IExpandedResult to lookup for skip token values.</param>
            <param name="skipTokenExpressionCount">Number of values in skip token.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromExpandedResult.GetSkipTokenProperties">
            <summary>Obtains skip token values by looking up IExpandedResult.</summary>
            <returns>Array of primitive values that comprise the skip token.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromProperties">
            <summary>Obtains the skip token by reading properties directly from an object.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromProperties.element">
            <summary>Object to read skip token values from.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromProperties.properties">
            <summary>Collection of properties that comprise the skip token.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromProperties.provider">
            <summary>Current provider.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromProperties.#ctor(System.Object,System.Data.Services.Providers.DataServiceProviderWrapper,System.Collections.Generic.ICollection{System.Data.Services.Providers.ResourceProperty})">
            <summary>Constructor.</summary>
            <param name="element">Object to read skip token values from.</param>
            <param name="provider">Current provider.</param>
            <param name="properties">Collection of properties that comprise the skip token.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromProperties.GetSkipTokenProperties">
            <summary>Obtains skip token values by reading properties directly from the last object.</summary>
            <returns>Array of primitive values that comprise the skip token.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromCustomPaging">
            <summary>Provides the skip token obtained from the custom paging provider.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromCustomPaging.lastTokenValue">
            <summary>Skip token obtained from custom paging provider.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromCustomPaging.#ctor(System.Object[])">
            <summary>Constructor.</summary>
            <param name="lastTokenValue">Skip token obtained from custom paging provider.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.Serializer.SkipTokenBuilderFromCustomPaging.GetSkipTokenProperties">
            <summary>Provides the skip token values that were obtained from custom paging provider.</summary>
            <returns>Array of primitive values that comprise the skip token.</returns>
        </member>
        <member name="F:System.Data.Services.Serializers.NonEntitySerializer.writer">
            <summary>ODataMessageWriter instance which needs to be used to write the response.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.NonEntitySerializer.collectionWriter">
            <summary>
            Collection writer used to write out collection of entities/elements.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.#ctor(System.Data.Services.RequestDescription,System.Uri,System.Data.Services.IDataService,Microsoft.Data.OData.ODataMessageWriter)">
            <summary>Initializes a new NonEntitySerializer instance.</summary>
            <param name="requestDescription">Description of request.</param>
            <param name="absoluteServiceUri">Base URI from which resources should be resolved.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="messageWriter">ODataMessageWriter instance which needs to be used to write the response.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.Flush">
            <summary>
            Flushes the content of the underlying writers
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expandedResult">Expandd results on the specified <paramref name="element"/>.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Data.Services.QueryResultInfo)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded results for elements.</param>
            <param name="elements">Enumerator for elements to write.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.WriteLink(System.Object)">
            <summary>
            Write out the uri for the given element
            </summary>
            <param name="element">element whose uri needs to be written out.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.WriteLinkCollection(System.Data.Services.QueryResultInfo)">
            <summary>
            Write out the uri for the given elements.
            </summary>
            <param name="elements">Elements whose uri need to be written out.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.GetLinksCollection(System.Data.Services.QueryResultInfo,Microsoft.Data.OData.ODataEntityReferenceLinks)">
            <summary>
            Return the collection of links as ODataEntityReferenceLink instances
            </summary>
            <param name="elements">Elements whose uri need to be written out.</param>
            <param name="linksCollection">LinkCollection instance which represents the collection getting written out.</param>
            <returns>Return the collection of links as ODataEntityReferenceLink instances.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.GetEntityEditLink(System.Object)">
            <summary>
            Return the canonical uri (the edit link) of the element.
            </summary>
            <param name="element">Element whose canonical uri need to be returned.</param>
            <returns>Return the canonical uri of the element.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.ComputeContainerName">
            <summary>
            Computes the container name for the payload to write.
            </summary>
            <returns>The container name to use for writing.</returns>
            <remarks>Action and function names can be fully-qualified in the URI but must only use their local name in
            response payloads (since we treat '.', ':', '@' as reserved characters for property names and 
            use them as an extension mechanism).</remarks>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.GetTargetNavigationProperty">
            <summary>
            Get the edm property which is the target property for this request.
            </summary>
            <returns>an IEdmProperty which is the target property for this request.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.GetTargetPropertyDeclaringType">
            <summary>
            Get the parent type of the target property.
            </summary>
            <returns>IEdmStructuredType which is the parent type of the target property.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.NonEntitySerializer.GetTargetLinkEntitySet">
            <summary>
            Get the entitySet of a link request.
            </summary>
            <returns>IEdmEntitySet of the link.</returns>
        </member>
        <member name="T:System.Data.Services.Serializers.ServiceDocumentSerializer">
            <summary>
            Serializer for writing service document format.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.ServiceDocumentSerializer.writer">
            <summary>
            ODataMessageWriter instance which needs to be used for writing out the response payload.
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.ServiceDocumentSerializer.#ctor(Microsoft.Data.OData.ODataMessageWriter)">
            <summary>
            Creates a new instance of ServiceDocumentSerializer.
            </summary>
            <param name="writer">ODataMessageWriter instance to be used for writing out the response payload.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.ServiceDocumentSerializer.WriteServiceDocument(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>Writes the Service Document to the output stream.</summary>
            <param name="provider">DataServiceProviderWrapper instance.</param>
        </member>
        <member name="T:System.Data.Services.Serializers.EntitySerializer">
            <summary>Serializes results into the given format using the given message writer.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntitySerializer.messageWriter">
            <summary>ODataMessageWriter instance which needs to be used to write the response.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntitySerializer.contentFormat">
            <summary>The content format.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntitySerializer.dataServicesODataWriter">
            <summary>ODataWriter instance of write the feed/entry response.</summary>
        </member>
        <member name="F:System.Data.Services.Serializers.EntitySerializer.operationSerializer">
            <summary>Storage for a lazily-created operation serializer.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.#ctor(System.Data.Services.RequestDescription,System.Uri,System.Data.Services.IDataService,System.String,Microsoft.Data.OData.ODataMessageWriter,Microsoft.Data.OData.ODataFormat)">
            <summary>Initializes a new EntitySerializer instance.</summary>
            <param name="requestDescription">Request description.</param>
            <param name="absoluteServiceUri">Absolute URI to the service entry point.</param>
            <param name="service">Service with configuration and provider from which metadata should be gathered.</param>
            <param name="httpETagHeaderValue">HTTP ETag header value.</param>
            <param name="messageWriter">ODataMessageWriter instance which needs to be used to write the response.</param>
            <param name="contentFormat">The content format.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.Flush">
            <summary>
            Flushes the content of the underlying writers
            </summary>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.WriteTopLevelElement(System.Data.Services.IExpandedResult,System.Object)">
            <summary>Writes a single top-level element.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="element">Element to write, possibly null.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.WriteTopLevelElements(System.Data.Services.IExpandedResult,System.Data.Services.QueryResultInfo)">
            <summary>Writes multiple top-level elements, possibly none.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Enumerator for elements to write.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetAssociationLinkUrl(System.Data.Services.Serializers.EntityToSerialize,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Gets the association link URL.
            </summary>
            <param name="entityToSerialize">The entity to serialize.</param>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The association link url.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetAssociationLink(System.Data.Services.Serializers.EntityToSerialize,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Creates the association link for the given navigation property.
            </summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="navigationProperty">Navigation property whose association link needs to be returned.</param>
            <returns>
            Uri representing the association link for the navigation property.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.WriteEntry(System.Data.Services.IExpandedResult,System.Object,System.Boolean,System.Data.Services.Providers.ResourceType)">
            <summary>Write the entry element.</summary>
            <param name="expanded">Expanded result provider for the specified <paramref name="element"/>.</param>
            <param name="element">Element representing the entry element.</param>
            <param name="resourceInstanceInFeed">true if the resource instance being serialized is inside a feed; false otherwise.</param>
            <param name="expectedType">Expected type of the entry element.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetMediaResource(System.Data.Services.Serializers.EntityToSerialize,System.String)">
            <summary>
            Get the stream reference value for media resource (the default stream of an entity).
            </summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="title">The title for the element being written.</param>
            <returns>
            An instance of ODataStreamReferenceValue containing the metadata about the media resource.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetNamedStreamPropertyValue(System.Data.Services.Serializers.EntityToSerialize,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Get the ODataStreamReferenceValue instance containing the metadata for named stream property.
            </summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="namedStreamProperty">Named stream property for which the link element needs to be written.</param>
            <returns>
            An instance of ODataStreamReferenceValue containing all the metadata about the named stream property.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.WriteFeedElements(System.Data.Services.IExpandedResult,System.Data.Services.QueryResultInfo,System.Data.Services.Providers.ResourceType,System.String,System.Func{System.Uri},System.Func{System.Uri},System.Boolean)">
            <summary>
            Writes the feed element for the atom payload.
            </summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="elements">Collection of entries in the feed element.</param>
            <param name="expectedType">ExpectedType of the elements in the collection.</param>
            <param name="title">Title of the feed element.</param>
            <param name="getRelativeUri">Callback to get the relative uri of the feed.</param>
            <param name="getAbsoluteUri">Callback to get the absolute uri of the feed.</param>
            <param name="topLevel">True if the feed is the top level feed, otherwise false for the inner expanded feed.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetEntityProperties(System.Data.Services.Serializers.EntityToSerialize,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ProjectionNode})">
            <summary>Gets properties of the given entity type instance.</summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="projectionNodesForCurrentResourceType">List of all the properties that are being projected for the resource type, or null if no projections are applied.
              The list must be filtered to only nodes which apply to the current resource type.</param>
            <returns>The list of properties for the specified entity.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetEntityAssociationLinks(System.Data.Services.Serializers.EntityToSerialize,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ProjectionNode})">
            <summary>Gets association links of the entity specified by its type.</summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="projectionNodesForCurrentResourceType">List of all the properties that are being projected for the resource type, or null if no projections are applied.
              The list must be filtered to only nodes which apply to the current resource type.</param>
            <returns>The list of association links for the specified entity or null if there are no association links to be written.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetAllEntityProperties(System.Data.Services.Serializers.EntityToSerialize)">
            <summary>Returns an IEnumerable of ODataProperty instance for all structural properties in the current resource type
            and populates the navigation property information along with association links.</summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <returns>Returns an IEnumerable of ODataProperty instance for all structural properties in the current resource type..</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetProjectedEntityProperties(System.Data.Services.Serializers.EntityToSerialize,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ProjectionNode})">
            <summary>Returns an IEnumerable of ODataProperty instance for all projected properties in the <paramref name="projectionNodesForCurrentResourceType"/>
            and populates the navigation property information along with association links.</summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="projectionNodesForCurrentResourceType">List of all the properties that are being projected for the resource type, or null if no projections are applied.
              The list must be filtered to only nodes which apply to the current resource type.</param>
            <returns>Returns an IEnumerable of ODataProperty instance for all structural properties in the current resource type.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.WriteNavigationProperties(System.Data.Services.IExpandedResult,System.Data.Services.Serializers.EntityToSerialize,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ProjectionNode})">
            <summary>Writes all the navigation properties of the specified entity type.</summary>
            <param name="expanded">Expanded properties for the result.</param>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="resourceInstanceInFeed">true if the resource instance being serialized is inside a feed; false otherwise.</param>
            <param name="projectionNodesForCurrentResourceType">List of all the properties that are being projected for the resource type, or null if no projections are applied.
            The list must be filtered to only nodes which apply to the current resource type.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetNavigationLink(System.Data.Services.Serializers.EntityToSerialize,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Creates the navigation link for the given navigation property.
            </summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="navigationProperty">The metadata for the navigation property.</param>
            <returns>The navigation link for the given property.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetODataPropertyForEntityProperty(System.Data.Services.Serializers.EntityToSerialize,System.Data.Services.Providers.ResourceProperty)">
            <summary>Gets ODataProperty for the given <paramref name="property"/>.</summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="property">ResourceProperty instance in question.</param>
            <returns>A instance of ODataProperty for the given <paramref name="property"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.GetODataPropertyForOpenProperty(System.String,System.Object)">
            <summary>
            Returns the instance of ODataProperty with the given name and property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">Value of the property.</param>
            <returns>An instance of ODataProperty for the given property.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.TryGetAdvertisedActions(System.Data.Services.Serializers.EntityToSerialize,System.Boolean,System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataAction}@)">
            <summary>
            Tries to build the set of <see cref="T:Microsoft.Data.OData.ODataAction"/> to be advertised for the given resource.
            </summary>
            <param name="entityToSerialize">Entity that is currently being serialized.</param>
            <param name="resourceInstanceInFeed">true if the resource instance being serialized is inside a feed; false otherwise.</param>
            <param name="actions">The actions to advertise.</param>
            <returns>
            Whether any actions should be advertised.
            </returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.CreateODataWriter(System.Boolean)">
            <summary>
            Creates an ODataWriter for writing an entry or a feed.
            </summary>
            <param name="forFeed">true when writing a feed; false when writing an entry.</param>
            <returns>The ODataWriter to use for writing the feed or entry.</returns>
        </member>
        <member name="M:System.Data.Services.Serializers.EntitySerializer.WrapEntity(System.Object,System.Data.Services.Providers.ResourceType)">
            <summary>
            Wraps the entity in a structure which tracks its type and other information about it.
            </summary>
            <param name="entity">The entity to wrap.</param>
            <param name="resourceType">The type of the entity.</param>
            <returns>A structure containing the entity and some other information about it.</returns>
        </member>
        <member name="P:System.Data.Services.Serializers.EntitySerializer.OperationSerializer">
            <summary>
            Gets the operation serializer to use for actions and functions.
            </summary>
        </member>
        <member name="T:System.Data.Services.Serializers.TextSerializer">
            <summary>
            Provides support for serializing responses in text format.
            </summary>
        </member>
        <member name="F:System.Data.Services.Serializers.TextSerializer.writer">
            <summary>Writer to which output is sent.</summary>
        </member>
        <member name="M:System.Data.Services.Serializers.TextSerializer.#ctor(Microsoft.Data.OData.ODataMessageWriter)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Serializers.TextSerializer"/> for writing the response.</summary>
            <param name="messageWriter">ODataMessageWriter instance which needs to be used to write the response.</param>
        </member>
        <member name="M:System.Data.Services.Serializers.TextSerializer.WriteRequest(System.Object)">
            <summary>Handles the complete serialization for the specified content.</summary>
            <param name="content">Single Content to write..</param>
            <remarks><paramref name="content"/> should be a byte array.</remarks>
        </member>
        <member name="T:System.Data.Services.Providers.PrimitiveResourceTypeMap">
            <summary>
            Mapping between primitive CLR types, EDM type names, and ResourceTypes
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.PrimitiveResourceTypeMap.primitiveResourceTypes">
            <summary>Set of ResourceTypes for this instance of the map.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.PrimitiveResourceTypeMap.inheritablePrimitiveResourceTypes">
            <summary>Set of ResourceTypes that can be inherted.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.PrimitiveResourceTypeMap.builtInTypesMapping">
            <summary>List of primitive types supported by WCF Data Services and their corresponding EDM names.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.PrimitiveResourceTypeMap.inheritablePrimitiveClrTypes">
            <summary> List of primitive type that can be derived from.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.PrimitiveResourceTypeMap.primitiveResourceTypeMapping">
            <summary>Mapping between primitive CLR types, EDM type names, and ResourceTypes.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.PrimitiveResourceTypeMap.#ctor">
            <summary>
            Creates a new instance of the type map using the set of all primitive types supported by WCF Data Services.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.PrimitiveResourceTypeMap.#ctor(System.Collections.Generic.KeyValuePair{System.Type,System.String}[])">
            <summary>
            Creates a new instance of the type map using the specified set of types.
            </summary>
            <param name="primitiveTypesEdmNameMapping">Primitive CLR type-to-string mapping information to use to build the type map.</param>
        </member>
        <member name="M:System.Data.Services.Providers.PrimitiveResourceTypeMap.GetPrimitive(System.Type)">
            <summary>
            Returns the primitive ResourceType for the specified CLR type.
            </summary>
            <param name="type">CLR type to use for lookup.</param>
            <returns>Primitive ResourceType that maps to <paramref name="type"/> or null if the type is not mapped.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.PrimitiveResourceTypeMap.GetPrimitive(System.String)">
            <summary>
            Returns the primitive ResourceType for the specified EDM type name.
            </summary>
            <param name="fullEdmTypeName">Fully-qualified EDM type name to use for lookup.</param>
            <returns>Primitive ResourceType that maps to <paramref name="fullEdmTypeName"/> or null if the type is not mapped.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.PrimitiveResourceTypeMap.IsPrimitive(System.Type)">
            <summary>
            Whether or not the specified CLR type maps to a primitive ResourceType.
            </summary>
            <param name="type">CLR type to use for lookup</param>
            <returns>True if <paramref name="type"/> maps to a primitive ResourceType, otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.PrimitiveResourceTypeMap.TypeMap">
            <summary>
            Mapping between primitive CLR types, EDM type names, and ResourceTypes.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.PrimitiveResourceTypeMap.AllPrimitives">
            <summary>
            Returns all ResourceTypes for this type map.
            </summary>
        </member>
        <member name="T:System.Data.Services.Providers.MetadataProviderEdmModel">
            <summary>
            An <see cref="T:Microsoft.Data.Edm.IEdmModel"/> implementation backed by an IDSMP metadata provider.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.EntityTypeDefaultNullability">
            <summary>Default nullability for entity types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.PrimitiveOrComplexCollectionTypeDefaultNullability">
            <summary>Default nullability for V3 primitive or complex collection property types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.PrimitiveOrComplexCollectionItemTypeDefaultNullability">
            <summary>Default nullability for V3 primitive or complex collection property item types.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.EntityPrimitiveOrComplexCollectionTypeDefaultNullability">
            <summary>Default nullability for collection types used for collection navigation properties, and other collections returned from service operations.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.metadataProvider">
            <summary>Data service metadata provider instance.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.streamProviderWrapper">
            <summary>The stream provider wrapper instance.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.actionProviderWrapper">
            <summary>The action provider wrapper instance.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.directValueAnnotationsManager">
            <summary>The annotations manager.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.coreModel">
            <summary>Referenced core model.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.referencedModels">
            <summary>Referenced models.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.schemaTypeCache">
            <summary>
            The cache of all the schema types.
            </summary>
            <remarks>
            The schema type cache contains the entity types and complex types of the schema.
            Functions are part of the schema but currently not supported (outside the built-in EDM library functions).
            </remarks>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.derivedTypeMappings">
            <summary>
            The cache of types that derive directly from a given base type.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.resourceTypesPerNamespaceCache">
            <summary>
            The cache of all the collection types.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.entityContainerCache">
            <summary>
            The cache of all the entity containers.
            </summary>
            <remarks>
            The entity container cache contains the entity containers with the entity sets, association sets and function imports of the model.
            </remarks>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.primitiveOrComplexCollectionTypeCache">
            <summary>
            The cache of all the primitive or complex collection types.
            </summary>
            <remarks>The resource types in the cache are retrieved from the data service provider wrapper which ensures that they are atomized.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.entityPrimitiveOrComplexCollectionTypeCache">
            <summary>
            The cache of all the collection types used for collection navigation properties, and other collections returned from service operations.
            </summary>
            <remarks>The resource types in the cache are retrieved from the data service provider wrapper which ensures that they are atomized.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.associationSetByKeyCache">
            <summary>
            Cache of association set names by key
            </summary>
            <remarks>This allows detection of some error conditions, as well as allows us to skip fixing up a navigation property if its partner has been fixed up already.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.cacheState">
            <summary>The state of the metadata cache.</summary>
            <remarks>This field indicates what parts of the metadata have been fully cached.</remarks>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.materializationState">
            <summary>
            The state of the current metadata materialization (what metadata is currently being materialized).
            This is used to track that only methods are called that are expected in a given 
            materialization state.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.MetadataProviderEdmModel.currentMode">
            <summary>
            The current mode in which the model is being used.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.#ctor(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.DataServiceStreamProviderWrapper,System.Data.Services.Providers.DataServiceActionProviderWrapper)">
            <summary>Constructs a <see cref="T:System.Data.Services.Providers.MetadataProviderEdmModel"/> which wraps the given <see cref="T:System.Data.Services.Providers.DataServiceProviderWrapper"/> instance.</summary>
            <param name="provider"><see cref="T:System.Data.Services.Providers.DataServiceProviderWrapper"/> instance.</param>
            <param name="streamProviderWrapper">The stream provider wrapper instance.</param>
            <param name="actionProviderWrapper">The action provider wrapper instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindDeclaredEntityContainer(System.String)">
            <summary>
            Searches for an entity container with the given name in this model and returns null if no such entity container exists.
            </summary>
            <param name="name">The name of the entity container being found.</param>
            <returns>The requested entity container, or null if no such entity container exists.</returns>
            <remarks>
            Materialization state: there is currently no scenario that would call this method 
                (it is needed as part of the interface implementation). We don't require
                a materialization state.
            Cache state: 'EntityContainers' after the method returned.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindDeclaredType(System.String)">
            <summary>
            Searches for a schema type with the given name in this model and returns null if no such schema element exists.
            </summary>
            <param name="qualifiedName">The qualified name of the schema element being found.</param>
            <returns>The requested schema element, or null if no such schema element exists.</returns>
            <remarks>
            This method only supports by-name lookup for entity types, complex types and primitive types. 
            By-name lookup for association types is not supported.
            
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindDeclaredFunctions(System.String)">
            <summary>
            Searches for functions with the given name in this model and returns an empty enumerable if no such function exists.
            </summary>
            <param name="qualifiedName">The qualified name of the function being found.</param>
            <returns>A set functions sharing the specified qualified name, or an empty enumerable if no such function exists.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindDeclaredValueTerm(System.String)">
            <summary>
            Searches for a value term with the given name in this model and returns null if no such value term exists.
            </summary>
            <param name="qualifiedName">The qualified name of the value term being found.</param>
            <returns>The requested value term, or null if no such value term exists.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindDeclaredVocabularyAnnotations(Microsoft.Data.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotations specified by this model or a referenced model for a given element.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotations for the element.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindDirectlyDerivedTypes(Microsoft.Data.Edm.IEdmStructuredType)">
            <summary>
            Finds a list of types that derive directly from the supplied type.
            </summary>
            <param name="baseType">The base type that derived types are being searched for.</param>
            <returns>A list of types from this model that derive directly from the given type.</returns>
            <remarks>
            Materialization state: none required. This property should only be called when 
                it is ok to materialize the full metadata.
            Cache state: 'full' after the property returns.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.Microsoft#Data#OData#Metadata#IODataUriParserModelExtensions#FindFunctionImportsByBindingParameterTypeHierarchy(Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Finds all function imports with the given name which are bindable to an instance of the giving binding type or a more derived type.
            </summary>
            <param name="bindingType">The binding entity type.</param>
            <param name="functionImportName">The name of the function imports to find. May be qualified with an entity container name.</param>
            <returns>The function imports that match the search criteria.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.Microsoft#Data#OData#Metadata#IODataUriParserModelExtensions#FindEntitySetFromContainerQualifiedName(System.String)">
            <summary>
            Finds an entity set given a name that may be container qualified. If no container name is provided, the default container should be used.
            </summary>
            <param name="containerQualifiedEntitySetName">The name which might be container qualified. If no container name is provided, the default container should be used.</param>
            <returns>The entity set if one was found or null.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindServiceOperation(System.String)">
            <summary>
            Finds a service operation for the given name.
            </summary>
            <param name="serviceOperationName">The name of the service operation to find. May be qualified with an entity container name.</param>
            <returns>The function import representing a service operation or null if one could not be found with the given name.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindFunctionImportByBindingParameterType(Microsoft.Data.Edm.IEdmType,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds a function or action bound to the specific type with the given name.
            </summary>
            <param name="bindingType">The binding type.</param>
            <param name="functionImportName">The name of the function imports to find. May be qualified with an entity container name.</param>
            <param name="nonBindingParameterNamesFromUri">The parameter names of the non-binding parameters, if provided in the request URI.</param>
            <returns>The function import that matches the search criteria or null if there was no match.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureSchemaType(System.Data.Services.Providers.ResourceType)">
            <summary>
            Ensure the EDM schema type for the specified <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type for which to create an EDM schema type.</param>
            <returns>The EDM schema type found or created for the <paramref name="resourceType"/>.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureTypeReference(System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Creates an <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/> for the specified <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type to create an <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/> for.</param>
            <param name="customAnnotations">The optional annotations for the resource type; 
            the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureEntityPrimitiveOrComplexCollectionTypeReference(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets or creates a collection type reference for the <paramref name="itemResourceType"/>.
            </summary>
            <param name="itemResourceType">The item resource type to create an EDM collection type reference for.</param>
            <param name="collectionResourceType">The collection resource type to create an EDM collection type for.</param>
            <param name="customAnnotations">The optional annotations for the resource type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>A collection type reference for the <paramref name="itemResourceType"/> item type.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureDefaultEntityContainer">
            <summary>
            Gets or creates the default entity container.
            </summary>
            <returns>The default entity container.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureEntitySet(System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Add the given entity set to the model.
            </summary>
            <param name="resourceSet">ResourceSetWrapper instance to add.</param>
            <returns>an instance of IEdmEntitySet for the given <paramref name="resourceSet"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AddServiceOperation(System.Data.Services.Providers.OperationWrapper)">
            <summary>
            Add the given service operation to the model.
            </summary>
            <param name="operationWrapper">ServiceOperationWrapper instance to add.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureFullMetadataLoaded">
            <summary>
            Ensures all of the metadata is loaded. Should only be used for $metadata
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AssertCacheState(System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            Assert that the specified cache state has been reached (or exceeded).
            </summary>
            <param name="state">The <see cref="T:System.Data.Services.Providers.MetadataProviderState"/> that has to be reached.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AssertCacheEmpty">
            <summary>
            Asserts that the models caches are empty and that no types, containers, sets, etc have been built yet.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AssertMaterializationState(System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            Assert that a specified materialization state has been reached (or exceeded).
            </summary>
            <param name="state">The <see cref="T:System.Data.Services.Providers.MetadataProviderState"/> that has to be reached.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.PairUpNavigationProperty(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Fills in the rest of required information for navigation properties.
            </summary>
            <param name="resourceSet">Resource set to inspect.</param>
            <param name="resourceType">Resource type to inspect.</param>
            <param name="navigationProperty">Navigation property to inspect.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.ComputeSchemaTypeCacheKey(System.String,System.Data.Services.Providers.ResourceType)">
            <summary>
            Compute the cache key used to cache schema types (based on resource type names).
            </summary>
            <param name="namespaceName">The namespace name of the type.</param>
            <param name="resourceType">The resource type to use in the computation.</param>
            <returns>The cache key to be used for looking up and storing schema types.</returns>
            <remarks>
            This method is necessary because resource types don't always have a namespace. In such cases, the full name of the resource type is just its name.
            In EDM, however, the respective schema type will be created in the container namespace. As a result, we have to always include the namespace 
            in the key computation in order to find cached schema types for resource types.
            
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureCollectionItemTypeIsEntityPrimitiveOrComplex(System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets or creates an <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> for the <paramref name="itemResourceType"/>.
            </summary>
            <param name="itemResourceType">The item resource type to create an EDM collection type for.</param>
            <param name="collectionResourceType">The collection resource type to create an EDM collection type for.</param>
            <param name="customAnnotations">The optional annotations for the resource type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> instance for the <paramref name="itemResourceType"/> item type.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureCollectionItemTypeIsPrimitiveOrComplex(System.Data.Services.Providers.CollectionResourceType,System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets or creates an <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> for the <paramref name="itemResourceType"/>.
            </summary>
            <param name="collectionResourceType">The collection resource type that the edm type is being created from.</param>
            <param name="itemResourceType">The item resource type to create an EDM collection type for.</param>
            <param name="customAnnotations">The optional annotations for the resource type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> instance for the <paramref name="itemResourceType"/> item type.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureFullMetadata">
            <summary>
            Ensure that all the metadata elements have been created or create them.
            </summary>
            <remarks>
            Materialization state: full required. No change in materialization state.
            Cache state: none required. Cache state will be 'Full' after the method returned.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.GroupResourceTypesByNamespace(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceType},System.Boolean@,System.Boolean@)">
            <summary>
            Groups all visible resource types by there namespace.
            </summary>
            <param name="visibleTypes">The visible types in provider metadata.</param>
            <param name="hasVisibleMediaLinkEntry">Set to true if we see any visible MLE.</param>
            <param name="hasVisibleNamedStreams">Set to true if we see any visible NamedStream.</param>
            <remarks>
            Materialization state: full required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AddVisibleResourceTypeToTypesInNamespaceCache(System.Data.Services.Providers.ResourceType,System.Boolean@,System.Boolean@)">
            <summary>Add a resource type to the list of visible types for the type's namespace.</summary>
            <param name="resourceType">The resource type to add.</param>
            <param name="hasVisibleMediaLinkEntry">Set to true if we see any visible MLE.</param>
            <param name="hasVisibleNamedStreams">Set to true if we see any visible NamedStream.</param>
            <returns>True if we successfully added the type, false if the type is already in the hashset.</returns>
            <remarks>
            Materialization state: full required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureStructuredTypes(System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceType})">
            <summary>
            Ensure that all the schema types have been created or create them.
            </summary>
            <param name="visibleTypes">Visible types in provider metadata</param>
            <remarks>
            Materialization state: full required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureEntityContainers">
            <summary>
            Ensure that all entity containers have been created or create them.
            </summary>
            <remarks>
            Materialization state: EntityContainers required. No change in materialization state.
            Cache state: none required. 'EntityContainers' when the method returns.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.PairUpNavigationProperties">
            <summary>
            Match navigation properties with their partners for all entity sets.
            </summary>
            <remarks>
            Materialization state: Full required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.PairUpNavigationPropertiesForEntitySet(System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Match navigation properties with their partners for the given resource set.
            </summary>
            <param name="resourceSet">The resource set to supply the necessary data for matchign up the navigation properties.</param>
            <remarks>
            Materialization state: Full required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.PairUpNavigationPropertiesForEntitySetAndType(System.Data.Services.Providers.ResourceSetWrapper,System.Data.Services.Providers.ResourceType)">
            <summary>Match navigation properties with their partners for the given set and type</summary>
            <param name="resourceSet">Resource type to inspect.</param>
            <param name="resourceType">Resource set to inspect.</param>
            <remarks>
            Materialization state: Full required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.PairUpNavigationPropertyWithResourceAssociationSet(System.Data.Services.Providers.ResourceAssociationSet)">
            <summary>
            Fixes up the two navigation properties refered to by a resource association set
            </summary>
            <param name="resourceAssociationSet">Resource association set to inspect.</param>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AddEntityType(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> for the <paramref name="resourceType"/>
            and adds it to the schema type cache.
            </summary>
            <param name="resourceType">The resource type to create an EDM schema type for.</param>
            <param name="resourceTypeNamespace">
            The namespace name for the entity type to create. Note that the namespace on the <paramref name="resourceType"/>
            can be null in which case this will be the default (i.e., container) namespace for the type.
            </param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>
            This method will transitively ensure that all the base types of this type have been created.
            
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.ShouldPropertyBeIncludedInMetadata(System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Returns whether or not the property should be included in the $metadata output. 
            Navigation properties are only included when their target type is reachable from a visible set.
            Structural properties are always included.
            </summary>
            <param name="property">The property to check.</param>
            <returns>Whether the property should be included in $metadata.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.AddComplexType(System.Data.Services.Providers.ResourceType,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.Data.Edm.IEdmComplexType"/> for the <paramref name="resourceType"/>
            and adds it to the schema type cache.
            </summary>
            <param name="resourceType">The resource type to create an EDM schema type for.</param>
            <param name="resourceTypeNamespace">The namespace name for the entity type to create.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmComplexType"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>
            This method will transitively ensure that all the base types of this type have been created.
            
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsurePrimitiveOrComplexCollectionType(System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets or creates an <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> for the <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type to create an EDM collection type for.</param>
            <param name="customAnnotations">The optional annotations for the resource type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.EnsureEntityCollectionType(System.Data.Services.Providers.ResourceType,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Gets or creates an <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> for the <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type to create an EDM collection type for.</param>
            <param name="customAnnotations">The optional annotations for the resource type; the annotations can contain facets that need to be applied to the type reference.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmCollectionType"/> instance for the <paramref name="resourceType"/>.</returns>
            <remarks>
            This method is called with entity types (navigation properties) and entity collection types (collection types).
            
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.CreateProperty(Microsoft.Data.Edm.Library.EdmStructuredType,System.Data.Services.Providers.ResourceProperty)">
            <summary>
            Creates an <see cref="T:Microsoft.Data.Edm.IEdmProperty"/> for the <paramref name="resourceProperty"/>.
            </summary>
            <param name="declaringType">The declaring type of the <paramref name="resourceProperty"/>.</param>
            <param name="resourceProperty">The resource property to create an EDM property for.</param>
            <returns>An <see cref="T:Microsoft.Data.Edm.IEdmProperty"/> instance for the <paramref name="resourceProperty"/>.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.CacheSchemaType(Microsoft.Data.Edm.IEdmSchemaType)">
            <summary>
            Adds a schema type to the internal caches of the model.
            </summary>
            <param name="schemaType">The <see cref="T:Microsoft.Data.Edm.IEdmSchemaType"/> to cache.</param>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.FindExistingEntityContainer(System.String)">
            <summary>
            Searches for an entity container with the given name in this model and returns null if no such entity container exists.
            </summary>
            <param name="name">The name of the entity container being found.</param>
            <returns>The requested entity container, or null if no such entity container exists.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: EntityContainers required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.GetResourceTypesForNamespace(System.String)">
            <summary>
            Get the schema element hash set for the given namespace
            </summary>
            <param name="schemaElementNamespace">The namespace of the schema element.</param>
            <returns>resource type hash</returns>
            <remarks>
            Materialization state 'Full' or cache state 'Full' required. No change to either state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.GetTypeNamespace(System.Data.Services.Providers.ResourceType)">
            <summary>Gets the namespace of a resource type. If it's null, default to the container namespace.</summary>
            <param name="resourceType">The resource type to get the namespace name for.</param>
            <returns>The namespace of the <paramref name="resourceType"/>.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.GetContainerNamespace">
            <summary>Gets the namespace of the container. If it's null, default to the container name.</summary>
            <returns>The namespace of the default container.</returns>
            <remarks>
            Materialization state: none required. No change in materialization state.
            Cache state: none required. No change in cache state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.RunInState(System.Action,System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            First sets the materialization state, then runs the specified action and then
            resets the materialization state and checks the cache state.
            </summary>
            <param name="action">The action to run.</param>
            <param name="state">The <see cref="T:System.Data.Services.Providers.MetadataProviderState"/> to run the action in.</param>
            <remarks>
            The materialization is expected to be 'Incremental' when this method is called.
            The method should only be used in public API methods that are not re-entered by
            private/internal code since only public API code should set the materialization state.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.SetMaterializationState(System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            Sets the current materialization state of the metadata if the new state is 
            greater than the existing state.
            </summary>
            <param name="newState">The new state to set.</param>
            <remarks>
            This method assumes that it is never called with the <paramref name="newState"/> being the same as the current
            state. Nested calls in the same state are not allowed.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.HasMaterializationState(System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            Checks whether a specified materialization state has been reached (or exceeded).
            </summary>
            <param name="state">The state that has to be reached.</param>
            <returns>true if the materialization state has reached the state specified in <paramref name="state"/>; otherwise false.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.SetCacheState(System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            Sets the current cache state of the metadata if the new state is 
            greater than the existing state.
            </summary>
            <param name="newState">The new state to set.</param>
            <remarks>
            This method assumes that it is never called with the <paramref name="newState"/> 
            being set to MetadataProviderState.Incremental.
            </remarks>
        </member>
        <member name="M:System.Data.Services.Providers.MetadataProviderEdmModel.HasCacheState(System.Data.Services.Providers.MetadataProviderState)">
            <summary>
            Checks whether a specified cache state has been reached (or exceeded).
            </summary>
            <param name="state">The state that has to be reached.</param>
            <returns>true if the cache state has reached the state specified in <paramref name="state"/>; otherwise false.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.VocabularyAnnotations">
            <summary>
            Gets the vocabulary annoations defined in the model.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.ReferencedModels">
            <summary>
            Gets the referenced models.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.SchemaElements">
            <summary>
            Gets the collection of schema elements that are contained in this model.
            </summary>
            <remarks>
            Materialization state: none required. This property should only be called when 
                it is ok to materialize the full metadata.
            Cache state: 'full' after the property returns.
            </remarks>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.DirectValueAnnotationsManager">
            <summary>
            Gets the model's annotations manager.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.MetadataProvider">
            <summary>
            The IDSMP metadata provider backing this model.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.AnnotationsCache">
            <summary>
            Gets the vocabulary annotations cache for this model.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.Mode">
            <summary>
            The current mode in which the model is being used.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.MinMetadataEdmSchemaVersion">
            <summary>
            Minimum Edm Metadata Version. This is calculated during full metadata loading.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.MetadataProviderEdmModel.ShouldCheckForPropertyVisibility">
            <summary>
            Whether we are serializing $metadata document, and therefor may need to hide certain properties.
            </summary>
        </member>
        <member name="T:System.Data.Services.AstoriaResponseMessage">
            <summary>
            IODataResponseMessage interface implementation.
            </summary>
        </member>
        <member name="F:System.Data.Services.AstoriaResponseMessage.host">
            <summary>Reference to the IDataServiceHost object we are wrapping</summary>
        </member>
        <member name="F:System.Data.Services.AstoriaResponseMessage.host2">
            <summary>
            Host as IDataServiceHost2, or null if it does not implement it (just ISDH, then).
            </summary>
        </member>
        <member name="F:System.Data.Services.AstoriaResponseMessage.responseStream">
            <summary>
            Stream to which response payload needs to be written.
            Note that this is NOT always the IDSH Response Stream. For WCF we create an XmlWriterStream 
            when it is time to serialize.
            </summary>
        </member>
        <member name="F:System.Data.Services.AstoriaResponseMessage.responseHeadersWebCollection">
            <summary>
            Reference to the ResponseHeaders on the host, if it is IDSH2. Otherwise null.
            </summary>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.#ctor(System.Data.Services.IDataServiceHost)">
            <summary>
            Creates a new instance of AstoriaResponseMessage.
            </summary>
            <param name="host">Host instance associated with this request.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.GetHeader(System.String)">
            <summary>
            Returns the value of the given response header.
            </summary>
            <param name="headerName">Name of the response header.</param>
            <returns>Returns the value of the given response header.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.SetHeader(System.String,System.String)">
            <summary>
            Sets the value of the given response header. Passes the value through to the host immeadiately.
            After we call SetStreamthis should never be called again.
            </summary>
            <param name="headerName">Name of the header.</param>
            <param name="headerValue">Value for the header to be set.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.GetStream">
            <summary>
            Returns the stream to which response payload needs to be written.
            </summary>
            <returns>Returns the stream to which response payload needs to be written.</returns>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.SetStream(System.IO.Stream)">
            <summary>
            Set the response stream.
            </summary>
            <remarks>This gets called in the writer Action that DataService.HandleRequest() returns.  
            In the custom host scenario, the value will be the stream we get from the underlying host.  
            In the WCF scenario, the stream passed into the action (and thus this) will be the XmlWriterStream we create
            in DelegateBodyWriter. </remarks>
            <param name="stream">Stream to which the response needs to be written.</param>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.ClearSystemHeaderFor304">
            <summary>
            Clears the system header for304.
            </summary>
            <remarks>Only clearing specific system headers to avoid removing custom headers</remarks>
        </member>
        <member name="M:System.Data.Services.AstoriaResponseMessage.SetResponseHeaders(System.Data.Services.RequestDescription,System.Int32)">
            <summary>Sets the response status code and the default caching and versioning headers.</summary>
            <param name="description">The request description for the current request.</param>
            <param name="statusCode">The status code for the response.</param>
        </member>
        <member name="P:System.Data.Services.AstoriaResponseMessage.Headers">
            <summary>Gets all the response headers.</summary>
        </member>
        <member name="P:System.Data.Services.AstoriaResponseMessage.StatusCode">
            <summary>
            The ResponseStatusCode of the underlying host.
            </summary>
        </member>
        <member name="P:System.Data.Services.AstoriaResponseMessage.ResponseHeadersWebCollection">
            <summary>Response headers from the underlying host. Must be IDSH2 to succeed.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.EntityCollectionResourceType">
            <summary>Use this class to represent a collection of entities.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.EntityCollectionResourceType.itemType">
            <summary>Resource type of a single item in the collection.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.EntityCollectionResourceType.#ctor(System.Data.Services.Providers.ResourceType)">
            <summary>Constructor.</summary>
            <param name="itemType">Resource type of a single item in the collection.</param>
        </member>
        <member name="M:System.Data.Services.Providers.EntityCollectionResourceType.GetInstanceType(System.Data.Services.Providers.ResourceType)">
            <summary>Returns the instance type for a collection of specified <paramref name="itemType"/>.</summary>
            <param name="itemType">Resource type of a single item in the collection.</param>
            <returns>Instance type of the collection of <paramref name="itemType"/>.</returns>
        </member>
        <member name="M:System.Data.Services.Providers.EntityCollectionResourceType.GetName(System.Data.Services.Providers.ResourceType)">
            <summary>Returns EDM name of the type for a collection of specified <paramref name="itemType"/>.</summary>
            <param name="itemType">Resource type of a single item in the collection.</param>
            <returns>EDM name of the type of a collection of <paramref name="itemType"/>.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.EntityCollectionResourceType.ItemType">
            <summary>Resource type of a single item in the collection.</summary>
            <returns>The resource type.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.OperationKind">
            <summary>
            Enumeration for the kind of service operations
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationKind.ServiceOperation">
            <summary>V1 Service Operation</summary>
        </member>
        <member name="F:System.Data.Services.Providers.OperationKind.Action">
            <summary>Side-effecting operation.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceSetPathExpression">
            <summary>This class represents the path expression to calculate the target resource set of a Function or Action.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetPathExpression.PathSeparator">
            <summary>
            The separator for the binding properties on the path.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetPathExpression.pathExpression">
            <summary>
            Path expression to calculate the target resource set of a function or action.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetPathExpression.bindingParameter">
            <summary>
            The binding parameter to a function or action.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceSetPathExpression.pathSegments">
            <summary>
            Resource properties and type segments on the path.
            </summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetPathExpression.#ctor(System.String)">
            <summary> Creates a new instance of the <see cref="T:System.Data.Services.Providers.ResourceSetPathExpression" /> class. </summary>
            <param name="pathExpression">Path expression to calculate the target resource set of a function or procedure.</param>
            <remarks>The <paramref name="pathExpression"/> must start with the binding parameter name followed by navigation properties that are separated by "/".
            For example, if the binding parameter is customer, a valid path can be "customer/Orders/OrderDetails".</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetPathExpression.SetBindingParameter(System.Data.Services.Providers.OperationParameter)">
            <summary>
            Sets the binding resource type for the current path expression.
            </summary>
            <param name="parameter">The resource type this path expression will bind to.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetPathExpression.InitializePathSegments(System.Data.Services.Providers.DataServiceProviderWrapper)">
            <summary>
            Sets the binding resource type for the current path expression.
            </summary>
            <param name="provider">Provider wrapper instance.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceSetPathExpression.GetTargetSet(System.Data.Services.Providers.DataServiceProviderWrapper,System.Data.Services.Providers.ResourceSetWrapper)">
            <summary>
            Gets the target set from the binding set and path expression.
            </summary>
            <param name="provider">Provider instance to resolve the association set.</param>
            <param name="bindingSet">Binding resource set.</param>
            <returns>Returns the target resource set for the path expression.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetPathExpression.PathExpression">
            <summary> Path expression to calculate the target resource set of a function or procedure. </summary>
            <returns>The path expression.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceSetPathExpression.PathSegment">
            <summary>
            This struct holds the type and property info for a path segment.
            </summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetPathExpression.PathSegment.SourceType">
            <summary>The resource type where the property is defined.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceSetPathExpression.PathSegment.Property">
            <summary>The resource property of the segment.</summary>
        </member>
        <member name="T:System.Data.Services.Providers.ServiceAction">
            <summary>Use this class to represent a action.</summary>
        </member>
        <member name="F:System.Data.Services.Providers.ServiceAction.parameters">
            <summary>In-order parameters for this action.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceAction.#ctor(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.OperationParameterBindingKind,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceActionParameter})">
            <summary>Initializes a new <see cref="T:System.Data.Services.Providers.ServiceAction"/> instance.</summary>
            <param name="name">Name of the action.</param>
            <param name="returnType">Return type of the action.</param>
            <param name="resultSet">Result resource set of the action if the action returns an entity or a collection of entity; null otherwise.</param>
            <param name="operationParameterBindingKind">the kind of the operation parameter binding (Never, Sometimes, Always).</param>
            <param name="parameters">In-order parameters for this action.</param>
            <remarks>The value of <paramref name="operationParameterBindingKind"/> must be set to <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Sometimes"/> or
            <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Always"/> if the first parameter in <paramref name="parameters"/> is the binding parameter
            or <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Never"/> if the first parameter is not a binding parameter. If the value of <paramref name="operationParameterBindingKind"/>
            is set to <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Always"/> then the IDataServiceActionProvider.AdvertiseServiceAction method will not be called for the action
            and the action will be always advertised by the default convention.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceAction.#ctor(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.OperationParameterBindingKind,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceActionParameter},System.Data.Services.Providers.ResourceSetPathExpression)">
            <summary>Initializes a new <see cref="T:System.Data.Services.Providers.ServiceAction"/> instance.</summary>
            <param name="name">Name of the action.</param>
            <param name="returnType">Return type of the action.</param>
            <param name="operationParameterBindingKind">the kind of the operation parameter binding (Never, Sometimes, Always).</param>
            <param name="parameters">In-order parameters for this action; the first parameter is the binding parameter.</param>
            <param name="resultSetPathExpression">Path expression to calculate the result resource set of the function if the action returns an entity or a collection of entity; null otherwise.</param>
            <remarks>The value of <paramref name="operationParameterBindingKind"/> must be set to <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Sometimes"/> or
            <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Always"/> if the first parameter in <paramref name="parameters"/> is the binding parameter
            or <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Never"/> if the first parameter is not a binding parameter. If the value of <paramref name="operationParameterBindingKind"/>
            is set to <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Always"/> then the IDataServiceActionProvider.AdvertiseServiceAction method will not be called for the action
            and the action will be always advertised by the default convention.</remarks>
        </member>
        <member name="M:System.Data.Services.Providers.ServiceAction.#ctor(System.String,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceSetPathExpression,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceActionParameter},System.Data.Services.Providers.OperationParameterBindingKind)">
            <summary>
            Initializes a new <see cref="T:System.Data.Services.Providers.ServiceAction"/> instance.
            </summary>
            <param name="name">Name of the action.</param>
            <param name="returnType">Return type of the action.</param>
            <param name="resultSet">Result resource set of the action if the action returns an entity or a collection of entity; null otherwise.</param>
            <param name="resultSetPathExpression">Path expression to calculate the result resource set of the function if the action returns an entity or a collection of entity; null otherwise.</param>
            <param name="parameters">In-order parameters for this action; the first parameter is the binding parameter.</param>
            <param name="operationParameterBindingKind">the kind of the operation parameter binding (Never, Sometimes, Always).</param>
            <remarks>The value of <paramref name="operationParameterBindingKind"/> must be set to <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Sometimes"/> or 
            <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Always"/> if the first parameter in <paramref name="parameters"/> is the binding parameter 
            or <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Never"/> if the first parameter is not a binding parameter. If the value of <paramref name="operationParameterBindingKind"/> 
            is set to <see cref="F:System.Data.Services.Providers.OperationParameterBindingKind.Always"/> then the IDataServiceActionProvider.AdvertiseServiceAction method will not be called for the action
            and the action will be always advertised by the default convention.</remarks>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceAction.Parameters">
            <summary>Gets all the parameters for the given service action.</summary>
            <returns>The parameters for the given service action.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceAction.ReturnType">
            <summary>Gets the return type of the action.</summary>
            <returns>The return type of the action.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceAction.ResultSetPathExpression">
            <summary>Gets the path expression to calculate the result resource set of the function if the function returns an entity or a collection of entity.</summary>
            <returns>The Path expression to calculate.</returns>
        </member>
        <member name="P:System.Data.Services.Providers.ServiceAction.BindingParameter">
            <summary>Gets the binding parameter to this action; null if this action is top-level.</summary>
            <returns>The binding parameter to this action; null if this action is top-level.</returns>
        </member>
        <member name="T:System.Data.Services.Providers.ResourceReferentialConstraint">
            <summary>
            Stores information about the referential constraint.
            </summary>
        </member>
        <member name="F:System.Data.Services.Providers.ResourceReferentialConstraint.customAnnotations">
            <summary>list of custom annotations that needs to be flowed via $metadata endpoint.</summary>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceReferentialConstraint.#ctor(System.Data.Services.Providers.ResourceAssociationTypeEnd,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ResourceProperty})">
            <summary>
            Creates a new instance of ResourceReferentialConstraint.
            </summary>
            <param name="principalEnd">Principal end of the referential constraint.</param>
            <param name="dependentProperties">List of the properties from the dependent end that take part in this constraint.</param>
        </member>
        <member name="M:System.Data.Services.Providers.ResourceReferentialConstraint.AddCustomAnnotation(System.String,System.String,System.Object)">
            <summary>
            Add the given annotation to the list of annotations that needs to flowed via the $metadata endpoint
            </summary>
            <param name="annotationNamespace">NamespaceName to which the custom annotation belongs to.</param>
            <param name="annotationName">Name of the annotation.</param>
            <param name="annotationValue">Value of the annotation.</param>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceReferentialConstraint.PrincipalEnd">
            <summary>Returns the principal end for this referential constraint.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceReferentialConstraint.DependentProperties">
            <summary>List of properties of the dependent end that take part in this constraint.</summary>
        </member>
        <member name="P:System.Data.Services.Providers.ResourceReferentialConstraint.CustomAnnotations">
            <summary>
            Returns the list of custom annotations defined on this property.
            </summary>
        </member>
        <member name="T:System.Data.Services.XmlUtil">
            <summary>
            static xml utility function
            </summary>
        </member>
        <member name="M:System.Data.Services.XmlUtil.CreateXmlWriterSettings(System.Text.Encoding)">
            <summary>
            Creates a new XmlWriterSettings instance using the encoding.
            </summary>
            <param name="encoding">Encoding that you want to specify in the reader settings as well as the processing instruction</param>
            <returns>A writer settings instance with the given encoding.</returns>
        </member>
        <member name="M:System.Data.Services.XmlUtil.CreateXmlWriterAndWriteProcessingInstruction(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new XmlWriter instance using the specified stream and writers the processing instruction
            with the given encoding value
            </summary>
            <param name="stream"> The stream to which you want to write</param>
            <param name="encoding"> Encoding that you want to specify in the reader settings as well as the processing instruction </param>
            <returns>XmlWriter with the appropriate xml settings and processing instruction</returns>
        </member>
        <member name="T:AssemblyRef">
            <summary>
            Sets public key string for friend assemblies.
            </summary>
        </member>
        <member name="F:AssemblyRef.ProductPublicKey">
            <summary>ProductPublicKey is an official MS supported public key for external releases.</summary>
        </member>
        <member name="F:AssemblyRef.TestPublicKey">
            <summary>TestPublicKey is an unsupported strong key for testing and internal use only</summary>
        </member>
        <member name="F:AssemblyRef.ProductPublicKeyToken">
            <summary>Dont know what this is</summary>
        </member>
        <member name="F:AssemblyRef.OfficialSilverLightPublicKeyToken">
            <summary>Used for comparison with external assemblies for silverlight like Microsoft.VisualBasic.</summary>
        </member>
        <member name="F:AssemblyRef.OfficialDesktopPublicKeyToken">
            <summary>Used for comparison with external assemblies for desktop like Microsoft.VisualBasic.</summary>
        </member>
        <member name="M:System.Data.Services.TextResDescriptionAttribute.#ctor(System.String)">
            <summary>
                Constructs a new sys description.
            </summary>
            <param name='description'>
                description text.
            </param>
        </member>
        <member name="P:System.Data.Services.TextResDescriptionAttribute.Description">
            <summary>
                Retrieves the description text.
            </summary>
            <returns>
                description
            </returns>
        </member>
        <member name="T:System.Data.Services.TextRes">
             <summary>
                AutoGenerated resource class. Usage:
            
                    string s = TextRes.GetString(TextRes.MyIdenfitier);
             </summary>
        </member>
        <member name="T:System.Data.Services.Strings">
            <summary>
               Strongly-typed and parameterized string resources.
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ALinq_UnsupportedExpression(System.Object)">
            <summary>
            A string like "The expression type {0} is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.InvalidEnumValue(System.Object)">
            <summary>
            A string like "The value for the given enum type '{0}' is not valid. Please specify a valid enum value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.OpenNavigationPropertiesNotSupportedOnOpenTypes(System.Object)">
            <summary>
            A string like "Open navigation properties are not supported on OpenTypes. Property name: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_IEnumerableAlwaysMultiple(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' has a method '{1}' which is a generic IEnumerable but is marked with a SingleResultAttribute. Only IQueryable methods support this attribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_OverloadingNotSupported(System.Object,System.Object)">
            <summary>
            A string like "Overloading is not supported but type '{0}' has an overloaded method '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ParameterNotIn(System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' has a parameter '{1}' which is not an [in] parameter."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ParameterTypeNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' has a parameter '{1}' of type '{2}' which is not supported for service operations. Only primitive types are supported as parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_ServiceOperationMissingSingleEntitySet(System.Object,System.Object)">
            <summary>
            A string like "Service operation '{0}' produces instances of type '{1}', but having a single entity set for that type is required."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_UnsupportedReturnType(System.Object,System.Object)">
            <summary>
            A string like "Unable to load metadata for return type '{1}' of method '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BaseServiceProvider_UnknownResourceTypeInstance(System.Object)">
            <summary>
            A string like "The given resource type instance for the type '{0}' is not known to the metadata provider."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BasicExpandProvider_UnsupportedExpandBreadth(System.Object)">
            <summary>
            A string like "$expand does not support '{0}' properties expanded simultaneously on the same segment."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BasicExpandProvider_SDP_UnsupportedOrderingExpressionBreadth(System.Object)">
            <summary>
            A string like "$expand does not support '{0}' ordering expressions simultaneously on the top level type. Ordering expressions include top level $orderby expressions and the key columns in the top level entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.CallbackQueryOptionHandler_UnsupportedContentType(System.Object)">
            <summary>
            A string like "The requested media type '{0}' is not compatible with the $callback query option."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceActionProviderWrapper_ServiceActionBindingParameterNull(System.Object)">
            <summary>
            A string like "The binding parameter for service action '{0}' returned by IDataServiceActionProvider.GetServiceActionsByBindingParameterType() is null. The GetServiceActionsByBindingParameterType method must return service actions that are bindable to the given resource type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceActionProviderWrapper_ResourceTypeMustBeAssignableToBindingParameterResourceType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The service action '{0}' returned by IDataServiceActionProvider.GetServiceActionsByBindingParameterType() has a binding parameter of type '{1}' that is not bindable to the resource type '{2}'. The GetServiceActionsByBindingParameterType method must return service actions that are bindable to the given resource type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ResourceContainerNotReadonly(System.Object)">
            <summary>
            A string like "The resource set '{0}' returned by the provider is not read-only. Please make sure that all the resource sets are set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ResourceTypeNotReadonly(System.Object)">
            <summary>
            A string like "The resource type '{0}' returned by the provider is not read-only. Please make sure that all the types are set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ServiceOperationNotReadonly(System.Object)">
            <summary>
            A string like "The service operation '{0}' returned by the provider is not read-only. Please make sure that all the service operations are set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_MultipleEntitySetsWithSameName(System.Object)">
            <summary>
            A string like "More than one entity set with the name '{0}' was found. Entity set names must be unique."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_MultipleResourceTypesWithSameName(System.Object)">
            <summary>
            A string like "More than one resource type with the name '{0}' was found. Resource type names must be unique."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_MultipleServiceOperationsWithSameName(System.Object)">
            <summary>
            A string like "More than one service operation with the name '{0}' was found. Service operation names must be unique."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_CollectionOfComplexTypeWithDerivedTypes(System.Object)">
            <summary>
            A string like "Complex type '{0}' has derived types and is used as the item type in a collection property. Only collection properties containing complex types without derived types are supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_InvalidQueryRootType(System.Object,System.Object)">
            <summary>
            A string like "The IDataServiceQueryProvider.GetQueryRootForResourceSet({0}) method must return an IQueryable instance that can be converted to the type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ActionHasNoBindableSet(System.Object,System.Object)">
            <summary>
            A string like "The service action '{0}' has the binding parameter of type '{1}', but there is no visible resource set for that type. The service action should be made hidden or a resource set for type '{1}' should be made visible."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceProviderWrapper_ActionHasNoVisibleSetReachableFromPathExpression(System.Object,System.Object)">
            <summary>
            A string like "The service action '{0}' has the resource set path expression '{1}', but there is no visible resource set that can be reached from the binding parameter through the path expression. The service action should be made hidden or a resource set targeted by the path expression should be made visible."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceActionProviderWrapper_DuplicateAction(System.Object)">
            <summary>
            A string like "A service action with the name '{0}' already exists. Please make sure that the list returned by IDataServiceActionProvider.GetServiceActionsByBindingParameterType() contains unique service action names."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ExpandSegment_FilterShouldBeLambda(System.Object)">
            <summary>
            A string like "The filter for an expand segment should be a lambda type, but the specified filter is of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ExpandSegment_FilterBodyShouldReturnBool(System.Object)">
            <summary>
            A string like "The filter for an expand segment should return a boolean value, but the specified filter returns '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ExpandSegment_FilterBodyShouldTakeOneParameter(System.Object)">
            <summary>
            A string like "The filter for an expand segment should take a single parameter, but the specified filter takes '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_AmbiguousItemName(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Query parameter item '{0}' expected, but both '{1}' and '{2}' are inexact matches for it."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_IncomingTemplateMatchFragment(System.Object)">
            <summary>
            A string like "Fragment parts are not supported in template matches but the base URI '{0}' has one."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_IncomingTemplateMatchQuery(System.Object)">
            <summary>
            A string like "Query parts are not supported in template matches but the base URI '{0}' has one."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_XMethodIncorrectCount(System.Object)">
            <summary>
            A string like "The X-HTTP-Method header should have a single value, but has '{0}' instead."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_XMethodIncorrectValue(System.Object)">
            <summary>
            A string like "The X-HTTP-Method header should be 'PUT', 'MERGE', 'PATCH' or 'DELETE', but is '{0}' instead."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_QueryParameterMustBeSpecifiedOnce(System.Object)">
            <summary>
            A string like "Query parameter '{0}' is specified, but it should be specified exactly once."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_UnknownQueryParameter(System.Object)">
            <summary>
            A string like "The query parameter '{0}' begins with a system-reserved '$' character but is not recognized."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpContextServiceHost_IncomingMessagePropertyMustBeValidUriInstance(System.Object)">
            <summary>
            A string like "The incoming message property '{0}' on the current operation context must be a System.Uri object."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_EncodingNotSupported(System.Object)">
            <summary>
            A string like "Character set '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_EscapeCharWithoutQuotes(System.Object)">
            <summary>
            A string like "Value for MIME type parameter '{0}' is incorrect because it contained escape characters even though it was not quoted."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_EscapeCharAtEnd(System.Object)">
            <summary>
            A string like "Value for MIME type parameter '{0}' is incorrect because it terminated with escape character. Escape characters must always be followed by a character in a parameter value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.HttpProcessUtility_ClosingQuoteNotFound(System.Object)">
            <summary>
            A string like "Value for MIME type parameter '{0}' is incorrect because the closing quote character could not be found while the parameter value started with a quote character."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.IgnorePropertiesAttribute_InvalidPropertyName(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' is not a valid property name for type '{1}'. Please specify a valid property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PlainXml_IncorrectElementName(System.Object,System.Object)">
            <summary>
            A string like "Expecting XML element '{0}', but found '{1}' instead."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_DisallowMemberAccessForResourceSetReference(System.Object)">
            <summary>
            A string like "The '{0}' is not allowed. Member access or specifying a type identifier on a resource set reference is not allowed."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_ExpressionTypeMismatch(System.Object)">
            <summary>
            A string like "Expression of type '{0}' expected."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_IncompatibleOperand(System.Object,System.Object)">
            <summary>
            A string like "Operator '{0}' incompatible with operand type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_IncompatibleOperands(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Operator '{0}' incompatible with operand types '{1}' and '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_InvalidCharacter(System.Object)">
            <summary>
            A string like "Syntax error '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_NoApplicableFunction(System.Object,System.Object)">
            <summary>
            A string like "No applicable function found for '{0}' with the specified arguments. The functions considered are: {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_NotDoesNotSupportType(System.Object)">
            <summary>
            A string like "'not' operator does not support type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnaryTypeCheckOrTypeCastNotSupportedInSubScope(System.Object)">
            <summary>
            A string like "An applicable function could not be determined for '{0}' with the arguments specified. The unary '{0}' function is not supported inside an 'any' or 'all' function."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_NullOperatorUnsupported(System.Object)">
            <summary>
            A string like "The operator '{0}' is not supported for the 'null' literal; only equality checks are supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_OrderByDoesNotSupportType(System.Object)">
            <summary>
            A string like "Ordering does not support expressions of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnknownFunction(System.Object)">
            <summary>
            A string like "Unknown function '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnknownProperty(System.Object,System.Object)">
            <summary>
            A string like "No property '{0}' exists in type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnknownIdentifier(System.Object)">
            <summary>
            A string like "The identifier '{0}' is not defined."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnknownResourceType(System.Object)">
            <summary>
            A string like "A resource type named '{0}' does not exist."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnrecognizedLiteral(System.Object,System.Object)">
            <summary>
            A string like "Unrecognized '{0}' literal '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnterminatedLiteral(System.Object)">
            <summary>
            A string like "Unterminated literal in '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_UnterminatedStringLiteral(System.Object)">
            <summary>
            A string like "Unterminated string literal in '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequsetQueryParser_ExpectingLiteralInSkipToken(System.Object)">
            <summary>
            A string like "Skip token values are expected to be literals. Unrecognized literal '{0}' found."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_CollectionPropertyNotSupportedInExpression(System.Object)">
            <summary>
            A string like "The collection property '{0}' cannot be used in $filter or $orderby query expression. Collection properties are not supported with these query options."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryParser_DeclaredRangeVariable(System.Object)">
            <summary>
            A string like "The range variable '{0}' has already been declared."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_IncorrectArgumentFormat(System.Object,System.Object)">
            <summary>
            A string like "Incorrect format for {0} argument '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_PrimitivePropertyUsedAsNavigationProperty(System.Object,System.Object)">
            <summary>
            A string like "Property {1} on type {0} is of primitive type and cannot be used as a navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_ComplexPropertyAsInnerSelectSegment(System.Object,System.Object)">
            <summary>
            A string like "$select doesn't support projecting properties of complex type. Type {0}, property {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_CollectionPropertyAsInnerSelectSegment(System.Object,System.Object)">
            <summary>
            A string like "The projection from property '{1}' of type '{0}' is not valid. The $select query option does not support projecting items from a collection property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_ProjectedPropertyWithoutMatchingExpand(System.Object)">
            <summary>
            A string like "Only properties specified in $expand can be traversed in $select query options. Property {0}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_NamedStreamMustBeLastSegmentInSelect(System.Object)">
            <summary>
            A string like "The named stream '{0}' must be the last segment in a $select path."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_ServiceActionMustBeLastSegmentInSelect(System.Object)">
            <summary>
            A string like "The service action '{0}' must be the last segment in a $select path."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_SelectAndExpandCannotBeSpecifiedTogether(System.Object)">
            <summary>
            A string like "Both the $select and $expand query options could not be specified for the '{0}' property because the type qualifiers do not match. The type qualifier specified in the $expand query option must be the same as the one specified in the $select query option."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_CannotSpecifyOpenPropertyAndDeclaredPropertyAtTheSameTime(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' resolves to an open property, but the same property is already a declared property on type '{2}'. In a query URI, the same property cannot belong to two different types in the same type hierarchy. You must either remove one property from the query URI or use the same type identifier."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestQueryProcessor_QueryParametersPathCannotEndInTypeIdentifier(System.Object,System.Object)">
            <summary>
            A string like "The {0} query option is not valid because it contains a property path which ends with the type identifier '{1}'. Property paths in query options cannot end with a type identifier. Please make sure that property paths specified in query options end with a property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_PropertyNotFound(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' does not have a property named '{1}'; there is no service action named '{1}' that is bindable to the type '{0}'; and there is no type with the name '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_ResourceNotFound(System.Object)">
            <summary>
            A string like "Resource not found for the segment '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_ValueSegmentAfterScalarPropertySegment(System.Object,System.Object)">
            <summary>
            A string like "The segment '{1}' in the request URI is not valid. Since the segment '{0}' refers to a primitive type property, the only supported value from the next segment is '$value'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed(System.Object)">
            <summary>
            A string like "Resource Not Found - '{0}' refers to a service operation which does not allow further composition."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CannotQueryCollections(System.Object)">
            <summary>
            A string like "The request URI is not valid. Since the segment '{0}' refers to a collection, this must be the last segment in the request URI. All intermediate segments must refer to a single resource."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_MustBeLeafSegment(System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' must be the last segment in the URI because it is one of the following: $batch, $value, $metadata, a collection property, a named media resource, a service operation that does not return a value, or a service action."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_LinkSegmentMustBeFollowedByEntitySegment(System.Object,System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' must refer to a navigation property since the previous segment identifier is '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_MissingSegmentAfterLink(System.Object)">
            <summary>
            A string like "The request URI is not valid. There must a segment specified after the '{0}' segment and the segment must refer to a entity resource."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CannotSpecifyAfterPostLinkSegment(System.Object,System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' is not valid. Since the uri contains the '{1}' segment, there must be only one segment specified after that."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CountNotSupported(System.Object)">
            <summary>
            A string like "The request URI is not valid, $count cannot be applied to the segment '{0}' since $count can only follow a resource segment."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_CannotQuerySingletons(System.Object,System.Object)">
            <summary>
            A string like "The request URI is not valid, since the segment '{0}' refers to a singleton, and the segment '{1}' can only follow a resource collection."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_InvalidHttpMethodForNamedStream(System.Object,System.Object)">
            <summary>
            A string like "The URI '{0}' refers to a named stream and is not valid for '{1}' operation."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_SegmentDoesNotSupportKeyPredicates(System.Object)">
            <summary>
            A string like "The request URI is not valid. The segment '{0}' cannot include key predicates, however it may end with empty parenthesis."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_InvalidTypeIdentifier_MustBeASubType(System.Object,System.Object)">
            <summary>
            A string like "The type name '{0}' specified in the URI is not a valid type. Please make sure that the type name is valid and that it derives from the type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_InvalidTypeIdentifier_UnrelatedType(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' specified in the URI is neither a base type nor a sub-type of the previously-specified type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_TypeIdentifierCannotBeSpecifiedAfterTypeIdentifier(System.Object,System.Object)">
            <summary>
            A string like "Type identifier '{0}' in the URI cannot be specified immediately after '{1}' type identifier. There must be a property name specified between 2 type identifiers."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_UnbindableOperationsMustBeCalledAtRootLevel(System.Object)">
            <summary>
            A string like "The operation '{0}' is not bindable and must be called at the root level."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_MissingBindingParameter(System.Object)">
            <summary>
            A string like "Service action '{0}' requires a binding parameter, but it was invoked unbound."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_BindingParameterNotAssignableFromPreviousSegment(System.Object,System.Object)">
            <summary>
            A string like "The binding parameter for '{0}' is not assignable from the result of the uri segment '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.RequestUriProcessor_BatchedActionOnEntityCreatedInSameChangeset(System.Object)">
            <summary>
            A string like "Batched service action '{0}' cannot be invoked because it was bound to an entity created in the same changeset."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PathParser_LinksNotSupported(System.Object)">
            <summary>
            A string like "The request URI is not valid. $links cannot be applied to the segment '{0}' since $links can only follow an entity segment."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PathParser_ServiceOperationWithoutResultKindAttribute(System.Object)">
            <summary>
            A string like "The service operation '{0}' is missing a ODataServiceOperationResultKind attribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PathParser_ServiceOperationsWithSameName(System.Object)">
            <summary>
            A string like "Multiple Service Operations with the name '{0}' were found. There can only be one Service Operation with a given name in a model."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceSet_Sealed(System.Object)">
            <summary>
            A string like "The resource set '{0}' cannot be modified since it is already set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceSetPathExpression_PathExpressionMustStartWithBindingParameterName(System.Object,System.Object)">
            <summary>
            A string like "The path expression '{0}' is not a valid path expression. A valid path expression must start with the binding parameter name '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceSetPathExpression_PropertyNotFound(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The path expression '{0}' is not a valid expression because the segment '{1}' is not a type identifier or a property on the resource type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceSetPathExpression_PropertyMustBeEntityType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The path expression '{0}' is not a valid expression because the segment '{1}' is a property of type '{2}'. A valid path expression must only contain properties of entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceSetPathExpression_PathCannotEndWithTypeIdentifier(System.Object,System.Object)">
            <summary>
            A string like "The path expression '{0}' is not a valid expression because it ends with the type identifier '{1}'. A valid path expression must not end in a type identifier."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceSetPathExpression_EmptySegment(System.Object)">
            <summary>
            A string like "The path expression '{0}' is not a valid expression because it contains an empty segment or it ends with '/'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_InvalidValueForResourceTypeKind(System.Object)">
            <summary>
            A string like "ResourceTypeKind.Primitive, ResourceTypeKind.Collection and ResourceTypeKind.EntityCollection are not valid values for the '{0}' parameter."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_Sealed(System.Object)">
            <summary>
            A string like "The resource type '{0}' cannot be modified since it is already set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_MissingKeyPropertiesForEntity(System.Object)">
            <summary>
            A string like "The entity type '{0}' does not have any key properties. Please make sure that one or more key properties are defined for this entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_NamedStreamsOnlyApplyToEntityType(System.Object)">
            <summary>
            A string like "Adding named streams to the type '{0}' is not allowed. Named streams can only be added to entity types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_PropertyWithSameNameAlreadyExists(System.Object,System.Object)">
            <summary>
            A string like "A property with same name '{0}' already exists in type '{1}'. Please make sure that there is no property with the same name defined in one of the base types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_ComplexTypeCannotBeOpen(System.Object)">
            <summary>
            A string like "Complex types can not be marked as 'Open'. Error occurred for type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_InvalidResourceTypeKindInheritance(System.Object,System.Object)">
            <summary>
            A string like "A resource type of kind '{0}' cannot derive from a base resource type of kind '{1}'. Inheritance is only supported when resource types are of the same kind."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_CollectionItemCannotBeStream(System.Object)">
            <summary>
            A string like "The ItemType of a collection resource type cannot be of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceType_SpatialKeyOrETag(System.Object,System.Object)">
            <summary>
            A string like "A spatial property '{0}' cannot be used as key or ETag for the entity type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_Sealed(System.Object)">
            <summary>
            A string like "The resource property '{0}' cannot be modified since it is already set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_MimeTypeAttributeEmpty(System.Object)">
            <summary>
            A string like "MimeType for property '{0}' is not valid. Please make sure that the mime type is not empty."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_MimeTypeAttributeOnNonPrimitive(System.Object,System.Object)">
            <summary>
            A string like "The MimeType attribute is specified for property '{0}', which is of kind '{1}'. A MimeType can only be specified on properties that are of kind ResourcePropertyKind.Primitive."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_MimeTypeNotValid(System.Object,System.Object)">
            <summary>
            A string like "MIME type '{0}' for property '{1}' is not in 'type/subtype' format. Please specify a valid value for mime type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceProperty_PropertyKindAndResourceTypeKindMismatch(System.Object,System.Object)">
            <summary>
            A string like "'{0}' parameter does not match with the type of the resource type in parameter '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_CannotConvertValue(System.Object)">
            <summary>
            A string like "The resource contains value '{0}' which cannot be serialized."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_NullKeysAreNotSupported(System.Object)">
            <summary>
            A string like "The serialized resource has a null value in key member '{0}'. Null values are not supported in key members."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_ResultsExceedMax(System.Object)">
            <summary>
            A string like "The response exceeds the maximum {0} results per collection."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_UnsupportedTopLevelType(System.Object)">
            <summary>
            A string like "The top-level type '{0}' for this request is not supported for serialization."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_CollectionCanNotBeNull(System.Object)">
            <summary>
            A string like "The collection property '{0}' has a null value. Collection properties that return a null value are not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_CollectionPropertyValueMustImplementIEnumerable(System.Object)">
            <summary>
            A string like "The collection type returned by the property '{0}' does not implement IEnumerable. Collection properties must be of a type that implements IEnumerable."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Serializer_LoopsNotAllowedInComplexTypes(System.Object)">
            <summary>
            A string like "A circular loop was detected while serializing the property '{0}'. You must make sure that loops are not present in properties that return a collection property or complex type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_MimeTypeNotValid(System.Object,System.Object)">
            <summary>
            A string like "The MIME type '{0}' for service operation '{1}' is not in 'type/subtype' format."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_MimeTypeCannotBeEmpty(System.Object)">
            <summary>
            A string like "The MIME type specified for service operation '{0}' is not valid. The MimeType property cannot be set to null or empty."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_Sealed(System.Object)">
            <summary>
            A string like "The service operation '{0}' cannot be modified since it is already set to read-only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ResultTypeAndKindMustMatch(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The '{1}' parameter must be null when the '{0}' parameter value is '{2}', however the '{1}' parameter cannot be null when the '{0}' parameter is of any value other than '{2}'. Please make sure that the '{0}' parameter value is set according to the '{1}' parameter value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ResultSetMustBeNullForGivenResultType(System.Object,System.Object)">
            <summary>
            A string like "'{0}' must be null when '{1}' is null or not an EntityType."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ResultSetMustBeNullForGivenReturnType(System.Object,System.Object)">
            <summary>
            A string like "'{0}' must be null when '{1}' is null, not an entity type or not an entity collection type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ResultTypeAndResultSetMustMatch(System.Object,System.Object)">
            <summary>
            A string like "When '{0}' is an entity type, '{1}' cannot be null and the resource type of '{1}' must be assignable from '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ReturnTypeAndResultSetMustMatch(System.Object,System.Object,System.Object)">
            <summary>
            A string like "When '{0}' is an entity type or an entity collection type, '{1}' and '{2}' cannot be both null and the resource type of the result set must be assignable from '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_NotSupportedProtocolMethod(System.Object,System.Object)">
            <summary>
            A string like "An invalid HTTP method '{0}' was specified for the service operation '{1}'. Only the HTTP 'POST' and 'GET' methods are supported for service operations."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_DuplicateParameterName(System.Object)">
            <summary>
            A string like "A parameter with the name '{0}' already exists. Please make sure that every parameter has a unique name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_InvalidResultType(System.Object)">
            <summary>
            A string like "The resource type '{0}' is not a type that can be returned by a service operation. A service operation can only return values of an entity type, a complex type or any primitive type, other than the stream type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_InvalidReturnType(System.Object)">
            <summary>
            A string like "The resource type '{0}' is not a type that can be returned by a function or action. A function or action can only return values of an entity type, an entity collection type, a complex type, a collection type or any primitive type, other than the stream type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_MustBeBindableToUsePathExpression(System.Object)">
            <summary>
            A string like "The operation must be bindable when '{0}' is not null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_BindingParameterMustBeEntityToUsePathExpression(System.Object)">
            <summary>
            A string like "The binding parameter type must be an entity type or an entity collection type when '{0}' is not null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_ResultTypeCannotBeCollectionType(System.Object)">
            <summary>
            A string like "The '{0}' parameter cannot be an entity collection resource type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperation_NonBindingParametersCannotBeEntityorEntityCollection(System.Object,System.Object)">
            <summary>
            A string like "The '{0}' parameter is of resource type kind '{1}' and it is not the binding parameter. Parameter of type kind '{1}' is only supported for the binding parameter."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperationParameter_TypeNotSupported(System.Object,System.Object)">
            <summary>
            A string like "The service operation parameter '{0}' of type '{1}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_ErrorReadingEntry(System.Object)">
            <summary>
            A string like "Error reading syndication item: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_InvalidOpenPropertyType(System.Object)">
            <summary>
            A string like "The open property '{0}' has an value which is not of valid type.. Please make sure that the property type is supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.Syndication_InvalidOpenPropertyName(System.Object)">
            <summary>
            A string like "One or more open properties of the given instance of type '{0}' has a null or empty name specified."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_InvalidSourcePath(System.Object,System.Object)">
            <summary>
            A string like "The PropertyName property value '{1}' of EntityPropertyMappingAttribute on type '{0}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_InaccessiblePropertyOnType(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not present or is inaccessible."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_DuplicateEpmAttrsWithSameSourceName(System.Object,System.Object)">
            <summary>
            A string like "The PropertyName property value '{0}' on more than one EntityPropertyMappingAttribute on resource type '{1}' is provided more than once."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_EndsWithNonPrimitiveType(System.Object)">
            <summary>
            A string like "The property '{0}' provided at the end of the PropertyName property of the EntityPropertyMappingAttribute on a resource type is not a primitive type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_NonStringPropertyMappedToConditionAttribute(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is mapped to '{2}'. Mapping to '{2}' is only allowed for string properties."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_NamedStreamCannotBeMapped(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on the type '{1}' is of the type 'Edm.Stream'. Stream properties cannot be mapped with an entity property mapping."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_SpatialTypeCannotBeMapped(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on the type '{1}' is a spatial type. Spatial type properties cannot be mapped with an entity property mapping."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmSourceTree_CollectionPropertyCannotBeMapped(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on the type '{1}' is a collection. Collection properties cannot be mapped with an entity property mapping."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmTargetTree_InvalidTargetPath(System.Object)">
            <summary>
            A string like "The TargetName property path '{0}' set in the EntityPropertyMappingAttribute is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmTargetTree_AttributeInMiddle(System.Object)">
            <summary>
            A string like "The attribute identifier '{0}' is provided in the middle of the TargetName property of EntityPropertyMappingAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmTargetTree_DuplicateEpmAttrsWithSameTargetName(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The TargetName property '{0}' on more than one EntityPropertyMappingAttribute on resource type '{1}' have the same value. Conflicting properties are '{2}' and '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.EpmOnlyAllowedOnEntityTypes(System.Object)">
            <summary>
            A string like "EntityPropertyMapping attributes are only allowed to be specified on entity types. The attribute specification for resource type '{0}' is not allowed."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForEpmPropertyType(System.Object,System.Object)">
            <summary>
            A string like "The value of '{0}' property on type '{1}' is not one of the allowed values. Allowed values are 'true' or 'false'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForEpmPropertyMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The value of '{0}' property on member '{1}' of type '{2}' is not one of the allowed values. Allowed values are 'true' or 'false'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidAttributeForNonSyndicationItemsType(System.Object,System.Object)">
            <summary>
            A string like "The extended attribute '{0}' on type '{1}' is not allowed for current EntityPropertyMappingAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidAttributeForNonSyndicationItemsMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The extended attribute '{0}' on member '{1}' of type '{2}' is not allowed for current EntityPropertyMappingAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_MissingExtendedAttributeType(System.Object,System.Object)">
            <summary>
            A string like "The required extended attribute '{0}' is missing for resource type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForTargetTextContentKindPropertyType(System.Object,System.Object)">
            <summary>
            A string like "The value for TargetTextContentKind property value of '{0}' on type '{1}' for EntityPropertyMappingAttribute is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidValueForTargetTextContentKindPropertyMember(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The value for TargetTextContentKind property value of '{0}' on member '{1}' of type '{2}' for EntityPropertyMappingAttribute is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnknownPropertyNameInEpmAttributes(System.Object,System.Object)">
            <summary>
            A string like "The property path '{0}' specified for the EntityPropertyMappingAttribute does not correspond to any property in type '{1}' or one of its base types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_ResourceTypeNameNotExist(System.Object)">
            <summary>
            A string like "A resource type named '{0}' does not exist in the metadata."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_EntityTypeExpected(System.Object,System.Object)">
            <summary>
            A string like "An entity resource type is expected, however the resource type '{0}' is of type kind '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_ComplexTypeExpected(System.Object,System.Object)">
            <summary>
            A string like "A complex resource type is expected, however the resource type '{0}' is of type kind '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnknownResourceTypeForClrType(System.Object)">
            <summary>
            A string like "The clr type '{0}' is an unknown resource type to the metadata provider."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_PropertyNotDefinedOnType(System.Object,System.Object)">
            <summary>
            A string like "The resource type '{0}' does not define a property that is named '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_PublicPropertyNotDefinedOnType(System.Object,System.Object)">
            <summary>
            A string like "The CLR type '{0}' does not define a public property named '{1}'. All properties declared on types in the object model must be public."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_PropertyMustBeNavigationProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' must be a navigation property defined on the resource type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.OperationWrapper_OperationResourceSetNotVisible(System.Object,System.Object)">
            <summary>
            A string like "The operation '{0}' has the resource set '{1}' that is not visible. The operation '{0}' should be made hidden or the resource set '{1}' should be made visible."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.OperationWrapper_TargetSetFromPathExpressionNotNotVisible(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The service action '{0}' has the resource set path expression '{1}'. However there is no visible target resource set when it is bind to the resource set '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.OperationWrapper_PathExpressionRequiresBindingSet(System.Object)">
            <summary>
            A string like "The operation '{0}' contains a path expression and cannot be invoked as a top level operation."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ServiceOperationProvider_TypeIsAbstract(System.Object)">
            <summary>
            A string like "Unable to create ServiceOperationProvider. Type '{0}' is abstract."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_BatchExceedMaxBatchCount(System.Object)">
            <summary>
            A string like "The batch request exceeds the maximum {0} operations per request."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_BatchExceedMaxChangeSetCount(System.Object)">
            <summary>
            A string like "The batch request operation exceeds the maximum {0} changes per change set."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ChangeInterceptorIncorrectParameterCount(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' is marked as a change interceptor method but has {2} parameters. Two parameters are expected."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ContextTypeIsAbstract(System.Object,System.Object)">
            <summary>
            A string like "Unable to create data provider. Type '{0}' for data source in '{1}' is abstract."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ExpandCountExceeded(System.Object,System.Object)">
            <summary>
            A string like "The request includes {0} $expand segment(s), but the maximum allowed is {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_QueryInterceptorIncorrectParameterCount(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' is marked as a query interceptor method but has {2} parameters. Query interceptors should take no parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AttributeEntitySetNotFound(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Entity set '{0}' declared on attribute for method '{1}' of type '{2}' was not found."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationMethodNotVoid(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' us marked as an authorization method but has a return type of '{2}' when no return value is expected."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationMethodVoid(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' returns no value, but a '{2}' return type is required for a query interceptor method."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationParameterNotAssignable(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Parameter '{0}' of method '{1}' on type '{2}' is of type '{3}' but a type assignable from '{4}' is required."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationParameterNotResourceAction(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Parameter '{0}' of method '{1}' on type '{2}' is of type '{3}' but should be of type System.Data.Web.ResourceAction."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationReturnedNullQuery(System.Object,System.Object)">
            <summary>
            A string like "Method '{0}' on type '{1}' returned a null expression."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_AuthorizationReturnTypeNotAssignable(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Return type of method '{0}' on type '{1}' is of type '{2}' but a type assignable to '{3}' is required for a query interceptor."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ParameterIsOut(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' has a method '{1}' with parameter '{2}' declared as an [Out] parameter. The parameter should be declared as [In] only."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ETagCannotBeSpecified(System.Object)">
            <summary>
            A string like "If-Match or If-None-Match HTTP headers cannot be specified since the URI '{0}' refers to a collection of resources or has a $count or $link segment or has a $expand as one of the query parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_CannotPerformOperationWithoutETag(System.Object)">
            <summary>
            A string like "Since entity type '{0}' has one or more etag properties, If-Match HTTP header must be specified for DELETE/PUT operations on this type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ContentIdMustBeAnInteger(System.Object)">
            <summary>
            A string like "'{0}' is not a valid value for the 'Content-ID' header. In batch requests, the 'Content-ID' header must be an integer value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ContentIdMustBeUniqueInBatch(System.Object)">
            <summary>
            A string like "'{0}' is not a unique 'Content-ID' in the given batch requests. In batch requests, every 'Content-ID' must be a unique value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_VersionCannotBeParsed(System.Object,System.Object)">
            <summary>
            A string like "Request version '{0}' specified for header '{1}' is not valid. Please specify a valid version value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_InvalidRequestVersion(System.Object,System.Object)">
            <summary>
            A string like "Request version '{0}' is not a valid request version. The only supported versions are {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_InvalidMinDSV(System.Object,System.Object)">
            <summary>
            A string like "The MinDataServiceVersion '{0}' is not a valid version. The only supported versions are {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_MinDSVGreaterThanMPV(System.Object,System.Object)">
            <summary>
            A string like "The MinDataServiceVersion '{0}' is greater than the MaxProtocolVersion property in configuration '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_DSVTooLow(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The DataServiceVersion '{0}' is too low for the request. The lowest supported version is '{1}.{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_MaxDSVTooLow(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The MaxDataServiceVersion '{0}' is too low for the response. The lowest supported version is '{1}.{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_MaxDSVLowerThanMinDSV(System.Object,System.Object)">
            <summary>
            A string like "The MaxDataServiceVersion '{0}' is lower than the MinDataServiceVersion '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_RequestVersionMustBeLessThanMPV(System.Object,System.Object)">
            <summary>
            A string like "Request version '{0}' is too high for the server. Please specify a request version less than or equal to '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_CannotUpdateKeyProperties(System.Object)">
            <summary>
            A string like "Since '{0}' is a key property, it cannot be updated."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_ETagValueNotValid(System.Object)">
            <summary>
            A string like "The etag value '{0}' specified in one of the request headers is not valid. Please make sure only one etag value is specified and is valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_SDP_PageSizeMustbeNonNegative(System.Object,System.Object)">
            <summary>
            A string like "The given page size {0} for entity set '{1}' should have a non-negative value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataService_SDP_SkipTokenNotMatchingOrdering(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The number of keys '{0}' in skip token with value '{1}' did not match the number of ordering constraints '{2}' for the resource type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceAssociationSetEnd_ResourceTypeMustBeTheDeclaringType(System.Object,System.Object)">
            <summary>
            A string like "The resource type '{0}' specified for the ResourceAssociationSetEnd is not valid for resource property '{1}'. The resource type must be the declaring type of the property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ResourceAssociationSet_MultipleAssociationSetsForTheSameAssociationTypeMustNotReferToSameEndSets(System.Object,System.Object,System.Object)">
            <summary>
            A string like "ResourceAssociationSets '{0}' and '{1}' have a ResourceAssociationSetEnd referring to the same EntitySet '{2}' through the same AssociationType. Make sure that if two or more AssociationSets refer to the same AssociationType, the ends must not refer to the same EntitySet. For CLR context, this could happen if multiple entity sets have entity types that have a common ancestor and the ancestor has a property of derived entity types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataSerializer_NoResourceAssociationSetForNavigationProperty(System.Object,System.Object)">
            <summary>
            A string like "No visible ResourceAssociationSet found for navigation property '{0}' on type '{1}'. There must be at least one ResourceAssociationSet for each navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataSerializer_AccessEnabledTypeNoLongerExists(System.Object)">
            <summary>
            A string like "Resource type '{0}' was registered by DataServiceConfiguration.EnableAccess(), however it no longer exists in the data service provider."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataSerializer_NamedStreamsOnDerivedEntityTypesNotSupported(System.Object,System.Object)">
            <summary>
            A string like "Named streams are not supported on derived entity types. Entity Set '{1}' has a instance of type '{0}', which is an derived entity type and has named streams. Please remove all named streams from type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataSerializer_ModelValidationErrors(System.Object)">
            <summary>
            A string like "An IEdmModel instance was found that failed validation. The following errors were reported:\r\n{0}"
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_NoChangesAllowed(System.Object)">
            <summary>
            A string like "No changes are allowed to the configuration after '{0}' is invoked."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_ResourceSetNameNotFound(System.Object)">
            <summary>
            A string like "The given name '{0}' was not found in the entity sets."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_ResourceTypeNameNotFound(System.Object)">
            <summary>
            A string like "The given name '{0}' was not found in the entity types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_ServiceNameNotFound(System.Object)">
            <summary>
            A string like "The given name '{0}' was not found in the service operations."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_NotComplexType(System.Object)">
            <summary>
            A string like "The given type '{0}' is not a complex type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceConfiguration_ResponseVersionIsBiggerThanProtocolVersion(System.Object,System.Object)">
            <summary>
            A string like "The response requires that version {0} of the protocol be used, but the MaxProtocolVersion of the data service is set to {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceHost_MoreThanOneQueryParameterSpecifiedWithTheGivenName(System.Object,System.Object)">
            <summary>
            A string like "More than one query parameter specified with the name '{0}' in request URI '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForPostOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for POST operation. For POST operations, the URI must refer to a service operation or an entity set."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForPutOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for PUT operation. The URI must point to a single resource for PUT operations."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForMergeOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for MERGE operation. The URI must point to a single resource for MERGE operations. MERGE operation against a media resource is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForPatchOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for PATCH operation. The URI must point to a single resource for PATCH operations. PATCH operation against a media resource is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForDeleteOperation(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid for DELETE operation. The URI must refer to a single resource from an entity set or from a property referring to a set of resources."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidUriForMediaResource(System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid. The segment before '$value' must be a Media Link Entry or a primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_KeyCountMismatch(System.Object)">
            <summary>
            A string like "The number of keys specified in the URI does not match number of key properties for the resource '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ExpectMLEPayloadGotNonMLEPayload(System.Object)">
            <summary>
            A string like "The resource type '{0}' is a Media Link Entry. However, in the payload of the request the &lt;m:properties&gt; element was serialized as a child of the &lt;atom:content&gt; element instead of the &lt;atom:entry&gt; element. This indicates that the client is not serializing the resource as a Media Link Entry."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ExpectNonMLEPayloadGotMLEPayload(System.Object)">
            <summary>
            A string like "The resource type '{0}' is not a Media Link Entry. However, in the payload of the request the &lt;m:properties&gt; element was serialized as a child of the &lt;atom:entry&gt; element instead of the &lt;atom:content&gt; element. This indicates that the client is incorrectly serializing the resource as a Media Link Entry."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_FullyQualifiedActionName(System.Object,System.Object)">
            <summary>
            A string like "The service action identifier '{0}' is invalid. Service action identifiers must not contain a '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.InvalidUri_OpenPropertiesCannotBeCollection(System.Object)">
            <summary>
            A string like "The property '{0}' referred in the request URI is a open property and refers to a collection of resources. Open properties are not allowed to contain collections."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.PropertyRequiresNonNegativeNumber(System.Object)">
            <summary>
            A string like "Property '{0}' requires a non-negative value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.DataServiceStreamProviderWrapper_MustNotSetContentTypeAndEtag(System.Object)">
            <summary>
            A string like "The method '{0}' must not set the HTTP response headers 'Content-Type' and 'ETag'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_DeepRecursion(System.Object)">
            <summary>
            A string like "Recursion reached allowed limit: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_RequestUriDoesNotHaveTheRightBaseUri(System.Object,System.Object)">
            <summary>
            A string like "The URI '{0}' is not valid since it is not based on '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_RequestUriCannotBeBasedOnBaseUri(System.Object,System.Object)">
            <summary>
            A string like "Failed to create absolute URI. The URI '{0}' is not valid because it cannot be based on '{1}'. When the URI for an operation is relative, you must remove all preceding forward slashes."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.NoEmptyConstructorFoundForType(System.Object)">
            <summary>
            A string like "A constructor which accepts no parameters was not found for type '{0}'. Every entity type must have a constructor which accepts no parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.CannotCreateInstancesOfAbstractType(System.Object)">
            <summary>
            A string like "The type '{0}' is an abstract type. For PUT, POST and DELETE operations, the type specified must be a concrete type with a constructor that accepts no parameters."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ErrorInConvertingPropertyValue(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. Error encountered in converting the value from request payload for property '{0}' to type '{1}', which is the property's expected type. See inner exception for more detail."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidPropertyNameSpecified(System.Object,System.Object)">
            <summary>
            A string like "Could not find a property named '{0}' on type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidContentType(System.Object,System.Object)">
            <summary>
            A string like "The content type '{0}' is not valid for type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidContentTypeForOpenProperty(System.Object,System.Object)">
            <summary>
            A string like "The content type '{0} is not valid for open property '{1}'. For open properties, the content type must be 'text/plain'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_UnsupportedRequestContentType(System.Object)">
            <summary>
            A string like "The content type '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_DereferencingNullPropertyValue(System.Object)">
            <summary>
            A string like "Error processing request stream. The value of the property '{0}' specified is null and hence you cannot dereference the property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CannotSetCollectionsToNull(System.Object)">
            <summary>
            A string like "Error processing request stream. The property '{0}' represents a collection of resources and hence cannot be set to null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CannotSetTopLevelResourceToNull(System.Object)">
            <summary>
            A string like "Error processing request stream. Since URI '{0}' points directly to a top level resource, it cannot be set to null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidContentTypeForRequestUri(System.Object,System.Object)">
            <summary>
            A string like "The content-type '{0}' is not a valid content type for this request. The content-type must be one of the following: {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ErrorInSettingPropertyValue(System.Object)">
            <summary>
            A string like "Error processing request stream. Error encountered in setting value for property '{0}'. Please verify that the value is correct."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_PropertyValueCannotBeSet(System.Object)">
            <summary>
            A string like "Error processing request stream. Property '{0}' is a read-only property and cannot be updated. Please make sure that this property is not present in the request payload."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ExceedsMaxObjectCountOnInsert(System.Object)">
            <summary>
            A string like "The request exceeds the maximum {0} resources that can be referenced in a single POST request."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_NullCollectionNotSupported(System.Object)">
            <summary>
            A string like "The value of the property '{0}' is null. Properties that are a collection type of primitive or complex types cannot be null."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CollectionTypeExpected(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' specified on collection property '{1}' is not a collection type. Only a collection type can be specified on a collection property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CollectionItemTypeDoesntMatch(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The collection type specified on property '{1}' that contains an item type '{0}' is not of the declared collection type, which is a collection type containing items of type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CollectionItemCanNotBeNull(System.Object)">
            <summary>
            A string like "An item in the collection property '{0}' has a null value. Collection properties that contain a null item are not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CollectionItemWrongType(System.Object,System.Object)">
            <summary>
            A string like "An item in the collection property '{0}' is not of the correct type. All items in this collection property must be of type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_OpenCollectionProperty(System.Object)">
            <summary>
            A string like "An open collection property '{0}' was found. In OData, open collection properties are not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_PropertyMustBeArray(System.Object)">
            <summary>
            A string like "Error processing request stream. The payload for property '{0}' must represent a valid array format for collection properties."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeName(System.Object)">
            <summary>
            A string like "Error processing request stream. The type name '{0}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeSpecified(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The type name '{0}' is not valid for the given URI it represents. The expected type must be '{1}' or one of its derived types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_ErrorInConvertingNumericValues(System.Object)">
            <summary>
            A string like "Error processing request stream. Values for properties of type 'decimal' and 'int64' must be quoted in the payload. Make sure the value for property '{0}' is quoted."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_InvalidKeyword(System.Object)">
            <summary>
            A string like "Error processing request stream. '{0}' is not a valid JSON literal. 'true', 'false' and 'null' are only valid JSON literals. Make sure they are all lower-case."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_MissingNameValueSeperator(System.Object)">
            <summary>
            A string like "Error processing request stream. Missing ':' after '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_UriMetadataNotAllowedOnComplexType(System.Object)">
            <summary>
            A string like "Error processing request stream. The '__metadata' for complex type '{0}' may not specify an element named 'uri'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequestStream_CollectionMissingResults(System.Object)">
            <summary>
            A string like "Error processing request stream. The 'results' element could not be found in the collection property '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidNavigationPropertyName(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. There is no navigation property '{0}' on type '{1}'. title attribute value on related link elements must be a valid navigation property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidValue(System.Object)">
            <summary>
            A string like "Error processing request stream. The value specified for element '{0}' is not valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_CannotSpecifyValueOrChildElementsForNullElement(System.Object)">
            <summary>
            A string like "Error processing request stream. Element '{0}' cannot have child elements or a value specified if it has a null attribute with true value."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_OnlyEntityTypesMustBeSpecifiedInEntryElement(System.Object)">
            <summary>
            A string like "Error processing request stream. The type name '{0}' is not an entity type and hence cannot be represented by an entry element in the payload."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_MimeTypeMustBeApplicationAtom(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The mime type '{0}' specified is not valid. The type attribute in link element must have '{1}' as the mime type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeParameterSpecifiedInMimeType(System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The value '{0}' of the 'type' parameter in the 'type' attribute of the link element is not valid. The value must be '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InvalidTypeParameterSpecified_MustBeFeedOrEntry(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. The value '{0}' of the 'type' parameter in the 'type' attribute of the link element is not valid. The value must be '{1}' or '{2}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_LinkHrefMustReferToSingleResource(System.Object)">
            <summary>
            A string like "Error processing request stream. Since the property '{0}' refers to a reference property, the URI specified in the href attribute must refer to a single resource."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadRequest_InlineElementMustContainValidElement(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Error processing request stream. '{0}' is not a valid child element under '{1}' element. The '{1}' can only have '{2}' or '{3}' as child elements and they should live in the atom namespace."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_DifferentContainerRights(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Entity set '{0}' has rights '{1}' applied to it, but entity set '{2}' has rights '{3}'. Entity sets of the same type must have the same rights."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_HasStreamAttributeEmpty(System.Object)">
            <summary>
            A string like "HasStream attribute for entity type '{0}' cannot be empty."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_InvalidDefaultEntityContainerName(System.Object)">
            <summary>
            A string like "Default entity set name '{0}' is not valid. Please make sure that the entity set name is valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_NavigationPropertyUnbound(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Navigation property '{0}' on type '{1}' cannot be used because the entity set '{2}' does not have an association set specified for it."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnableToLoadMetadataForType(System.Object)">
            <summary>
            A string like "Unable to load metadata for type '{0}'. The mapped OSpace type was not found. Please make sure you register the mapped OSpace type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_UnsupportedStreamProperty(System.Object,System.Object)">
            <summary>
            A string like "Unsupported value '{0}' for HasStream attribute on entity type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContext_PrimitiveTypeNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is of type '{2}' which is not a supported primitive type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_MultipleEntitySetsForSameType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Property '{0}' and '{1}' are IQueryable of types '{2}' and '{3}' and type '{2}' is an ancestor for type '{3}'. Please make sure that there is only one IQueryable property for each type hierarchy."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_InvalidProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a valid property. Make sure that the type of the property is a public type and a supported primitive type or a entity type with a valid key or a complex type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_EntityTypeHasKeyButNoEntitySet(System.Object)">
            <summary>
            A string like "Type '{0}' has a key defined through an explicit DataServiceKeyAttribute, but it is not exposed through a top-level IQueryable property on the data context."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_InvalidEntitySetProperty(System.Object,System.Object)">
            <summary>
            A string like "On data context type '{1}', there is a top IQueryable property '{0}' whose element type is not an entity type. Make sure that the IQueryable property is of entity type or specify the IgnoreProperties attribute on the data context type to ignore this property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_EntityPropertyWithNoEntitySet(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' has property '{1}' of entity type. Either this property has no corresponding entity set in the data context or one of its inherited types has a corresponding entity set. Specify IgnoreProperties attribute on the entity type for this property or use a property type that has a corresponding entity set in the data context."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_KeyPropertiesCannotBeIgnored(System.Object)">
            <summary>
            A string like "Key properties cannot be ignored using the IgnoreProperties attribute. For type '{0}', please make sure that there is a key property which is not ignored."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_ETagPropertyNameNotValid(System.Object,System.Object)">
            <summary>
            A string like "The property name'{0}' specified in the ETagAttribute on type '{1}' is not a valid property name. Please specify a valid property name."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_HasStreamAttributeOnlyAppliesToEntityType(System.Object)">
            <summary>
            A string like "Cannot apply the HasStreamAttribute to type '{0}'. HasStreamAttribute is only applicable to entity types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_ComplexTypeWithNavigationProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on a complex type '{1}' is not a valid property. Navigation properties are not supported on complex types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_CollectionOfCollectionProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on a type '{1}' is not a valid property. A collection property that contains collection types is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_CollectionOfUnsupportedTypeProperty(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is a collection property with unsupported item type '{2}'. Only primitive types and complex types are valid item types for a collection property."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ReflectionProvider_ResourceTypeHasNoPublicallyVisibleProperties(System.Object)">
            <summary>
            A string like "The CLR Type '{0}' has no public properties and is not a supported resource type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.TargetElementTypeOfTheUriSpecifiedDoesNotMatchWithTheExpectedType(System.Object,System.Object)">
            <summary>
            A string like "The entity type '{0}' that the URI refers to does not match with the expected entity type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.ObjectContextServiceProvider_OSpaceTypeNotFound(System.Object)">
            <summary>
            A string like "A corresponding ObjectSpace type was not found for the type '{0}'. Please ensure that the ObjectContext or DbContext is valid."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_InvalidTypeSpecified(System.Object)">
            <summary>
            A string like "Internal Server Error. The type '{0}' is not a complex type or an entity type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnableToGetPropertyInfo(System.Object,System.Object)">
            <summary>
            A string like "Internal Server Error. Unable to find property '{1}' on type '{0}'. Please make sure that the property name is correct."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnsupportedType(System.Object)">
            <summary>
            A string like "Internal Server Error. The type '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnsupportedAncestorType(System.Object,System.Object)">
            <summary>
            A string like "Internal Server Error. The type '{0}' derives from '{1}' which is an unsupported type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnsupportedPropertyType(System.Object,System.Object)">
            <summary>
            A string like "Internal Server Error. The property '{0}' is of type '{1}' which is an unsupported type."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_InconsistentEntityOrComplexTypeUsage(System.Object)">
            <summary>
            A string like "Internal Server Error. The type '{0}' has inconsistent metadata and runtime type info."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnknownResourceSet(System.Object)">
            <summary>
            A string like "The resource set '{0}' is not known to the provider."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_UnknownResourceType(System.Object)">
            <summary>
            A string like "The resource type '{0}' is not known to the provider."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_ResourceTypeMustBeDeclaringTypeForProperty(System.Object,System.Object)">
            <summary>
            A string like "The resource type '{0}' must contain the resource property instance '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.BadProvider_PropertyMustBeNavigationPropertyOnType(System.Object,System.Object)">
            <summary>
            A string like "The resource property '{0}' must be a navigation property on the resource type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderUtils_UnsupportedPrimitiveTypeKind(System.Object)">
            <summary>
            A string like "The primitive type kind '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderUtils_ConversionError(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Found invalid value for facet '{0}'. Cannot convert a value of type '{1}' to the expected type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderUtils_PropertiesMustNotContainReservedChars(System.Object,System.Object)">
            <summary>
            A string like "The name '{0}' of a property is invalid; property names must not contain any of the reserved characters {1}."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderEdmModel_UnsupportedSchemaTypeKind(System.Object)">
            <summary>
            A string like "An attempt was made to convert a type of kind '{0}' to a schema type. This is invalid since the type kind '{0}' is not valid for schema types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderEdmModel_UnsupportedResourceTypeKind(System.Object)">
            <summary>
            A string like "The resource type kind '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderEdmModel_UnsupportedCollectionItemType_PrimitiveOrComplex(System.Object)">
            <summary>
            A string like "The resource type kind '{0}' is not supported as the type kind of a collection item type. Only 'Primitive' and 'ComplexType' kinds are supported for collection item types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderEdmModel_UnsupportedCollectionItemType_EntityPrimitiveOrComplex(System.Object)">
            <summary>
            A string like "The resource type kind '{0}' is not supported as the type kind of a collection item type. Only 'Primitive', 'ComplexType' and 'EntityType' kinds are supported for collection item types."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.MetadataProviderEdmModel_UnsupportedResourcePropertyKind(System.Object)">
            <summary>
            A string like "The resource property kind '{0}' is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Services.Strings.General_InternalError(System.Object)">
            <summary>
            A string like "An internal error '{0}' occurred."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BasicExpandProvider_ExpandedPropertiesNotInitialized">
            <summary>
            A string like "Description for expanded properties has not been initialized."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BasicExpandProvider_ProjectedPropertiesNotInitialized">
            <summary>
            A string like "Description for projected properties has not been initialized."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BasicExpandProvider_ExpandNotSupportedForOpenProperties">
            <summary>
            A string like "$expand does not support open properties."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.CallbackQueryOptionHandler_GetRequestsOnly">
            <summary>
            A string like "$callback can only be specified on GET requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceActionProviderWrapper_MustImplementIDataServiceActionProviderToSupportActions">
            <summary>
            A string like "The data service or the data source must implement the IDataServiceActionProvider interface to support service actions."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceActionProviderWrapper_MaxProtocolVersionMustBeV3OrAboveToSupportActions">
            <summary>
            A string like "To support service actions, the MaxProtocolVersion of the data service must be set to DataServiceProtocolVersion.V3 or above."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceActionProviderWrapper_AdvertiseServiceActionCannotReturnNullActionToSerialize">
            <summary>
            A string like "The IDataServiceActionProvider.AdvertiseServiceAction() method must return a non-null value for the actionToSerialize parameter if it returns true."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceProviderWrapper_ContainerNamespaceMustNotBeNullOrEmpty">
            <summary>
            A string like "The value returned by IDataServiceMetadataProvider.ContainerNamespace must not be null or empty."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceProviderWrapper_ContainerNameMustNotBeNullOrEmpty">
            <summary>
            A string like "The value returned by IDataServiceMetadataProvider.ContainerName must not be null or empty."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceProviderWrapper_DataSourceTypeMustBeAssignableToContextType">
            <summary>
            A string like "IDataServiceQueryProvider.CurrentDataSource must return an object of type that is assignable to T in DataService&lt;T&gt;."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceProviderWrapper_AnnotationsBuilderCannotReturnNullModels">
            <summary>
            A string like "The collection returned by DataServiceConfiguration.AnnotationsBuilder must not contain null elements."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceProviderWrapper_MustImplementIDataServiceQueryProvider2WhenIDataServiceMetadataProvider2IsImplemented">
            <summary>
            A string like "The data service or the data source must implement the IDataServiceQueryProvider2 interface when the IDataServiceMetadataProvider2 interface is implemented."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceProviderBehavior_ProviderBehaviorMustBeNonNull">
            <summary>
            A string like "The 'ProviderBehavior' property for IDataServiceProviderBehavior interface must not return a null value."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ErrorHandler_ErrorWhileWritingError">
            <summary>
            A string like "An error occurred while trying to write an error payload."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ETagAttribute_MustSpecifyAtleastOnePropertyName">
            <summary>
            A string like "ETag attribute must specify at least one property name."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpContextServiceHost_WebOperationContextCurrentMissing">
            <summary>
            A string like "There is no System.ServiceModel.Web.WebOperationContext.Current instance."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpContextServiceHost_MalformedHeaderValue">
            <summary>
            A string like "Malformed value in request header."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpContextServiceHost_XMethodNotUsingPost">
            <summary>
            A string like "The X-HTTP-Method header can only be used with POST requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_ContentTypeMissing">
            <summary>
            A string like "Content-Type header value missing."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeMissingValue">
            <summary>
            A string like "Media type is missing a parameter value."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter">
            <summary>
            A string like "Media type requires a ';' character before a parameter definition."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeRequiresSlash">
            <summary>
            A string like "Media type requires a '/' character."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeRequiresSubType">
            <summary>
            A string like "Media type requires a subtype definition."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.HttpProcessUtility_MediaTypeUnspecified">
            <summary>
            A string like "Media type is unspecified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.IgnorePropertiesAttribute_PropertyNameCannotBeNullOrEmpty">
            <summary>
            A string like "The property name specified in the IgnoreProperties attribute cannot be null or empty. Please specify a valid property name."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_CloseParenOrCommaExpected">
            <summary>
            A string like "')' or ',' expected."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_CloseParenOrOperatorExpected">
            <summary>
            A string like "')' or operator expected."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_DigitExpected">
            <summary>
            A string like "Digit expected."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_ExpressionExpected">
            <summary>
            A string like "Expression expected."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_IdentifierExpected">
            <summary>
            A string like "Identifier expected."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_OpenParenExpected">
            <summary>
            A string like "'(' expected."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_SyntaxError">
            <summary>
            A string like "Syntax error."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_AllWithoutAPredicateIsNotSupported">
            <summary>
            A string like "The method 'all' without a supplied predicate is not supported."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryParser_SpatialNotSupported">
            <summary>
            A string like "This data service endpoint does not support spatial literal values in the URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QueryExpandOptionNotApplicable">
            <summary>
            A string like "Query option $expand cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QueryFilterOptionNotApplicable">
            <summary>
            A string like "Query option $filter cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_FormatNotApplicable">
            <summary>
            A string like "Query option $format is not supported on a $batch request."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QueryNoOptionsApplicable">
            <summary>
            A string like "Query options $select, $expand, $filter, $orderby, $inlinecount, $skip, $skiptoken and $top are not supported by this request method or cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QuerySetOptionsNotApplicable">
            <summary>
            A string like "Query options $orderby, $inlinecount, $skip and $top cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_QuerySelectOptionNotApplicable">
            <summary>
            A string like "Query option $select cannot be applied to the requested resource."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_InvalidCountOptionError">
            <summary>
            A string like "Unknown $inlinecount option, only "allpages" and "none" are supported"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_RequestVerbCannotCountError">
            <summary>
            A string like "$count and $inlinecount only apply to an HTTP GET request."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_InlineCountWithValueCount">
            <summary>
            A string like "$inlinecount cannot be applied to the resource segment '$count'"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_SkipTokenSupportedOnPagedSets">
            <summary>
            A string like "A skip token can only be provided in a query request against an entity set when the entity set has a paging limit set."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestQueryProcessor_SkipTokenNotAllowed">
            <summary>
            A string like "Skip tokens can only be provided for requests that return collections of entities."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteRequestUriCannotBeNull">
            <summary>
            A string like "The AbsoluteRequestUri property of the data service host cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteRequestUriMustBeAbsolute">
            <summary>
            A string like "The AbsoluteRequestUri property of the data service host must be an absolute URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteServiceUriCannotBeNull">
            <summary>
            A string like "The AbsoluteServiceUri property of the data service host cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_AbsoluteServiceUriMustBeAbsolute">
            <summary>
            A string like "The AbsoluteServiceUri property of the data service host must be an absolute URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_Forbidden">
            <summary>
            A string like "Forbidden"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_KeysMustBeNamed">
            <summary>
            A string like "Segments with multiple key values must specify them in 'name=value' form."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_MethodNotAllowed">
            <summary>
            A string like "Method Not Allowed"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_SyntaxError">
            <summary>
            A string like "Bad Request - Error in query syntax."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_TooManySegments">
            <summary>
            A string like "Too many segments in URI."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_EmptySegmentInRequestUrl">
            <summary>
            A string like "Empty segment encountered in request URL. Please make sure that a valid request URL is specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_CountOnRoot">
            <summary>
            A string like "The request URI is not valid, the segment $count cannot be applied to the root of the service."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.RequestUriProcessor_ActionComposedWithWebInvokeServiceOperationNotAllowed">
            <summary>
            A string like "An action cannot be composed with a service operation that uses the WebInvokeAttribute."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.PathParser_FunctionsAreNotSupported">
            <summary>
            A string like "Functions are not supported in this version. Only Actions and Service Operations are supported."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceContainer_ContainerMustBeAssociatedWithEntityType">
            <summary>
            A string like "The ResourceTypeKind property of a ResourceType instance that is associated with a ResourceSet must have a value of 'EntityType'."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_NoKeysInDerivedTypes">
            <summary>
            A string like "Key properties cannot be defined in derived types."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_KeyPropertiesOnlyOnEntityTypes">
            <summary>
            A string like "Key properties can only be added to ResourceType instances with a ResourceTypeKind equal to 'EntityType'."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_ETagPropertiesOnlyOnEntityTypes">
            <summary>
            A string like "ETag properties can only be added to ResourceType instances with a ResourceTypeKind equal to 'EntityType'."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_TypeCannotBeValueType">
            <summary>
            A string like "The CLR type for the resource type cannot be a value type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_CollectionItemCanBeOnlyPrimitiveOrComplex">
            <summary>
            A string like "Only collection properties that contain primitive types or complex types are supported."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceType_CollectionItemCanBeOnlyEntity">
            <summary>
            A string like "Only collections of an entity type are supported."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceProperty_KeyPropertiesCannotBeNullable">
            <summary>
            A string like "Key Properties cannot be of nullable type. Please make sure the type of this property is not of Nullable&lt;&gt; type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceProperty_NamedStreamCannotReflect">
            <summary>
            A string like "The property 'CanReflectOnInstanceTypeProperty' on a NamedStream property is not settable."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceProperty_NamedStreamKindMustBeUsedAlone">
            <summary>
            A string like "Invalid ResourcePropertyKind, ResourcePropertyKind.Stream must not be combined with any other flag."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.Serializer_ETagValueDoesNotMatch">
            <summary>
            A string like "The etag value in the request header does not match with the current etag value of the object."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.Serializer_NoETagPropertiesForType">
            <summary>
            A string like "If-Match or If-None-Match headers cannot be specified if the target type does not have etag properties defined."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ServiceOperation_ActionBindingMustBeEntityOrEntityCollection">
            <summary>
            A string like "An action's binding parameter must be of type Entity or EntityCollection."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ServiceOperation_BindableOperationMustHaveAtLeastOneParameter">
            <summary>
            A string like "Bindable actions or functions must have at least one parameter, where the first parameter is the binding parameter."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ServiceOperation_VoidFunctionNotAllowed">
            <summary>
            A string like "A function that returns void is a routine with no observable result; such function is now allowed in the data service."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.SingleResourceExpected">
            <summary>
            A string like "A single resource was expected for the result, but multiple resources were found."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ObjectContext_SyndicationMappingForComplexPropertiesNotAllowed">
            <summary>
            A string like "EntityPropertyMapping for complex types is not allowed when being mapped to Syndication specific entities."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ObjectContext_IfNoneMatchHeaderNotSupportedInUpdateAndDelete">
            <summary>
            A string like "If-None-Match HTTP header cannot be specified for update and delete operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_BatchResourceOnlySupportsPost">
            <summary>
            A string like "The /$batch resource only supports POST method requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_CreateDataSourceNull">
            <summary>
            A string like "The method CreateDataService has been overridden but it returned a null value; a valid instance is required."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_HostNotAttached">
            <summary>
            A string like "There is no host attached to this service. Call AttachHost to provide a valid host that can provide a request to process."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_NotImplementedException">
            <summary>
            A string like "Not Implemented"
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_BothIfMatchAndIfNoneMatchHeaderSpecified">
            <summary>
            A string like "Both If-Match and If-None-Match HTTP headers cannot be specified at the same time. Please specify either one of the headers or none of them."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_ETagSpecifiedForPost">
            <summary>
            A string like "If-Match or If-None-Match HTTP headers cannot be specified for POST operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_ETagSpecifiedForServiceAction">
            <summary>
            A string like "If-Match or If-None-Match HTTP headers cannot be specified for service actions."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_IfNoneMatchHeaderNotSupportedInDelete">
            <summary>
            A string like "If-None-Match HTTP header cannot be specified for DELETE operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_IfNoneMatchHeaderNotSupportedInPut">
            <summary>
            A string like "If-None-Match HTTP header cannot be specified for PUT operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_ETagNotSupportedInUnbind">
            <summary>
            A string like "If-Match or If-None-Match HTTP headers cannot be specified for DELETE operations to $link end points."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_InvalidContentTypeForBatchRequest">
            <summary>
            A string like "The content type specified in not valid for batch requests. Content type must be 'multipart/mixed' and there must be a valid single boundary delimiter specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_OnlyGetOperationSupportedOnServiceUrl">
            <summary>
            A string like "The URL representing the root of the service only supports GET requests."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_SDP_PageSizeWithMaxResultsPerCollection">
            <summary>
            A string like "Specification of entity set page size is mutually exclusive with the specification of MaxResultsPerCollection property in configuration."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_SDP_TopLevelPagedResultWithOldExpandProvider">
            <summary>
            A string like "The request could not be processed because the data service implements IExpandProvider, which does not support the paging of top-level results."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_RegisterKnownTypeNotAllowedForIDSP">
            <summary>
            A string like "Adding types through RegisterKnownType() is not supported for providers instantiated by the user."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_Projections_ProjectionsWithOldExpandProvider">
            <summary>
            A string like "The request could not be processed because the data service implements IExpandProvider, which does not support projection."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_IDataServiceQueryProviderNull">
            <summary>
            A string like "For custom providers, if GetService returns non-null for IDataServiceMetadataProvider, it must not return null for IDataServiceQueryProvider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_CannotUpdateSetReferenceLinks">
            <summary>
            A string like "Update operations are not supported for '$links' end points that refer to collection properties."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_DerivedExpansions_OldExpandProvider">
            <summary>
            A string like "The request could not be processed because the data service implements IExpandProvider, which does not support expansions on derived navigation properties."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceAssociationSetEnd_ResourcePropertyMustBeNavigationPropertyOnResourceType">
            <summary>
            A string like "The resourceProperty parameter must be a navigation property on the resource type specified by the resourceType parameter."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceAssociationSetEnd_ResourceTypeMustBeAssignableToResourceSet">
            <summary>
            A string like "The resourceType parameter must be a type that is assignable to the resource set specified by the resourceSet parameter."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceAssociationSet_ResourcePropertyCannotBeBothNull">
            <summary>
            A string like "The ResourceProperty of the ResourceAssociationEnds cannot both be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceAssociationSet_BidirectionalAssociationMustReturnSameResourceAssociationSetFromBothEnd">
            <summary>
            A string like "When the ResourceAssociationSet is bidirectional, IDataServiceMetadataProvider.GetResourceAssociationSet() must return the same ResourceAssociationSet when call from both ends."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ResourceAssociationSet_SelfReferencingAssociationCannotBeBiDirectional">
            <summary>
            A string like "The ends of a ResourceAssociationSet cannot both have the same ResourceType and ResourceProperty values. If this is a self-referencing association, the ResourceAssociationSet must be unidirectional with the ResourceProperty on one of the ends set to null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceHost_EmptyHttpMethod">
            <summary>
            A string like "There is no HTTP method specified by the host."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceHost_RequestHeadersCannotBeNull">
            <summary>
            A string like "The RequestHeaders property of the data service host cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceHost_ResponseHeadersCannotBeNull">
            <summary>
            A string like "The ResponseHeaders property of the data service host cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceHost_FeatureRequiresIDataServiceHost2">
            <summary>
            A string like "The data service cannot access the requested information. To be able to access this information, the process that hosts the data service must implement the IDataServiceHost2 interface."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_InvalidStreamFromGetWriteStream">
            <summary>
            A string like "IDataServiceStreamProvider.GetWriteStream() must return a valid writable stream."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataService_InvalidStreamFromGetReadStream">
            <summary>
            A string like "IDataServiceStreamProvider.GetReadStream() must return a valid readable stream."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceConfiguration_CountNotAccepted">
            <summary>
            A string like "The ability of the data service to return row count information is disabled. To enable this functionality, set the DataServiceConfiguration.AcceptCountRequests property to true."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceConfiguration_ProjectionsNotAccepted">
            <summary>
            A string like "The ability to use the $select query option to define a projection in a data service query is disabled. To enable this functionality, set the DataServiceConfiguration. AcceptProjectionRequests property to true."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceConfiguration_ServerPagingNotSupportedInV1Server">
            <summary>
            A string like "Server paging cannot be used when the MaxProtocolVersion of the data service is set to DataServiceProtocolVersion.V1."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceException_GeneralError">
            <summary>
            A string like "An error occurred while processing this request."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceException_UnsupportedMediaType">
            <summary>
            A string like "Unsupported media type requested."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.WebUtil_ArgumentNullOrEmpty">
            <summary>
            A string like "Value cannot be null or empty."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_NullRequestStream">
            <summary>
            A string like "Error in processing request - there is no request body available."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_NullResponseStream">
            <summary>
            A string like "Error in processing request - IDataServiceHost.ResponseStream cannot be null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_CannotNullifyValueTypeProperty">
            <summary>
            A string like "The request is not valid. To set a value to null, the URI must refer to a property whose type is not of value type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.UpdatableWrapper_MissingIUpdatableForV1Provider">
            <summary>
            A string like "The data source must implement IUpdatable, IDataServiceUpdateProvider or IDataServiceUpdateProvider2 to support updates."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.UpdatableWrapper_MissingUpdateProviderInterface">
            <summary>
            A string like "The data source must implement IDataServiceUpdateProvider or IDataServiceUpdateProvider2 to support updates."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.UpdatableWrapper_MaxProtocolVersionMustBeV3OrAboveToSupportServiceActions">
            <summary>
            A string like "To support service actions, the MaxProtocolVersion of the data service must be set to DataServiceProtocolVersion.V3 or above."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.UpdatableWrapper_MustImplementDataServiceUpdateProvider2ToSupportServiceActions">
            <summary>
            A string like "To support service actions, the data service must implement IServiceProvider.GetService() to return an implementation of IDataServiceUpdateProvider2 or the data source must implement IDataServiceUpdateProvider2."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_MaxProtocolVersionMustBeV3OrAboveToSupportNamedStreams">
            <summary>
            A string like "To support named streams, the MaxProtocolVersion of the data service must be set to DataServiceProtocolVersion.V3 or above."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_MustImplementIDataServiceStreamProviderToSupportStreaming">
            <summary>
            A string like "To support streaming, the data service must implement IServiceProvider.GetService() to return an implementation of IDataServiceStreamProvider or the data source must implement IDataServiceStreamProvider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_MustImplementDataServiceStreamProvider2ToSupportNamedStreams">
            <summary>
            A string like "To support named streams, the data service must implement IServiceProvider.GetService() to return an implementation of IDataServiceStreamProvider2 or the data source must implement IDataServiceStreamProvider2."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_GetStreamContentTypeReturnsEmptyOrNull">
            <summary>
            A string like "The method 'IDataServiceStreamProvider.GetStreamContentType' must not return a null or empty string."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_GetReadStreamUriMustReturnAbsoluteUriOrNull">
            <summary>
            A string like "The method 'IDataServiceStreamProvider.GetReadStreamUri' must return an absolute Uri or null."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_GetStreamETagReturnedInvalidETagFormat">
            <summary>
            A string like "The method 'IDataServiceStreamProvider.GetStreamETag' returned an entity tag with invalid format."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceStreamProviderWrapper_ResolveTypeMustReturnValidResourceTypeName">
            <summary>
            A string like "The method 'IDataServiceStreamProvider.ResolveType' must return a valid resource type name."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_DeepRecursion_General">
            <summary>
            A string like "Recursion reached allowed limit."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_ValuesCanBeReturnedForPrimitiveTypesOnly">
            <summary>
            A string like "$value must be only specified for primitive values. Please make sure that property is a primitive type property."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_ValuesCannotBeReturnedForSpatialTypes">
            <summary>
            A string like "$value must not be specified for spatial values. "
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_InvalidUriSpecified">
            <summary>
            A string like "Error processing request stream. The URI specified is not valid."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingTypeInformationForOpenTypeProperties">
            <summary>
            A string like "Error processing request stream. Type information is not specified for open property."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_DeepUpdateNotSupported">
            <summary>
            A string like "Error processing request stream. Deep updates are not supported in PUT, MERGE, or PATCH operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_TypeInformationMustBeSpecifiedForInhertiance">
            <summary>
            A string like "Error processing request stream. Type information must be specified for types that take part in inheritance."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_UriMissingForUpdateForDeepUpdates">
            <summary>
            A string like "Error processing request stream. In PUT operations, URI must be specified for binding operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation">
            <summary>
            A string like "Error processing request stream. In batch mode, a resource can be cross-referenced only for bind/unbind operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_MissingUriForLinkOperation">
            <summary>
            A string like "Missing URI element. For link operations, URI element must be specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_CannotUpdateRelatedEntitiesInPut">
            <summary>
            A string like "Error processing request stream. Binding to new entities is not supported in PUT operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_CollectionOfCollectionNotSupported">
            <summary>
            A string like "Collection properties of a collection type are not supported."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.CollectionCanOnlyBeEnumeratedOnce">
            <summary>
            A string like "The value of a collection property can only be enumerated once."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidResourceEntity">
            <summary>
            A string like "Error processing request stream. The request should be a valid top-level resource object."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidMetadataContent">
            <summary>
            A string like "Error processing request stream. '__metadata' element must be a valid JSON object."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidTypeMetadata">
            <summary>
            A string like "Error processing request stream. The 'type' element value in '__metadata' must be of string type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidUriMetadata">
            <summary>
            A string like "Error processing request stream. 'uri' element value must be of string type."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidContent">
            <summary>
            A string like "Error processing request stream. JSON text specified is not valid."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingArrayMemberSeperator">
            <summary>
            A string like "Error processing request stream. Missing ',' between array elements."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingMemberName">
            <summary>
            A string like "Error processing request stream. In JSON, every object is made up of name/value pairs and the name must be specified."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_MissingMemberSeperator">
            <summary>
            A string like "Error processing request stream. In JSON, every object is made up of name/value pairs and every name/value pair must be separated by ','."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidJsonNameSpecifiedOrExtraComma">
            <summary>
            A string like "Error processing request stream. Either an extra comma is specified at the end or name is an empty string."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequestStream_InvalidJsonUnrecognizedEscapeSequence">
            <summary>
            A string like "Error processing request stream. Unrecognized escape sequence found in JSON string."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadRequest_MoreThanOneUriElementSpecified">
            <summary>
            A string like "Error processing request stream. Exactly one URI must be specified for link operations."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.ObjectContext_ExpandTooDeep">
            <summary>
            A string like "The specified $expand option is too deep."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadProvider_ResolveResourceReturnedNull">
            <summary>
            A string like "Internal Server Error. ResolveResource returned null value. Please contact the provider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadProvider_CreateResourceReturnedNull">
            <summary>
            A string like "Internal Server Error. CreateResource returned null value. Please contact the provider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.BadProvider_ResetResourceReturnedNull">
            <summary>
            A string like "Internal Server Error. ResetResource returned null value. Please contact the provider."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.AstoriaRequestMessage_CannotModifyRequestOrServiceUriAfterReadOnly">
            <summary>
            A string like "The request URI and service URI cannot be modified after the OnStartProcessingRequest method has returned."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.AstoriaRequestMessage_CannotChangeQueryString">
            <summary>
            A string like "The query string of the request URI cannot be modified in the OnStartProcessingRequest method."
            </summary>
        </member>
        <member name="P:System.Data.Services.Strings.DataServiceOperationContext_CannotModifyServiceUriInsideBatch">
            <summary>
            A string like "The service URI cannot be modified when processing a request inside a $batch payload. The ProcessRequestArgs.IsBatchOperation property will be true when inside a $batch payload."
            </summary>
        </member>
    </members>
</doc>
